var cov_2399n474qb=function(){var path="/opt/repos/app-owbn/lib/rpc/common/viewCharacter.js";var hash="b9d0dcc1e80e73d92d3df80218e67b08f5a4ce5b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/opt/repos/app-owbn/lib/rpc/common/viewCharacter.js",statementMap:{"0":{start:{line:2,column:21},end:{line:2,column:46}},"1":{start:{line:3,column:19},end:{line:3,column:38}},"2":{start:{line:4,column:11},end:{line:4,column:42}},"3":{start:{line:12,column:4},end:{line:12,column:52}},"4":{start:{line:13,column:4},end:{line:13,column:101}},"5":{start:{line:14,column:31},end:{line:19,column:6}},"6":{start:{line:23,column:4},end:{line:28,column:5}},"7":{start:{line:24,column:8},end:{line:24,column:91}},"8":{start:{line:25,column:8},end:{line:25,column:74}},"9":{start:{line:26,column:8},end:{line:26,column:46}},"10":{start:{line:27,column:8},end:{line:27,column:34}},"11":{start:{line:29,column:4},end:{line:34,column:5}},"12":{start:{line:30,column:8},end:{line:30,column:88}},"13":{start:{line:31,column:8},end:{line:31,column:71}},"14":{start:{line:32,column:8},end:{line:32,column:46}},"15":{start:{line:33,column:8},end:{line:33,column:34}},"16":{start:{line:38,column:4},end:{line:62,column:5}},"17":{start:{line:39,column:22},end:{line:42,column:9}},"18":{start:{line:44,column:8},end:{line:44,column:81}},"19":{start:{line:45,column:26},end:{line:45,column:49}},"20":{start:{line:48,column:8},end:{line:57,column:9}},"21":{start:{line:49,column:12},end:{line:49,column:104}},"22":{start:{line:51,column:12},end:{line:51,column:51}},"23":{start:{line:52,column:12},end:{line:52,column:50}},"24":{start:{line:54,column:12},end:{line:54,column:90}},"25":{start:{line:55,column:12},end:{line:55,column:71}},"26":{start:{line:56,column:12},end:{line:56,column:50}},"27":{start:{line:59,column:8},end:{line:59,column:85}},"28":{start:{line:60,column:8},end:{line:60,column:61}},"29":{start:{line:61,column:8},end:{line:61,column:46}},"30":{start:{line:65,column:4},end:{line:65,column:110}},"31":{start:{line:66,column:4},end:{line:66,column:30}},"32":{start:{line:69,column:0},end:{line:69,column:31}}},fnMap:{"0":{name:"viewSheet",decl:{start:{line:11,column:15},end:{line:11,column:24}},loc:{start:{line:11,column:40},end:{line:67,column:1}},line:11}},branchMap:{"0":{loc:{start:{line:23,column:4},end:{line:28,column:5}},type:"if",locations:[{start:{line:23,column:4},end:{line:28,column:5}},{start:{line:23,column:4},end:{line:28,column:5}}],line:23},"1":{loc:{start:{line:29,column:4},end:{line:34,column:5}},type:"if",locations:[{start:{line:29,column:4},end:{line:34,column:5}},{start:{line:29,column:4},end:{line:34,column:5}}],line:29},"2":{loc:{start:{line:48,column:8},end:{line:57,column:9}},type:"if",locations:[{start:{line:48,column:8},end:{line:57,column:9}},{start:{line:48,column:8},end:{line:57,column:9}}],line:48}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"b9d0dcc1e80e73d92d3df80218e67b08f5a4ce5b"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();/* globals log database */const{Response}=(cov_2399n474qb.s[0]++,require('../../Response'));const Collection=(cov_2399n474qb.s[1]++,'owbnVampireSheets');const db=(cov_2399n474qb.s[2]++,database.collection(Collection));/**
 * Tests to see if the devices are synced.
 * @param {object} requestObject Character Sheet
 * @returns {Object} Returned object showing success or failure of action
 */async function viewSheet(requestObject){cov_2399n474qb.f[0]++;cov_2399n474qb.s[3]++;log.debug('Starting: viewCharacter.viewSheet.');cov_2399n474qb.s[4]++;log.trace(`Starting: viewCharacter.viewSheet. sheet object : ${JSON.stringify(requestObject)} `);const validationResponse=(cov_2399n474qb.s[5]++,new Response({from:'createSheet',responseCode:400,message:'',step:'Create Sheet'}));// Updates must always include player and character name.  Without those, there can be no request.
// Throw an error if his happens.
cov_2399n474qb.s[6]++;if(!requestObject.name){cov_2399n474qb.b[0][0]++;cov_2399n474qb.s[7]++;log.debug('Update: viewCharacter.createSheet. value of character name not found!');cov_2399n474qb.s[8]++;validationResponse.message='Value of character name not found!';cov_2399n474qb.s[9]++;validationResponse.responseCode=456;cov_2399n474qb.s[10]++;return validationResponse;}else{cov_2399n474qb.b[0][1]++;}cov_2399n474qb.s[11]++;if(!requestObject.player){cov_2399n474qb.b[1][0]++;cov_2399n474qb.s[12]++;log.debug('Update: viewCharacter.createSheet. value of player name not found!');cov_2399n474qb.s[13]++;validationResponse.message='Value of player name not found!';cov_2399n474qb.s[14]++;validationResponse.responseCode=456;cov_2399n474qb.s[15]++;return validationResponse;}else{cov_2399n474qb.b[1][1]++;}// This is what we are going to use for our sheet definition critera.
// No player may have two characters of the same name.
cov_2399n474qb.s[16]++;try{const query=(cov_2399n474qb.s[17]++,{name:requestObject.name,player:requestObject.player});// Is sheet currently in DB?
cov_2399n474qb.s[18]++;log.debug('Update: viewCharacter.viewSheet. Is sheet currently in DB? ');const deviceCol=(cov_2399n474qb.s[19]++,await db.findOne(query));// If We find the sheet, return it
cov_2399n474qb.s[20]++;if(deviceCol){cov_2399n474qb.b[2][0]++;cov_2399n474qb.s[21]++;log.debug('Update: viewCharacter.viewSheet : Sheet found, adding sheet to responce object');// Insert Sheet into DB
cov_2399n474qb.s[22]++;validationResponse.message=deviceCol;cov_2399n474qb.s[23]++;validationResponse.responseCode=200;}else{cov_2399n474qb.b[2][1]++;cov_2399n474qb.s[24]++;log.debug('Update: viewCharacter.viewSheet : sheet not found, cannot return');cov_2399n474qb.s[25]++;validationResponse.message='Sheet not found in database';cov_2399n474qb.s[26]++;validationResponse.responseCode=455;}}catch(err){cov_2399n474qb.s[27]++;log.error(`Update: viewCharacter.viewSheet : Sheet request failed : ${err}`);cov_2399n474qb.s[28]++;validationResponse.message='Sheet request failed.';cov_2399n474qb.s[29]++;validationResponse.responseCode=457;}// Return Results
cov_2399n474qb.s[30]++;log.debug(`Ending: viewCharacter.viewSheet. validationResponse : ${JSON.stringify(validationResponse)} `);cov_2399n474qb.s[31]++;return validationResponse;}cov_2399n474qb.s[32]++;module.exports={viewSheet};