var cov_2qzxdd14yn=function(){var path="/opt/repos/app-owbn/lib/rpc/player/charUtils.js";var hash="62b20792415339a6ac7b8b919f736cb812930bfc";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/opt/repos/app-owbn/lib/rpc/player/charUtils.js",statementMap:{"0":{start:{line:2,column:21},end:{line:2,column:46}},"1":{start:{line:3,column:19},end:{line:3,column:35}},"2":{start:{line:4,column:11},end:{line:4,column:42}},"3":{start:{line:12,column:4},end:{line:12,column:105}},"4":{start:{line:13,column:31},end:{line:18,column:6}},"5":{start:{line:22,column:4},end:{line:27,column:5}},"6":{start:{line:23,column:8},end:{line:23,column:91}},"7":{start:{line:24,column:8},end:{line:24,column:74}},"8":{start:{line:25,column:8},end:{line:25,column:46}},"9":{start:{line:26,column:8},end:{line:26,column:34}},"10":{start:{line:28,column:4},end:{line:33,column:5}},"11":{start:{line:29,column:8},end:{line:29,column:88}},"12":{start:{line:30,column:8},end:{line:30,column:71}},"13":{start:{line:31,column:8},end:{line:31,column:46}},"14":{start:{line:32,column:8},end:{line:32,column:34}},"15":{start:{line:36,column:4},end:{line:71,column:5}},"16":{start:{line:37,column:22},end:{line:39,column:9}},"17":{start:{line:41,column:8},end:{line:41,column:90}},"18":{start:{line:42,column:24},end:{line:42,column:47}},"19":{start:{line:43,column:8},end:{line:43,column:78}},"20":{start:{line:46,column:8},end:{line:66,column:9}},"21":{start:{line:47,column:12},end:{line:47,column:105}},"22":{start:{line:49,column:35},end:{line:49,column:82}},"23":{start:{line:50,column:12},end:{line:50,column:94}},"24":{start:{line:53,column:12},end:{line:53,column:56}},"25":{start:{line:54,column:12},end:{line:54,column:50}},"26":{start:{line:56,column:12},end:{line:60,column:13}},"27":{start:{line:57,column:16},end:{line:57,column:84}},"28":{start:{line:59,column:16},end:{line:59,column:88}},"29":{start:{line:62,column:12},end:{line:62,column:105}},"30":{start:{line:63,column:12},end:{line:63,column:72}},"31":{start:{line:64,column:12},end:{line:64,column:47}},"32":{start:{line:65,column:12},end:{line:65,column:50}},"33":{start:{line:68,column:8},end:{line:68,column:88}},"34":{start:{line:69,column:8},end:{line:69,column:62}},"35":{start:{line:70,column:8},end:{line:70,column:46}},"36":{start:{line:73,column:4},end:{line:73,column:112}},"37":{start:{line:74,column:4},end:{line:74,column:30}},"38":{start:{line:78,column:4},end:{line:78,column:108}},"39":{start:{line:79,column:4},end:{line:79,column:110}},"40":{start:{line:80,column:31},end:{line:85,column:6}},"41":{start:{line:89,column:4},end:{line:95,column:5}},"42":{start:{line:90,column:8},end:{line:90,column:96}},"43":{start:{line:91,column:8},end:{line:91,column:98}},"44":{start:{line:92,column:8},end:{line:92,column:74}},"45":{start:{line:93,column:8},end:{line:93,column:46}},"46":{start:{line:94,column:8},end:{line:94,column:34}},"47":{start:{line:96,column:4},end:{line:102,column:5}},"48":{start:{line:97,column:8},end:{line:97,column:93}},"49":{start:{line:98,column:8},end:{line:98,column:95}},"50":{start:{line:99,column:8},end:{line:99,column:71}},"51":{start:{line:100,column:8},end:{line:100,column:46}},"52":{start:{line:101,column:8},end:{line:101,column:34}},"53":{start:{line:105,column:4},end:{line:169,column:5}},"54":{start:{line:106,column:22},end:{line:108,column:9}},"55":{start:{line:110,column:8},end:{line:110,column:90}},"56":{start:{line:111,column:8},end:{line:111,column:92}},"57":{start:{line:112,column:24},end:{line:112,column:47}},"58":{start:{line:113,column:8},end:{line:113,column:78}},"59":{start:{line:114,column:8},end:{line:114,column:80}},"60":{start:{line:117,column:8},end:{line:163,column:9}},"61":{start:{line:118,column:12},end:{line:118,column:105}},"62":{start:{line:119,column:12},end:{line:119,column:107}},"63":{start:{line:121,column:35},end:{line:121,column:82}},"64":{start:{line:122,column:12},end:{line:122,column:94}},"65":{start:{line:123,column:12},end:{line:123,column:96}},"66":{start:{line:125,column:12},end:{line:156,column:13}},"67":{start:{line:126,column:16},end:{line:126,column:84}},"68":{start:{line:129,column:16},end:{line:129,column:60}},"69":{start:{line:130,column:16},end:{line:130,column:86}},"70":{start:{line:131,column:16},end:{line:131,column:54}},"71":{start:{line:134,column:40},end:{line:140,column:19}},"72":{start:{line:141,column:16},end:{line:141,column:102}},"73":{start:{line:142,column:16},end:{line:142,column:118}},"74":{start:{line:143,column:16},end:{line:143,column:104}},"75":{start:{line:144,column:16},end:{line:144,column:120}},"76":{start:{line:146,column:41},end:{line:146,column:76}},"77":{start:{line:147,column:16},end:{line:147,column:122}},"78":{start:{line:148,column:16},end:{line:148,column:124}},"79":{start:{line:151,column:16},end:{line:153,column:17}},"80":{start:{line:152,column:20},end:{line:152,column:122}},"81":{start:{line:154,column:16},end:{line:154,column:121}},"82":{start:{line:155,column:16},end:{line:155,column:54}},"83":{start:{line:158,column:12},end:{line:158,column:105}},"84":{start:{line:159,column:12},end:{line:159,column:107}},"85":{start:{line:160,column:12},end:{line:160,column:72}},"86":{start:{line:161,column:12},end:{line:161,column:47}},"87":{start:{line:162,column:12},end:{line:162,column:50}},"88":{start:{line:165,column:8},end:{line:165,column:88}},"89":{start:{line:166,column:8},end:{line:166,column:90}},"90":{start:{line:167,column:8},end:{line:167,column:62}},"91":{start:{line:168,column:8},end:{line:168,column:46}},"92":{start:{line:172,column:4},end:{line:172,column:117}},"93":{start:{line:173,column:4},end:{line:173,column:119}},"94":{start:{line:174,column:4},end:{line:174,column:30}},"95":{start:{line:177,column:0},end:{line:177,column:59}}},fnMap:{"0":{name:"havePermissions",decl:{start:{line:11,column:15},end:{line:11,column:30}},loc:{start:{line:11,column:46},end:{line:75,column:1}},line:11},"1":{name:"addCharacterToPlayer",decl:{start:{line:77,column:15},end:{line:77,column:35}},loc:{start:{line:77,column:51},end:{line:175,column:1}},line:77}},branchMap:{"0":{loc:{start:{line:22,column:4},end:{line:27,column:5}},type:"if",locations:[{start:{line:22,column:4},end:{line:27,column:5}},{start:{line:22,column:4},end:{line:27,column:5}}],line:22},"1":{loc:{start:{line:28,column:4},end:{line:33,column:5}},type:"if",locations:[{start:{line:28,column:4},end:{line:33,column:5}},{start:{line:28,column:4},end:{line:33,column:5}}],line:28},"2":{loc:{start:{line:46,column:8},end:{line:66,column:9}},type:"if",locations:[{start:{line:46,column:8},end:{line:66,column:9}},{start:{line:46,column:8},end:{line:66,column:9}}],line:46},"3":{loc:{start:{line:56,column:12},end:{line:60,column:13}},type:"if",locations:[{start:{line:56,column:12},end:{line:60,column:13}},{start:{line:56,column:12},end:{line:60,column:13}}],line:56},"4":{loc:{start:{line:89,column:4},end:{line:95,column:5}},type:"if",locations:[{start:{line:89,column:4},end:{line:95,column:5}},{start:{line:89,column:4},end:{line:95,column:5}}],line:89},"5":{loc:{start:{line:96,column:4},end:{line:102,column:5}},type:"if",locations:[{start:{line:96,column:4},end:{line:102,column:5}},{start:{line:96,column:4},end:{line:102,column:5}}],line:96},"6":{loc:{start:{line:117,column:8},end:{line:163,column:9}},type:"if",locations:[{start:{line:117,column:8},end:{line:163,column:9}},{start:{line:117,column:8},end:{line:163,column:9}}],line:117},"7":{loc:{start:{line:125,column:12},end:{line:156,column:13}},type:"if",locations:[{start:{line:125,column:12},end:{line:156,column:13}},{start:{line:125,column:12},end:{line:156,column:13}}],line:125},"8":{loc:{start:{line:151,column:16},end:{line:153,column:17}},type:"if",locations:[{start:{line:151,column:16},end:{line:153,column:17}},{start:{line:151,column:16},end:{line:153,column:17}}],line:151}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"62b20792415339a6ac7b8b919f736cb812930bfc"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();/* globals log database */const{Response}=(cov_2qzxdd14yn.s[0]++,require('../../Response'));const Collection=(cov_2qzxdd14yn.s[1]++,'owbnPlayerList');const db=(cov_2qzxdd14yn.s[2]++,database.collection(Collection));/**
 * Tests to see if the devices are synced.
 * @param {object} requestObject Request showing user name and character name
 * @returns {Object} Returned object showing successful permission or failed permission
 */async function havePermissions(requestObject){cov_2qzxdd14yn.f[0]++;cov_2qzxdd14yn.s[3]++;log.debug(`Starting: charUtils.havePermissions. request object : ${JSON.stringify(requestObject)} `);const validationResponse=(cov_2qzxdd14yn.s[4]++,new Response({from:'havePermissions',responseCode:400,message:'',step:'Test Player Permissions for Character'}));// Updates must always include player and character name.  Without those, there can be no request.
// Throw an error if his happens.
cov_2qzxdd14yn.s[5]++;if(!requestObject.name){cov_2qzxdd14yn.b[0][0]++;cov_2qzxdd14yn.s[6]++;log.debug('Update: charUtils.havePermissions. value of character name not found!');cov_2qzxdd14yn.s[7]++;validationResponse.message='Value of character name not found!';cov_2qzxdd14yn.s[8]++;validationResponse.responseCode=456;cov_2qzxdd14yn.s[9]++;return validationResponse;}else{cov_2qzxdd14yn.b[0][1]++;}cov_2qzxdd14yn.s[10]++;if(!requestObject.player){cov_2qzxdd14yn.b[1][0]++;cov_2qzxdd14yn.s[11]++;log.debug('Update: charUtils.havePermissions. value of player name not found!');cov_2qzxdd14yn.s[12]++;validationResponse.message='Value of player name not found!';cov_2qzxdd14yn.s[13]++;validationResponse.responseCode=456;cov_2qzxdd14yn.s[14]++;return validationResponse;}else{cov_2qzxdd14yn.b[1][1]++;}// We are going to pull a list of all of the characters that a player has permissions for
cov_2qzxdd14yn.s[15]++;try{const query=(cov_2qzxdd14yn.s[16]++,{name:requestObject.player});// Is sheet currently in DB?
cov_2qzxdd14yn.s[17]++;log.debug(`Update: charUtils.havePermissions : query : ${JSON.stringify(query)}`);const charCol=(cov_2qzxdd14yn.s[18]++,await db.findOne(query));cov_2qzxdd14yn.s[19]++;log.debug(`Update: charUtils.havePermissions : charCol : ${charCol}`);// If We find the sheet, return it
cov_2qzxdd14yn.s[20]++;if(charCol){cov_2qzxdd14yn.b[2][0]++;cov_2qzxdd14yn.s[21]++;log.debug('Update: charUtils.havePermissions : Player Found, checking available characters');// Is the requested character in the pulled list
const foundCharacter=(cov_2qzxdd14yn.s[22]++,charCol.characters.includes(requestObject.name));cov_2qzxdd14yn.s[23]++;log.debug(`Update: charUtils.havePermissions : foundCharacter ${foundCharacter}`);// If foundCharacter is true, return a true value -- otherwise set the message to false
cov_2qzxdd14yn.s[24]++;validationResponse.results=foundCharacter;cov_2qzxdd14yn.s[25]++;validationResponse.responseCode=200;cov_2qzxdd14yn.s[26]++;if(foundCharacter){cov_2qzxdd14yn.b[3][0]++;cov_2qzxdd14yn.s[27]++;validationResponse.message='Character found in player repository';}else{cov_2qzxdd14yn.b[3][1]++;cov_2qzxdd14yn.s[28]++;validationResponse.message='Character NOT found in player repository';}}else{cov_2qzxdd14yn.b[2][1]++;cov_2qzxdd14yn.s[29]++;log.debug('Update: charUtils.havePermissions : Player Not Found unable to check characters');cov_2qzxdd14yn.s[30]++;validationResponse.message='Player not found in database';cov_2qzxdd14yn.s[31]++;validationResponse.results='N/A';cov_2qzxdd14yn.s[32]++;validationResponse.responseCode=455;}}catch(err){cov_2qzxdd14yn.s[33]++;log.error(`Update: charUtils.havePermissions : Player request failed : ${err}`);cov_2qzxdd14yn.s[34]++;validationResponse.message='Player request failed.';cov_2qzxdd14yn.s[35]++;validationResponse.responseCode=457;}// Return Results
cov_2qzxdd14yn.s[36]++;log.debug(`Ending: charUtils.havePermissions. validationResponse : ${JSON.stringify(validationResponse)} `);cov_2qzxdd14yn.s[37]++;return validationResponse;}async function addCharacterToPlayer(requestObject){cov_2qzxdd14yn.f[1]++;cov_2qzxdd14yn.s[38]++;log.debug(`Starting: charUtils.addCharacterToPlayer. sheet object : ${JSON.stringify(requestObject)} `);cov_2qzxdd14yn.s[39]++;console.log(`Starting: charUtils.addCharacterToPlayer. sheet object : ${JSON.stringify(requestObject)} `);const validationResponse=(cov_2qzxdd14yn.s[40]++,new Response({from:'addCharacterToPlayer',responseCode:400,message:'',step:'Add Character to Player'}));// Updates must always include player and character name.  Without those, there can be no update.
// Throw an error if his happens.
cov_2qzxdd14yn.s[41]++;if(!requestObject.name){cov_2qzxdd14yn.b[4][0]++;cov_2qzxdd14yn.s[42]++;log.debug('Update: charUtils.addCharacterToPlayer. value of character name not found!');cov_2qzxdd14yn.s[43]++;console.log('Update: charUtils.addCharacterToPlayer. value of character name not found!');cov_2qzxdd14yn.s[44]++;validationResponse.message='Value of character name not found!';cov_2qzxdd14yn.s[45]++;validationResponse.responseCode=456;cov_2qzxdd14yn.s[46]++;return validationResponse;}else{cov_2qzxdd14yn.b[4][1]++;}cov_2qzxdd14yn.s[47]++;if(!requestObject.player){cov_2qzxdd14yn.b[5][0]++;cov_2qzxdd14yn.s[48]++;log.debug('Update: charUtils.addCharacterToPlayer. value of player name not found!');cov_2qzxdd14yn.s[49]++;console.log('Update: charUtils.addCharacterToPlayer. value of player name not found!');cov_2qzxdd14yn.s[50]++;validationResponse.message='Value of player name not found!';cov_2qzxdd14yn.s[51]++;validationResponse.responseCode=456;cov_2qzxdd14yn.s[52]++;return validationResponse;}else{cov_2qzxdd14yn.b[5][1]++;}// Verify that our character does not already exist.
cov_2qzxdd14yn.s[53]++;try{const query=(cov_2qzxdd14yn.s[54]++,{name:requestObject.player});// Is character currently in DB?
cov_2qzxdd14yn.s[55]++;log.debug(`Update: charUtils.havePermissions : query : ${JSON.stringify(query)}`);cov_2qzxdd14yn.s[56]++;console.log(`Update: charUtils.havePermissions : query : ${JSON.stringify(query)}`);const charCol=(cov_2qzxdd14yn.s[57]++,await db.findOne(query));cov_2qzxdd14yn.s[58]++;log.debug(`Update: charUtils.havePermissions : charCol : ${charCol}`);cov_2qzxdd14yn.s[59]++;console.log(`Update: charUtils.havePermissions : charCol : ${charCol}`);// If We find the character list, pull it
cov_2qzxdd14yn.s[60]++;if(charCol){cov_2qzxdd14yn.b[6][0]++;cov_2qzxdd14yn.s[61]++;log.debug('Update: charUtils.havePermissions : Player Found, checking available characters');cov_2qzxdd14yn.s[62]++;console.log('Update: charUtils.havePermissions : Player Found, checking available characters');// Is the requested character in the pulled list
const foundCharacter=(cov_2qzxdd14yn.s[63]++,charCol.characters.includes(requestObject.name));cov_2qzxdd14yn.s[64]++;log.debug(`Update: charUtils.havePermissions : foundCharacter ${foundCharacter}`);cov_2qzxdd14yn.s[65]++;console.log(`Update: charUtils.havePermissions : foundCharacter ${foundCharacter}`);cov_2qzxdd14yn.s[66]++;if(foundCharacter){cov_2qzxdd14yn.b[7][0]++;cov_2qzxdd14yn.s[67]++;validationResponse.message='Character found in player repository';// If foundCharacter is true, return a true value -- otherwise set the message to false
cov_2qzxdd14yn.s[68]++;validationResponse.results=foundCharacter;cov_2qzxdd14yn.s[69]++;validationResponse.message='Character already registered to player';cov_2qzxdd14yn.s[70]++;validationResponse.responseCode=455;}else{cov_2qzxdd14yn.b[7][1]++;// Add character to player repo.   We will push to the character array for this.
const updateOneObject=(cov_2qzxdd14yn.s[71]++,[{updateOne:{filter:{_id:charCol._id},update:{$push:{characters:requestObject.name}},upsert:true}}]);cov_2qzxdd14yn.s[72]++;log.debug(`Update: crudCharacter.updateSheet : charCol : ${JSON.stringify(charCol)}`);cov_2qzxdd14yn.s[73]++;log.debug(`Update: crudCharacter.updateSheet : updateOneObject : ${JSON.stringify(updateOneObject)}`);cov_2qzxdd14yn.s[74]++;console.log(`Update: crudCharacter.updateSheet : charCol : ${JSON.stringify(charCol)}`);cov_2qzxdd14yn.s[75]++;console.log(`Update: crudCharacter.updateSheet : updateOneObject : ${JSON.stringify(updateOneObject)}`);const bulkWriteResults=(cov_2qzxdd14yn.s[76]++,await db.bulkWrite(updateOneObject));cov_2qzxdd14yn.s[77]++;log.debug(`Running: DeviceSync.querySyncTimeStamp. bulkWriteResults ${JSON.stringify(bulkWriteResults)}`);cov_2qzxdd14yn.s[78]++;console.log(`Running: DeviceSync.querySyncTimeStamp. bulkWriteResults ${JSON.stringify(bulkWriteResults)}`);// {"ok":1,"writeErrors":[],"writeConcernErrors":[],"insertedIds":[],"nInserted":0,"nUpserted":0,"nMatched":1,"nModified":1,"nRemoved":0,"upserted":[]}]
cov_2qzxdd14yn.s[79]++;if(!['true',true,1].includes(bulkWriteResults.ok)){cov_2qzxdd14yn.b[8][0]++;cov_2qzxdd14yn.s[80]++;throw new Error(`crudCharacter.updateSheet : Failed mongo update ${JSON.stringify(updateOneObject)}`);}else{cov_2qzxdd14yn.b[8][1]++;}cov_2qzxdd14yn.s[81]++;validationResponse.message=`Character ${requestObject.name} has been added to ${requestObject.player}`;cov_2qzxdd14yn.s[82]++;validationResponse.responseCode=200;}}else{cov_2qzxdd14yn.b[6][1]++;cov_2qzxdd14yn.s[83]++;log.debug('Update: charUtils.havePermissions : Player Not Found unable to check characters');cov_2qzxdd14yn.s[84]++;console.log('Update: charUtils.havePermissions : Player Not Found unable to check characters');cov_2qzxdd14yn.s[85]++;validationResponse.message='Player not found in database';cov_2qzxdd14yn.s[86]++;validationResponse.results='N/A';cov_2qzxdd14yn.s[87]++;validationResponse.responseCode=455;}}catch(err){cov_2qzxdd14yn.s[88]++;log.error(`Update: charUtils.havePermissions : Player request failed : ${err}`);cov_2qzxdd14yn.s[89]++;console.log(`Update: charUtils.havePermissions : Player request failed : ${err}`);cov_2qzxdd14yn.s[90]++;validationResponse.message='Player request failed.';cov_2qzxdd14yn.s[91]++;validationResponse.responseCode=457;}// Return Results
cov_2qzxdd14yn.s[92]++;log.debug(`Ending: charUtils.addCharacterToPlayer. validationResponse : ${JSON.stringify(validationResponse)} `);cov_2qzxdd14yn.s[93]++;console.log(`Ending: charUtils.addCharacterToPlayer. validationResponse : ${JSON.stringify(validationResponse)} `);cov_2qzxdd14yn.s[94]++;return validationResponse;}cov_2qzxdd14yn.s[95]++;module.exports={havePermissions,addCharacterToPlayer};