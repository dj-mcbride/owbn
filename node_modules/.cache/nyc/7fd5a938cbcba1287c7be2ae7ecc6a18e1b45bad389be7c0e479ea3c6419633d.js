var cov_s7saueflv=function(){var path="/opt/repos/app-owbn/lib/rpc/character/viewCharacter.js";var hash="913a21386e14560c6741d1ead7064ccd7b89371e";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/opt/repos/app-owbn/lib/rpc/character/viewCharacter.js",statementMap:{"0":{start:{line:2,column:21},end:{line:2,column:46}},"1":{start:{line:3,column:19},end:{line:3,column:38}},"2":{start:{line:4,column:11},end:{line:4,column:42}},"3":{start:{line:15,column:4},end:{line:15,column:52}},"4":{start:{line:16,column:4},end:{line:16,column:101}},"5":{start:{line:17,column:31},end:{line:22,column:6}},"6":{start:{line:26,column:4},end:{line:31,column:5}},"7":{start:{line:27,column:8},end:{line:27,column:91}},"8":{start:{line:28,column:8},end:{line:28,column:74}},"9":{start:{line:29,column:8},end:{line:29,column:46}},"10":{start:{line:30,column:8},end:{line:30,column:34}},"11":{start:{line:32,column:4},end:{line:37,column:5}},"12":{start:{line:33,column:8},end:{line:33,column:88}},"13":{start:{line:34,column:8},end:{line:34,column:71}},"14":{start:{line:35,column:8},end:{line:35,column:46}},"15":{start:{line:36,column:8},end:{line:36,column:34}},"16":{start:{line:41,column:4},end:{line:65,column:5}},"17":{start:{line:42,column:22},end:{line:45,column:9}},"18":{start:{line:47,column:8},end:{line:47,column:81}},"19":{start:{line:48,column:24},end:{line:48,column:47}},"20":{start:{line:51,column:8},end:{line:60,column:9}},"21":{start:{line:52,column:12},end:{line:52,column:104}},"22":{start:{line:54,column:12},end:{line:54,column:49}},"23":{start:{line:55,column:12},end:{line:55,column:50}},"24":{start:{line:57,column:12},end:{line:57,column:90}},"25":{start:{line:58,column:12},end:{line:58,column:71}},"26":{start:{line:59,column:12},end:{line:59,column:50}},"27":{start:{line:62,column:8},end:{line:62,column:85}},"28":{start:{line:63,column:8},end:{line:63,column:61}},"29":{start:{line:64,column:8},end:{line:64,column:46}},"30":{start:{line:68,column:4},end:{line:68,column:110}},"31":{start:{line:69,column:4},end:{line:69,column:30}},"32":{start:{line:75,column:4},end:{line:75,column:56}},"33":{start:{line:76,column:4},end:{line:76,column:105}},"34":{start:{line:77,column:4},end:{line:77,column:78}},"35":{start:{line:78,column:31},end:{line:83,column:6}},"36":{start:{line:87,column:4},end:{line:92,column:5}},"37":{start:{line:88,column:8},end:{line:88,column:93}},"38":{start:{line:89,column:8},end:{line:89,column:74}},"39":{start:{line:90,column:8},end:{line:90,column:46}},"40":{start:{line:91,column:8},end:{line:91,column:34}},"41":{start:{line:93,column:4},end:{line:98,column:5}},"42":{start:{line:94,column:8},end:{line:94,column:90}},"43":{start:{line:95,column:8},end:{line:95,column:71}},"44":{start:{line:96,column:8},end:{line:96,column:46}},"45":{start:{line:97,column:8},end:{line:97,column:34}},"46":{start:{line:99,column:4},end:{line:104,column:5}},"47":{start:{line:100,column:8},end:{line:100,column:94}},"48":{start:{line:101,column:8},end:{line:101,column:75}},"49":{start:{line:102,column:8},end:{line:102,column:46}},"50":{start:{line:103,column:8},end:{line:103,column:34}},"51":{start:{line:108,column:4},end:{line:138,column:5}},"52":{start:{line:109,column:22},end:{line:112,column:9}},"53":{start:{line:114,column:27},end:{line:116,column:9}},"54":{start:{line:119,column:8},end:{line:119,column:85}},"55":{start:{line:120,column:24},end:{line:120,column:59}},"56":{start:{line:121,column:8},end:{line:121,column:96}},"57":{start:{line:124,column:8},end:{line:133,column:9}},"58":{start:{line:125,column:12},end:{line:125,column:108}},"59":{start:{line:127,column:12},end:{line:127,column:49}},"60":{start:{line:128,column:12},end:{line:128,column:50}},"61":{start:{line:130,column:12},end:{line:130,column:94}},"62":{start:{line:131,column:12},end:{line:131,column:71}},"63":{start:{line:132,column:12},end:{line:132,column:50}},"64":{start:{line:135,column:8},end:{line:135,column:89}},"65":{start:{line:136,column:8},end:{line:136,column:61}},"66":{start:{line:137,column:8},end:{line:137,column:46}},"67":{start:{line:141,column:4},end:{line:141,column:114}},"68":{start:{line:142,column:4},end:{line:142,column:30}},"69":{start:{line:145,column:0},end:{line:145,column:46}}},fnMap:{"0":{name:"viewSheet",decl:{start:{line:14,column:15},end:{line:14,column:24}},loc:{start:{line:14,column:40},end:{line:70,column:1}},line:14},"1":{name:"viewSelection",decl:{start:{line:74,column:15},end:{line:74,column:28}},loc:{start:{line:74,column:53},end:{line:143,column:1}},line:74}},branchMap:{"0":{loc:{start:{line:26,column:4},end:{line:31,column:5}},type:"if",locations:[{start:{line:26,column:4},end:{line:31,column:5}},{start:{line:26,column:4},end:{line:31,column:5}}],line:26},"1":{loc:{start:{line:32,column:4},end:{line:37,column:5}},type:"if",locations:[{start:{line:32,column:4},end:{line:37,column:5}},{start:{line:32,column:4},end:{line:37,column:5}}],line:32},"2":{loc:{start:{line:51,column:8},end:{line:60,column:9}},type:"if",locations:[{start:{line:51,column:8},end:{line:60,column:9}},{start:{line:51,column:8},end:{line:60,column:9}}],line:51},"3":{loc:{start:{line:87,column:4},end:{line:92,column:5}},type:"if",locations:[{start:{line:87,column:4},end:{line:92,column:5}},{start:{line:87,column:4},end:{line:92,column:5}}],line:87},"4":{loc:{start:{line:93,column:4},end:{line:98,column:5}},type:"if",locations:[{start:{line:93,column:4},end:{line:98,column:5}},{start:{line:93,column:4},end:{line:98,column:5}}],line:93},"5":{loc:{start:{line:99,column:4},end:{line:104,column:5}},type:"if",locations:[{start:{line:99,column:4},end:{line:104,column:5}},{start:{line:99,column:4},end:{line:104,column:5}}],line:99},"6":{loc:{start:{line:124,column:8},end:{line:133,column:9}},type:"if",locations:[{start:{line:124,column:8},end:{line:133,column:9}},{start:{line:124,column:8},end:{line:133,column:9}}],line:124}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"913a21386e14560c6741d1ead7064ccd7b89371e"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();/* globals log database */const{Response}=(cov_s7saueflv.s[0]++,require('../../Response'));const Collection=(cov_s7saueflv.s[1]++,'owbnVampireSheets');const db=(cov_s7saueflv.s[2]++,database.collection(Collection));/**
 * Tests to see if the devices are synced.
 * @param {object} requestObject Character Sheet
 * @returns {Object} Returned object showing success or failure of action
 */ // View Sheet Start
async function viewSheet(requestObject){cov_s7saueflv.f[0]++;cov_s7saueflv.s[3]++;log.debug('Starting: viewCharacter.viewSheet.');cov_s7saueflv.s[4]++;log.trace(`Starting: viewCharacter.viewSheet. sheet object : ${JSON.stringify(requestObject)} `);const validationResponse=(cov_s7saueflv.s[5]++,new Response({from:'viewSheet',responseCode:400,message:'',step:'View Sheet'}));// Updates must always include player and character name.  Without those, there can be no request.
// Throw an error if his happens.
cov_s7saueflv.s[6]++;if(!requestObject.name){cov_s7saueflv.b[0][0]++;cov_s7saueflv.s[7]++;log.debug('Update: viewCharacter.createSheet. value of character name not found!');cov_s7saueflv.s[8]++;validationResponse.message='Value of character name not found!';cov_s7saueflv.s[9]++;validationResponse.responseCode=456;cov_s7saueflv.s[10]++;return validationResponse;}else{cov_s7saueflv.b[0][1]++;}cov_s7saueflv.s[11]++;if(!requestObject.player){cov_s7saueflv.b[1][0]++;cov_s7saueflv.s[12]++;log.debug('Update: viewCharacter.createSheet. value of player name not found!');cov_s7saueflv.s[13]++;validationResponse.message='Value of player name not found!';cov_s7saueflv.s[14]++;validationResponse.responseCode=456;cov_s7saueflv.s[15]++;return validationResponse;}else{cov_s7saueflv.b[1][1]++;}// This is what we are going to use for our sheet definition critera.
// No player may have two characters of the same name.
cov_s7saueflv.s[16]++;try{const query=(cov_s7saueflv.s[17]++,{name:requestObject.name,player:requestObject.player});// Is sheet currently in DB?
cov_s7saueflv.s[18]++;log.debug('Update: viewCharacter.viewSheet. Is sheet currently in DB? ');const charCol=(cov_s7saueflv.s[19]++,await db.findOne(query));// If We find the sheet, return it
cov_s7saueflv.s[20]++;if(charCol){cov_s7saueflv.b[2][0]++;cov_s7saueflv.s[21]++;log.debug('Update: viewCharacter.viewSheet : Sheet found, adding sheet to responce object');// Insert Sheet into DB
cov_s7saueflv.s[22]++;validationResponse.message=charCol;cov_s7saueflv.s[23]++;validationResponse.responseCode=200;}else{cov_s7saueflv.b[2][1]++;cov_s7saueflv.s[24]++;log.debug('Update: viewCharacter.viewSheet : sheet not found, cannot return');cov_s7saueflv.s[25]++;validationResponse.message='Sheet not found in database';cov_s7saueflv.s[26]++;validationResponse.responseCode=455;}}catch(err){cov_s7saueflv.s[27]++;log.error(`Update: viewCharacter.viewSheet : Sheet request failed : ${err}`);cov_s7saueflv.s[28]++;validationResponse.message='Sheet request failed.';cov_s7saueflv.s[29]++;validationResponse.responseCode=457;}// Return Results
cov_s7saueflv.s[30]++;log.debug(`Ending: viewCharacter.viewSheet. validationResponse : ${JSON.stringify(validationResponse)} `);cov_s7saueflv.s[31]++;return validationResponse;}// View Selection Start
async function viewSelection(requestObject,project){cov_s7saueflv.f[1]++;cov_s7saueflv.s[32]++;log.debug('Starting: viewCharacter.viewSelection.');cov_s7saueflv.s[33]++;log.trace(`Starting: viewCharacter.viewSelection. sheet object : ${JSON.stringify(requestObject)} `);cov_s7saueflv.s[34]++;log.trace(`Starting: viewCharacter.viewSelection. project : ${project} `);const validationResponse=(cov_s7saueflv.s[35]++,new Response({from:'viewSelection',responseCode:400,message:'',step:'View Item From Sheet'}));// Updates must always include player and character name.  Without those, there can be no request.
// Throw an error if his happens.
cov_s7saueflv.s[36]++;if(!requestObject.name){cov_s7saueflv.b[3][0]++;cov_s7saueflv.s[37]++;log.debug('Update: viewCharacter.viewSelection. value of character name not found!');cov_s7saueflv.s[38]++;validationResponse.message='Value of character name not found!';cov_s7saueflv.s[39]++;validationResponse.responseCode=456;cov_s7saueflv.s[40]++;return validationResponse;}else{cov_s7saueflv.b[3][1]++;}cov_s7saueflv.s[41]++;if(!requestObject.player){cov_s7saueflv.b[4][0]++;cov_s7saueflv.s[42]++;log.debug('Update: viewCharacter.viewSelection. value of player name not found!');cov_s7saueflv.s[43]++;validationResponse.message='Value of player name not found!';cov_s7saueflv.s[44]++;validationResponse.responseCode=456;cov_s7saueflv.s[45]++;return validationResponse;}else{cov_s7saueflv.b[4][1]++;}cov_s7saueflv.s[46]++;if(!project){cov_s7saueflv.b[5][0]++;cov_s7saueflv.s[47]++;log.debug('Update: viewCharacter.viewSelection. value of projection name not found!');cov_s7saueflv.s[48]++;validationResponse.message='Value of projection name not found!';cov_s7saueflv.s[49]++;validationResponse.responseCode=456;cov_s7saueflv.s[50]++;return validationResponse;}else{cov_s7saueflv.b[5][1]++;}// This is what we are going to use for our sheet definition critera.
// No player may have two characters of the same name.
cov_s7saueflv.s[51]++;try{const query=(cov_s7saueflv.s[52]++,{name:requestObject.name,player:requestObject.player});const projection=(cov_s7saueflv.s[53]++,{fields:{name:1,player:1,[project]:1}});// Is sheet currently in DB?
cov_s7saueflv.s[54]++;log.debug('Update: viewCharacter.viewSelection. Is sheet currently in DB? ');const charCol=(cov_s7saueflv.s[55]++,await db.findOne(query,projection));cov_s7saueflv.s[56]++;log.trace(`Update: viewCharacter.viewSelection : charCol : ${JSON.stringify(charCol)}`);// If We find the sheet, return it
cov_s7saueflv.s[57]++;if(charCol){cov_s7saueflv.b[6][0]++;cov_s7saueflv.s[58]++;log.debug('Update: viewCharacter.viewSelection : Sheet found, adding sheet to responce object');// Insert Sheet into DB
cov_s7saueflv.s[59]++;validationResponse.message=charCol;cov_s7saueflv.s[60]++;validationResponse.responseCode=200;}else{cov_s7saueflv.b[6][1]++;cov_s7saueflv.s[61]++;log.debug('Update: viewCharacter.viewSelection : sheet not found, cannot return');cov_s7saueflv.s[62]++;validationResponse.message='Sheet not found in database';cov_s7saueflv.s[63]++;validationResponse.responseCode=455;}}catch(err){cov_s7saueflv.s[64]++;log.error(`Update: viewCharacter.viewSelection : Sheet request failed : ${err}`);cov_s7saueflv.s[65]++;validationResponse.message='Sheet request failed.';cov_s7saueflv.s[66]++;validationResponse.responseCode=457;}// Return Results
cov_s7saueflv.s[67]++;log.debug(`Ending: viewCharacter.viewSelection. validationResponse : ${JSON.stringify(validationResponse)} `);cov_s7saueflv.s[68]++;return validationResponse;}cov_s7saueflv.s[69]++;module.exports={viewSheet,viewSelection};