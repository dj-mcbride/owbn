var cov_1b4fq8u2mc=function(){var path="/opt/repos/app-owbn/lib/rpc/common/charUtils.js";var hash="d62c561c5c174c843ea0192c5d2432a7ab5894f7";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/opt/repos/app-owbn/lib/rpc/common/charUtils.js",statementMap:{"0":{start:{line:2,column:21},end:{line:2,column:46}},"1":{start:{line:3,column:19},end:{line:3,column:35}},"2":{start:{line:4,column:11},end:{line:4,column:42}},"3":{start:{line:12,column:4},end:{line:12,column:105}},"4":{start:{line:13,column:4},end:{line:13,column:107}},"5":{start:{line:14,column:31},end:{line:19,column:6}},"6":{start:{line:23,column:4},end:{line:29,column:5}},"7":{start:{line:24,column:8},end:{line:24,column:91}},"8":{start:{line:25,column:8},end:{line:25,column:93}},"9":{start:{line:26,column:8},end:{line:26,column:74}},"10":{start:{line:27,column:8},end:{line:27,column:46}},"11":{start:{line:28,column:8},end:{line:28,column:34}},"12":{start:{line:30,column:4},end:{line:36,column:5}},"13":{start:{line:31,column:8},end:{line:31,column:88}},"14":{start:{line:32,column:8},end:{line:32,column:90}},"15":{start:{line:33,column:8},end:{line:33,column:71}},"16":{start:{line:34,column:8},end:{line:34,column:46}},"17":{start:{line:35,column:8},end:{line:35,column:34}},"18":{start:{line:39,column:4},end:{line:77,column:5}},"19":{start:{line:40,column:22},end:{line:42,column:9}},"20":{start:{line:44,column:8},end:{line:44,column:83}},"21":{start:{line:45,column:8},end:{line:45,column:85}},"22":{start:{line:46,column:24},end:{line:46,column:47}},"23":{start:{line:49,column:8},end:{line:71,column:9}},"24":{start:{line:50,column:12},end:{line:50,column:105}},"25":{start:{line:51,column:12},end:{line:51,column:107}},"26":{start:{line:53,column:35},end:{line:53,column:82}},"27":{start:{line:54,column:12},end:{line:54,column:94}},"28":{start:{line:55,column:12},end:{line:55,column:96}},"29":{start:{line:58,column:12},end:{line:58,column:56}},"30":{start:{line:59,column:12},end:{line:59,column:50}},"31":{start:{line:61,column:12},end:{line:65,column:13}},"32":{start:{line:62,column:16},end:{line:62,column:84}},"33":{start:{line:64,column:16},end:{line:64,column:88}},"34":{start:{line:67,column:12},end:{line:67,column:109}},"35":{start:{line:68,column:12},end:{line:68,column:111}},"36":{start:{line:69,column:12},end:{line:69,column:72}},"37":{start:{line:70,column:12},end:{line:70,column:50}},"38":{start:{line:73,column:8},end:{line:73,column:88}},"39":{start:{line:74,column:8},end:{line:74,column:90}},"40":{start:{line:75,column:8},end:{line:75,column:62}},"41":{start:{line:76,column:8},end:{line:76,column:46}},"42":{start:{line:79,column:4},end:{line:79,column:112}},"43":{start:{line:80,column:4},end:{line:80,column:114}},"44":{start:{line:81,column:4},end:{line:81,column:30}},"45":{start:{line:84,column:0},end:{line:84,column:37}}},fnMap:{"0":{name:"havePermissions",decl:{start:{line:11,column:15},end:{line:11,column:30}},loc:{start:{line:11,column:46},end:{line:82,column:1}},line:11}},branchMap:{"0":{loc:{start:{line:23,column:4},end:{line:29,column:5}},type:"if",locations:[{start:{line:23,column:4},end:{line:29,column:5}},{start:{line:23,column:4},end:{line:29,column:5}}],line:23},"1":{loc:{start:{line:30,column:4},end:{line:36,column:5}},type:"if",locations:[{start:{line:30,column:4},end:{line:36,column:5}},{start:{line:30,column:4},end:{line:36,column:5}}],line:30},"2":{loc:{start:{line:49,column:8},end:{line:71,column:9}},type:"if",locations:[{start:{line:49,column:8},end:{line:71,column:9}},{start:{line:49,column:8},end:{line:71,column:9}}],line:49},"3":{loc:{start:{line:61,column:12},end:{line:65,column:13}},type:"if",locations:[{start:{line:61,column:12},end:{line:65,column:13}},{start:{line:61,column:12},end:{line:65,column:13}}],line:61}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"d62c561c5c174c843ea0192c5d2432a7ab5894f7"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();/* globals log database */const{Response}=(cov_1b4fq8u2mc.s[0]++,require('../../Response'));const Collection=(cov_1b4fq8u2mc.s[1]++,'owbnPlayerList');const db=(cov_1b4fq8u2mc.s[2]++,database.collection(Collection));/**
 * Tests to see if the devices are synced.
 * @param {object} requestObject Request showing user name and character name
 * @returns {Object} Returned object showing successful permission or failed permission
 */async function havePermissions(requestObject){cov_1b4fq8u2mc.f[0]++;cov_1b4fq8u2mc.s[3]++;log.debug(`Starting: charUtils.havePermissions. request object : ${JSON.stringify(requestObject)} `);cov_1b4fq8u2mc.s[4]++;console.log(`Starting: charUtils.havePermissions. request object : ${JSON.stringify(requestObject)} `);const validationResponse=(cov_1b4fq8u2mc.s[5]++,new Response({from:'havePermissions',responseCode:400,message:'',step:'Test Player Permissions for Character'}));// Updates must always include player and character name.  Without those, there can be no request.
// Throw an error if his happens.
cov_1b4fq8u2mc.s[6]++;if(!requestObject.name){cov_1b4fq8u2mc.b[0][0]++;cov_1b4fq8u2mc.s[7]++;log.debug('Update: charUtils.havePermissions. value of character name not found!');cov_1b4fq8u2mc.s[8]++;console.log('Update: charUtils.havePermissions. value of character name not found!');cov_1b4fq8u2mc.s[9]++;validationResponse.message='Value of character name not found!';cov_1b4fq8u2mc.s[10]++;validationResponse.responseCode=456;cov_1b4fq8u2mc.s[11]++;return validationResponse;}else{cov_1b4fq8u2mc.b[0][1]++;}cov_1b4fq8u2mc.s[12]++;if(!requestObject.player){cov_1b4fq8u2mc.b[1][0]++;cov_1b4fq8u2mc.s[13]++;log.debug('Update: charUtils.havePermissions. value of player name not found!');cov_1b4fq8u2mc.s[14]++;console.log('Update: charUtils.havePermissions. value of player name not found!');cov_1b4fq8u2mc.s[15]++;validationResponse.message='Value of player name not found!';cov_1b4fq8u2mc.s[16]++;validationResponse.responseCode=456;cov_1b4fq8u2mc.s[17]++;return validationResponse;}else{cov_1b4fq8u2mc.b[1][1]++;}// We are going to pull a list of all of the characters that a player has permissions for
cov_1b4fq8u2mc.s[18]++;try{const query=(cov_1b4fq8u2mc.s[19]++,{player:requestObject.player});// Is sheet currently in DB?
cov_1b4fq8u2mc.s[20]++;log.debug('Update: charUtils.havePermissions. Is sheet currently in DB? ');cov_1b4fq8u2mc.s[21]++;console.log('Update: charUtils.havePermissions. Is sheet currently in DB? ');const charCol=(cov_1b4fq8u2mc.s[22]++,await db.findOne(query));// If We find the sheet, return it
cov_1b4fq8u2mc.s[23]++;if(charCol){cov_1b4fq8u2mc.b[2][0]++;cov_1b4fq8u2mc.s[24]++;log.debug('Update: charUtils.havePermissions : Player Found, checking available characters');cov_1b4fq8u2mc.s[25]++;console.log('Update: charUtils.havePermissions : Player Found, checking available characters');// Is the requested character in the pulled list
const foundCharacter=(cov_1b4fq8u2mc.s[26]++,charCol.characters.includes(requestObject.name));cov_1b4fq8u2mc.s[27]++;log.debug(`Update: charUtils.havePermissions : foundCharacter ${foundCharacter}`);cov_1b4fq8u2mc.s[28]++;console.log(`Update: charUtils.havePermissions : foundCharacter ${foundCharacter}`);// If foundCharacter is true, return a true value -- otherwise set the message to false
cov_1b4fq8u2mc.s[29]++;validationResponse.results=foundCharacter;cov_1b4fq8u2mc.s[30]++;validationResponse.responseCode=200;cov_1b4fq8u2mc.s[31]++;if(foundCharacter){cov_1b4fq8u2mc.b[3][0]++;cov_1b4fq8u2mc.s[32]++;validationResponse.message='Character found in player repository';}else{cov_1b4fq8u2mc.b[3][1]++;cov_1b4fq8u2mc.s[33]++;validationResponse.message='Character NOT found in player repository';}}else{cov_1b4fq8u2mc.b[2][1]++;cov_1b4fq8u2mc.s[34]++;log.debug('Update: charUtils.havePermissions : Player Not Found, checking available characters');cov_1b4fq8u2mc.s[35]++;console.log('Update: charUtils.havePermissions : Player Not Found, checking available characters');cov_1b4fq8u2mc.s[36]++;validationResponse.message='Player not found in database';cov_1b4fq8u2mc.s[37]++;validationResponse.responseCode=455;}}catch(err){cov_1b4fq8u2mc.s[38]++;log.error(`Update: charUtils.havePermissions : Player request failed : ${err}`);cov_1b4fq8u2mc.s[39]++;console.log(`Update: charUtils.havePermissions : Player request failed : ${err}`);cov_1b4fq8u2mc.s[40]++;validationResponse.message='Player request failed.';cov_1b4fq8u2mc.s[41]++;validationResponse.responseCode=457;}// Return Results
cov_1b4fq8u2mc.s[42]++;log.debug(`Ending: charUtils.havePermissions. validationResponse : ${JSON.stringify(validationResponse)} `);cov_1b4fq8u2mc.s[43]++;console.log(`Ending: charUtils.havePermissions. validationResponse : ${JSON.stringify(validationResponse)} `);cov_1b4fq8u2mc.s[44]++;return validationResponse;}cov_1b4fq8u2mc.s[45]++;module.exports={havePermissions};