var cov_wkf62y399=function(){var path="/opt/repos/app-owbn/lib/rpc/common/crudCharacter.js";var hash="17be68e38a3feb84f7dd2e4eba4ac1c17100b487";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/opt/repos/app-owbn/lib/rpc/common/crudCharacter.js",statementMap:{"0":{start:{line:2,column:21},end:{line:2,column:46}},"1":{start:{line:3,column:19},end:{line:3,column:38}},"2":{start:{line:4,column:11},end:{line:4,column:42}},"3":{start:{line:12,column:4},end:{line:12,column:95}},"4":{start:{line:13,column:31},end:{line:18,column:6}},"5":{start:{line:22,column:4},end:{line:27,column:5}},"6":{start:{line:23,column:8},end:{line:23,column:91}},"7":{start:{line:24,column:8},end:{line:24,column:74}},"8":{start:{line:25,column:8},end:{line:25,column:46}},"9":{start:{line:26,column:8},end:{line:26,column:34}},"10":{start:{line:28,column:4},end:{line:33,column:5}},"11":{start:{line:29,column:8},end:{line:29,column:88}},"12":{start:{line:30,column:8},end:{line:30,column:71}},"13":{start:{line:31,column:8},end:{line:31,column:46}},"14":{start:{line:32,column:8},end:{line:32,column:34}},"15":{start:{line:37,column:4},end:{line:61,column:5}},"16":{start:{line:38,column:22},end:{line:41,column:9}},"17":{start:{line:43,column:8},end:{line:43,column:83}},"18":{start:{line:44,column:26},end:{line:44,column:49}},"19":{start:{line:46,column:8},end:{line:56,column:9}},"20":{start:{line:47,column:12},end:{line:47,column:99}},"21":{start:{line:49,column:12},end:{line:49,column:38}},"22":{start:{line:50,column:12},end:{line:50,column:68}},"23":{start:{line:51,column:12},end:{line:51,column:50}},"24":{start:{line:53,column:12},end:{line:53,column:94}},"25":{start:{line:54,column:12},end:{line:54,column:76}},"26":{start:{line:55,column:12},end:{line:55,column:50}},"27":{start:{line:58,column:8},end:{line:58,column:86}},"28":{start:{line:59,column:8},end:{line:59,column:60}},"29":{start:{line:60,column:8},end:{line:60,column:46}},"30":{start:{line:64,column:4},end:{line:64,column:30}},"31":{start:{line:68,column:4},end:{line:68,column:97}},"32":{start:{line:70,column:31},end:{line:75,column:6}},"33":{start:{line:79,column:4},end:{line:84,column:5}},"34":{start:{line:80,column:8},end:{line:80,column:91}},"35":{start:{line:81,column:8},end:{line:81,column:74}},"36":{start:{line:82,column:8},end:{line:82,column:46}},"37":{start:{line:83,column:8},end:{line:83,column:34}},"38":{start:{line:85,column:4},end:{line:90,column:5}},"39":{start:{line:86,column:8},end:{line:86,column:88}},"40":{start:{line:87,column:8},end:{line:87,column:71}},"41":{start:{line:88,column:8},end:{line:88,column:46}},"42":{start:{line:89,column:8},end:{line:89,column:34}},"43":{start:{line:94,column:22},end:{line:97,column:9}},"44":{start:{line:99,column:8},end:{line:99,column:83}},"45":{start:{line:100,column:26},end:{line:100,column:49}},"46":{start:{line:102,column:8},end:{line:125,column:9}},"47":{start:{line:103,column:12},end:{line:103,column:97}},"48":{start:{line:105,column:37},end:{line:109,column:13}},"49":{start:{line:111,column:12},end:{line:120,column:13}},"50":{start:{line:113,column:16},end:{line:113,column:49}},"51":{start:{line:114,column:16},end:{line:114,column:72}},"52":{start:{line:115,column:16},end:{line:115,column:54}},"53":{start:{line:117,column:16},end:{line:117,column:110}},"54":{start:{line:118,column:16},end:{line:118,column:68}},"55":{start:{line:119,column:16},end:{line:119,column:54}},"56":{start:{line:122,column:12},end:{line:122,column:107}},"57":{start:{line:123,column:12},end:{line:123,column:89}},"58":{start:{line:124,column:12},end:{line:124,column:50}},"59":{start:{line:128,column:4},end:{line:128,column:30}},"60":{start:{line:132,column:4},end:{line:132,column:97}},"61":{start:{line:134,column:31},end:{line:139,column:6}},"62":{start:{line:143,column:4},end:{line:148,column:5}},"63":{start:{line:144,column:8},end:{line:144,column:91}},"64":{start:{line:145,column:8},end:{line:145,column:74}},"65":{start:{line:146,column:8},end:{line:146,column:46}},"66":{start:{line:147,column:8},end:{line:147,column:34}},"67":{start:{line:149,column:4},end:{line:154,column:5}},"68":{start:{line:150,column:8},end:{line:150,column:90}},"69":{start:{line:151,column:8},end:{line:151,column:71}},"70":{start:{line:152,column:8},end:{line:152,column:46}},"71":{start:{line:153,column:8},end:{line:153,column:34}},"72":{start:{line:158,column:22},end:{line:161,column:9}},"73":{start:{line:163,column:8},end:{line:163,column:83}},"74":{start:{line:164,column:26},end:{line:164,column:49}},"75":{start:{line:166,column:8},end:{line:182,column:9}},"76":{start:{line:167,column:12},end:{line:167,column:97}},"77":{start:{line:168,column:12},end:{line:177,column:13}},"78":{start:{line:170,column:16},end:{line:170,column:42}},"79":{start:{line:171,column:16},end:{line:171,column:72}},"80":{start:{line:172,column:16},end:{line:172,column:54}},"81":{start:{line:174,column:16},end:{line:174,column:110}},"82":{start:{line:175,column:16},end:{line:175,column:68}},"83":{start:{line:176,column:16},end:{line:176,column:54}},"84":{start:{line:179,column:12},end:{line:179,column:107}},"85":{start:{line:180,column:12},end:{line:180,column:89}},"86":{start:{line:181,column:12},end:{line:181,column:50}},"87":{start:{line:185,column:4},end:{line:185,column:30}},"88":{start:{line:188,column:0},end:{line:188,column:59}}},fnMap:{"0":{name:"createSheet",decl:{start:{line:11,column:15},end:{line:11,column:26}},loc:{start:{line:11,column:34},end:{line:65,column:1}},line:11},"1":{name:"updateSheet",decl:{start:{line:67,column:15},end:{line:67,column:26}},loc:{start:{line:67,column:36},end:{line:129,column:1}},line:67},"2":{name:"deleteSheet",decl:{start:{line:131,column:15},end:{line:131,column:26}},loc:{start:{line:131,column:36},end:{line:186,column:1}},line:131}},branchMap:{"0":{loc:{start:{line:22,column:4},end:{line:27,column:5}},type:"if",locations:[{start:{line:22,column:4},end:{line:27,column:5}},{start:{line:22,column:4},end:{line:27,column:5}}],line:22},"1":{loc:{start:{line:28,column:4},end:{line:33,column:5}},type:"if",locations:[{start:{line:28,column:4},end:{line:33,column:5}},{start:{line:28,column:4},end:{line:33,column:5}}],line:28},"2":{loc:{start:{line:46,column:8},end:{line:56,column:9}},type:"if",locations:[{start:{line:46,column:8},end:{line:56,column:9}},{start:{line:46,column:8},end:{line:56,column:9}}],line:46},"3":{loc:{start:{line:79,column:4},end:{line:84,column:5}},type:"if",locations:[{start:{line:79,column:4},end:{line:84,column:5}},{start:{line:79,column:4},end:{line:84,column:5}}],line:79},"4":{loc:{start:{line:85,column:4},end:{line:90,column:5}},type:"if",locations:[{start:{line:85,column:4},end:{line:90,column:5}},{start:{line:85,column:4},end:{line:90,column:5}}],line:85},"5":{loc:{start:{line:102,column:8},end:{line:125,column:9}},type:"if",locations:[{start:{line:102,column:8},end:{line:125,column:9}},{start:{line:102,column:8},end:{line:125,column:9}}],line:102},"6":{loc:{start:{line:143,column:4},end:{line:148,column:5}},type:"if",locations:[{start:{line:143,column:4},end:{line:148,column:5}},{start:{line:143,column:4},end:{line:148,column:5}}],line:143},"7":{loc:{start:{line:149,column:4},end:{line:154,column:5}},type:"if",locations:[{start:{line:149,column:4},end:{line:154,column:5}},{start:{line:149,column:4},end:{line:154,column:5}}],line:149},"8":{loc:{start:{line:166,column:8},end:{line:182,column:9}},type:"if",locations:[{start:{line:166,column:8},end:{line:182,column:9}},{start:{line:166,column:8},end:{line:182,column:9}}],line:166}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"17be68e38a3feb84f7dd2e4eba4ac1c17100b487"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();/* globals log database */const{Response}=(cov_wkf62y399.s[0]++,require('../../Response'));const Collection=(cov_wkf62y399.s[1]++,'owbnVampireSheets');const db=(cov_wkf62y399.s[2]++,database.collection(Collection));/**
 * Tests to see if the devices are synced.
 * @param {object} sheet Character Sheet
 * @returns {Object} Returned object showing success or failure of action
 */async function createSheet(sheet){cov_wkf62y399.f[0]++;cov_wkf62y399.s[3]++;log.debug(`Starting: crudCharacter.createSheet. sheet object : ${JSON.stringify(sheet)} `);const validationResponse=(cov_wkf62y399.s[4]++,new Response({from:'createSheet',responseCode:400,message:'',step:'Create Sheet'}));// Updates must always include player and character name.  Without those, there can be no update.
// Throw an error if his happens.
cov_wkf62y399.s[5]++;if(!sheet.name){cov_wkf62y399.b[0][0]++;cov_wkf62y399.s[6]++;log.debug('Update: crudCharacter.createSheet. value of character name not found!');cov_wkf62y399.s[7]++;validationResponse.message='Value of character name not found!';cov_wkf62y399.s[8]++;validationResponse.responseCode=456;cov_wkf62y399.s[9]++;return validationResponse;}else{cov_wkf62y399.b[0][1]++;}cov_wkf62y399.s[10]++;if(!sheet.player){cov_wkf62y399.b[1][0]++;cov_wkf62y399.s[11]++;log.debug('Update: crudCharacter.createSheet. value of player name not found!');cov_wkf62y399.s[12]++;validationResponse.message='Value of player name not found!';cov_wkf62y399.s[13]++;validationResponse.responseCode=456;cov_wkf62y399.s[14]++;return validationResponse;}else{cov_wkf62y399.b[1][1]++;}// This is what we are going to use for our sheet definition critera.
// No player may have two characters of the same name.
cov_wkf62y399.s[15]++;try{const query=(cov_wkf62y399.s[16]++,{name:sheet.name,player:sheet.player});// Is sheet currently in DB?
cov_wkf62y399.s[17]++;log.debug('Update: crudCharacter.createSheet. Is sheet currently in DB? ');const deviceCol=(cov_wkf62y399.s[18]++,await db.findOne(query));cov_wkf62y399.s[19]++;if(!deviceCol){cov_wkf62y399.b[2][0]++;cov_wkf62y399.s[20]++;log.debug('Update: crudCharacter.createSheet : Sheet not found in DB.   Adding Sheet');// Insert Sheet into DB
cov_wkf62y399.s[21]++;await db.insertOne(sheet);cov_wkf62y399.s[22]++;validationResponse.message='Character sheet entered.';cov_wkf62y399.s[23]++;validationResponse.responseCode=200;}else{cov_wkf62y399.b[2][1]++;cov_wkf62y399.s[24]++;log.debug('Ending: crudCharacter.createSheet : duplicate sheet, throwing error ');cov_wkf62y399.s[25]++;validationResponse.message='Duplicate character sheet entry.';cov_wkf62y399.s[26]++;validationResponse.responseCode=455;}}catch(err){cov_wkf62y399.s[27]++;log.error(`Ending: crudCharacter.createSheet : Sheet insert failed : ${err}`);cov_wkf62y399.s[28]++;validationResponse.message='Sheet insert failed.';cov_wkf62y399.s[29]++;validationResponse.responseCode=457;}// Return Results
cov_wkf62y399.s[30]++;return validationResponse;}async function updateSheet(updates){cov_wkf62y399.f[1]++;cov_wkf62y399.s[31]++;log.debug(`Starting: crudCharacter.updateSheet. sheet object : ${JSON.stringify(updates)} `);const validationResponse=(cov_wkf62y399.s[32]++,new Response({from:'updateSheet',responseCode:400,message:'',step:'Update Sheet'}));// Updates must always include player and character name.  Without those, there can be no update.
// Throw an error if his happens.
cov_wkf62y399.s[33]++;if(!updates.name){cov_wkf62y399.b[3][0]++;cov_wkf62y399.s[34]++;log.debug('Update: crudCharacter.updateSheet. value of character name not found!');cov_wkf62y399.s[35]++;validationResponse.message='Value of character name not found!';cov_wkf62y399.s[36]++;validationResponse.responseCode=456;cov_wkf62y399.s[37]++;return validationResponse;}else{cov_wkf62y399.b[3][1]++;}cov_wkf62y399.s[38]++;if(!updates.player){cov_wkf62y399.b[4][0]++;cov_wkf62y399.s[39]++;log.debug('Update: crudCharacter.updateSheet. value of player name not found!');cov_wkf62y399.s[40]++;validationResponse.message='Value of player name not found!';cov_wkf62y399.s[41]++;validationResponse.responseCode=456;cov_wkf62y399.s[42]++;return validationResponse;}else{cov_wkf62y399.b[4][1]++;}// Make sure that the character exists in the DB.   If the character does not exist, we don't want
// to create a fragmented character
const query=(cov_wkf62y399.s[43]++,{name:updates.name,player:updates.player});// Is sheet currently in DB?
cov_wkf62y399.s[44]++;log.debug('Update: crudCharacter.updateSheet. Is sheet currently in DB? ');const deviceCol=(cov_wkf62y399.s[45]++,await db.findOne(query));cov_wkf62y399.s[46]++;if(deviceCol){cov_wkf62y399.b[5][0]++;cov_wkf62y399.s[47]++;log.debug('Update: crudCharacter.updateSheet : Sheet found in DB.   Updating Sheet');// Build the update object
const updateOneObject=(cov_wkf62y399.s[48]++,{filter:{name:updates.name,player:updates.player},update:{updates},upsert:true});cov_wkf62y399.s[49]++;try{cov_wkf62y399.s[50]++;// Update the character sheet
await db.update(updateOneObject);cov_wkf62y399.s[51]++;validationResponse.message='Character sheet updated.';cov_wkf62y399.s[52]++;validationResponse.responseCode=200;}catch(err){cov_wkf62y399.s[53]++;log.error(`Ending: crudCharacter.updateSheet : Sheet update failed : ${JSON.stringify(err)}`);cov_wkf62y399.s[54]++;validationResponse.message='Sheet insert failed.';cov_wkf62y399.s[55]++;validationResponse.responseCode=400;}}else{cov_wkf62y399.b[5][1]++;cov_wkf62y399.s[56]++;log.debug('Ending: crudCharacter.updateSheet : Character sheet not found!  Unable to update.');cov_wkf62y399.s[57]++;validationResponse.message='Character sheet not found!  Unable to update.';cov_wkf62y399.s[58]++;validationResponse.responseCode=400;}// Return Results
cov_wkf62y399.s[59]++;return validationResponse;}async function deleteSheet(updates){cov_wkf62y399.f[2]++;cov_wkf62y399.s[60]++;log.debug(`Starting: crudCharacter.deleteSheet. sheet object : ${JSON.stringify(updates)} `);const validationResponse=(cov_wkf62y399.s[61]++,new Response({from:'deleteSheet',responseCode:400,message:'',step:'Delete Sheet'}));// Updates must always include player and character name.  Without those, there can be no update.
// Throw an error if his happens.
cov_wkf62y399.s[62]++;if(!updates.name){cov_wkf62y399.b[6][0]++;cov_wkf62y399.s[63]++;log.debug('Update: crudCharacter.deleteSheet. value of character name not found!');cov_wkf62y399.s[64]++;validationResponse.message='Value of character name not found!';cov_wkf62y399.s[65]++;validationResponse.responseCode=456;cov_wkf62y399.s[66]++;return validationResponse;}else{cov_wkf62y399.b[6][1]++;}cov_wkf62y399.s[67]++;if(!updates.player){cov_wkf62y399.b[7][0]++;cov_wkf62y399.s[68]++;log.debug('Starting: crudCharacter.deleteSheet. value of player name not found!');cov_wkf62y399.s[69]++;validationResponse.message='Value of player name not found!';cov_wkf62y399.s[70]++;validationResponse.responseCode=456;cov_wkf62y399.s[71]++;return validationResponse;}else{cov_wkf62y399.b[7][1]++;}// Make sure that the character exists in the DB.   If the character does not exist, we don't want
// to create a fragmented character
const query=(cov_wkf62y399.s[72]++,{name:updates.name,player:updates.player});// Is sheet currently in DB?
cov_wkf62y399.s[73]++;log.debug('Update: crudCharacter.deleteSheet. Is sheet currently in DB? ');const deviceCol=(cov_wkf62y399.s[74]++,await db.findOne(query));cov_wkf62y399.s[75]++;if(deviceCol){cov_wkf62y399.b[8][0]++;cov_wkf62y399.s[76]++;log.debug('Update: crudCharacter.deleteSheet : Sheet found in DB.   Updating Sheet');cov_wkf62y399.s[77]++;try{cov_wkf62y399.s[78]++;// Update the character sheet
await db.deleteOne(query);cov_wkf62y399.s[79]++;validationResponse.message='Character sheet deleted.';cov_wkf62y399.s[80]++;validationResponse.responseCode=200;}catch(err){cov_wkf62y399.s[81]++;log.error(`Ending: crudCharacter.deleteSheet : Sheet insert failed : ${JSON.stringify(err)}`);cov_wkf62y399.s[82]++;validationResponse.message='Sheet delete failed.';cov_wkf62y399.s[83]++;validationResponse.responseCode=400;}}else{cov_wkf62y399.b[8][1]++;cov_wkf62y399.s[84]++;log.debug('Ending: crudCharacter.deleteSheet : Character sheet not found!  Unable to delete.');cov_wkf62y399.s[85]++;validationResponse.message='Character sheet not found!  Unable to delete.';cov_wkf62y399.s[86]++;validationResponse.responseCode=400;}// Return Results
cov_wkf62y399.s[87]++;return validationResponse;}cov_wkf62y399.s[88]++;module.exports={createSheet,updateSheet,deleteSheet};