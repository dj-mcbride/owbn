var cov_wkf62y399=function(){var path="/opt/repos/app-owbn/lib/rpc/common/crudCharacter.js";var hash="300bb35021e6d3c14bf9e565d1b46d8e625e1456";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/opt/repos/app-owbn/lib/rpc/common/crudCharacter.js",statementMap:{"0":{start:{line:2,column:21},end:{line:2,column:46}},"1":{start:{line:3,column:19},end:{line:3,column:38}},"2":{start:{line:4,column:11},end:{line:4,column:42}},"3":{start:{line:12,column:4},end:{line:12,column:68}},"4":{start:{line:13,column:4},end:{line:13,column:95}},"5":{start:{line:14,column:31},end:{line:19,column:6}},"6":{start:{line:23,column:4},end:{line:28,column:5}},"7":{start:{line:24,column:8},end:{line:24,column:91}},"8":{start:{line:25,column:8},end:{line:25,column:74}},"9":{start:{line:26,column:8},end:{line:26,column:46}},"10":{start:{line:27,column:8},end:{line:27,column:34}},"11":{start:{line:29,column:4},end:{line:34,column:5}},"12":{start:{line:30,column:8},end:{line:30,column:88}},"13":{start:{line:31,column:8},end:{line:31,column:71}},"14":{start:{line:32,column:8},end:{line:32,column:46}},"15":{start:{line:33,column:8},end:{line:33,column:34}},"16":{start:{line:38,column:4},end:{line:62,column:5}},"17":{start:{line:39,column:22},end:{line:42,column:9}},"18":{start:{line:44,column:8},end:{line:44,column:83}},"19":{start:{line:45,column:26},end:{line:45,column:49}},"20":{start:{line:47,column:8},end:{line:57,column:9}},"21":{start:{line:48,column:12},end:{line:48,column:99}},"22":{start:{line:50,column:12},end:{line:50,column:38}},"23":{start:{line:51,column:12},end:{line:51,column:68}},"24":{start:{line:52,column:12},end:{line:52,column:50}},"25":{start:{line:54,column:12},end:{line:54,column:94}},"26":{start:{line:55,column:12},end:{line:55,column:76}},"27":{start:{line:56,column:12},end:{line:56,column:50}},"28":{start:{line:59,column:8},end:{line:59,column:86}},"29":{start:{line:60,column:8},end:{line:60,column:60}},"30":{start:{line:61,column:8},end:{line:61,column:46}},"31":{start:{line:65,column:4},end:{line:65,column:112}},"32":{start:{line:66,column:4},end:{line:66,column:30}},"33":{start:{line:70,column:4},end:{line:70,column:101}},"34":{start:{line:72,column:31},end:{line:77,column:6}},"35":{start:{line:81,column:4},end:{line:86,column:5}},"36":{start:{line:82,column:8},end:{line:82,column:91}},"37":{start:{line:83,column:8},end:{line:83,column:74}},"38":{start:{line:84,column:8},end:{line:84,column:46}},"39":{start:{line:85,column:8},end:{line:85,column:34}},"40":{start:{line:87,column:4},end:{line:92,column:5}},"41":{start:{line:88,column:8},end:{line:88,column:88}},"42":{start:{line:89,column:8},end:{line:89,column:71}},"43":{start:{line:90,column:8},end:{line:90,column:46}},"44":{start:{line:91,column:8},end:{line:91,column:34}},"45":{start:{line:95,column:26},end:{line:95,column:45}},"46":{start:{line:99,column:22},end:{line:102,column:9}},"47":{start:{line:104,column:8},end:{line:104,column:83}},"48":{start:{line:105,column:26},end:{line:105,column:49}},"49":{start:{line:107,column:8},end:{line:147,column:9}},"50":{start:{line:108,column:12},end:{line:108,column:97}},"51":{start:{line:111,column:37},end:{line:115,column:13}},"52":{start:{line:117,column:12},end:{line:117,column:102}},"53":{start:{line:118,column:12},end:{line:118,column:108}},"54":{start:{line:130,column:12},end:{line:130,column:114}},"55":{start:{line:131,column:12},end:{line:142,column:13}},"56":{start:{line:133,column:43},end:{line:133,column:78}},"57":{start:{line:134,column:16},end:{line:134,column:121}},"58":{start:{line:136,column:16},end:{line:136,column:72}},"59":{start:{line:137,column:16},end:{line:137,column:54}},"60":{start:{line:139,column:16},end:{line:139,column:110}},"61":{start:{line:140,column:16},end:{line:140,column:68}},"62":{start:{line:141,column:16},end:{line:141,column:54}},"63":{start:{line:144,column:12},end:{line:144,column:107}},"64":{start:{line:145,column:12},end:{line:145,column:89}},"65":{start:{line:146,column:12},end:{line:146,column:50}},"66":{start:{line:150,column:4},end:{line:150,column:30}},"67":{start:{line:154,column:4},end:{line:154,column:97}},"68":{start:{line:156,column:31},end:{line:161,column:6}},"69":{start:{line:165,column:4},end:{line:170,column:5}},"70":{start:{line:166,column:8},end:{line:166,column:91}},"71":{start:{line:167,column:8},end:{line:167,column:74}},"72":{start:{line:168,column:8},end:{line:168,column:46}},"73":{start:{line:169,column:8},end:{line:169,column:34}},"74":{start:{line:171,column:4},end:{line:176,column:5}},"75":{start:{line:172,column:8},end:{line:172,column:90}},"76":{start:{line:173,column:8},end:{line:173,column:71}},"77":{start:{line:174,column:8},end:{line:174,column:46}},"78":{start:{line:175,column:8},end:{line:175,column:34}},"79":{start:{line:180,column:22},end:{line:183,column:9}},"80":{start:{line:185,column:8},end:{line:185,column:83}},"81":{start:{line:186,column:26},end:{line:186,column:49}},"82":{start:{line:188,column:8},end:{line:204,column:9}},"83":{start:{line:189,column:12},end:{line:189,column:97}},"84":{start:{line:190,column:12},end:{line:199,column:13}},"85":{start:{line:192,column:16},end:{line:192,column:42}},"86":{start:{line:193,column:16},end:{line:193,column:72}},"87":{start:{line:194,column:16},end:{line:194,column:54}},"88":{start:{line:196,column:16},end:{line:196,column:110}},"89":{start:{line:197,column:16},end:{line:197,column:68}},"90":{start:{line:198,column:16},end:{line:198,column:54}},"91":{start:{line:201,column:12},end:{line:201,column:107}},"92":{start:{line:202,column:12},end:{line:202,column:89}},"93":{start:{line:203,column:12},end:{line:203,column:50}},"94":{start:{line:207,column:4},end:{line:207,column:30}},"95":{start:{line:210,column:0},end:{line:210,column:59}}},fnMap:{"0":{name:"createSheet",decl:{start:{line:11,column:15},end:{line:11,column:26}},loc:{start:{line:11,column:34},end:{line:67,column:1}},line:11},"1":{name:"updateSheet",decl:{start:{line:69,column:15},end:{line:69,column:26}},loc:{start:{line:69,column:40},end:{line:151,column:1}},line:69},"2":{name:"deleteSheet",decl:{start:{line:153,column:15},end:{line:153,column:26}},loc:{start:{line:153,column:36},end:{line:208,column:1}},line:153}},branchMap:{"0":{loc:{start:{line:23,column:4},end:{line:28,column:5}},type:"if",locations:[{start:{line:23,column:4},end:{line:28,column:5}},{start:{line:23,column:4},end:{line:28,column:5}}],line:23},"1":{loc:{start:{line:29,column:4},end:{line:34,column:5}},type:"if",locations:[{start:{line:29,column:4},end:{line:34,column:5}},{start:{line:29,column:4},end:{line:34,column:5}}],line:29},"2":{loc:{start:{line:47,column:8},end:{line:57,column:9}},type:"if",locations:[{start:{line:47,column:8},end:{line:57,column:9}},{start:{line:47,column:8},end:{line:57,column:9}}],line:47},"3":{loc:{start:{line:81,column:4},end:{line:86,column:5}},type:"if",locations:[{start:{line:81,column:4},end:{line:86,column:5}},{start:{line:81,column:4},end:{line:86,column:5}}],line:81},"4":{loc:{start:{line:87,column:4},end:{line:92,column:5}},type:"if",locations:[{start:{line:87,column:4},end:{line:92,column:5}},{start:{line:87,column:4},end:{line:92,column:5}}],line:87},"5":{loc:{start:{line:107,column:8},end:{line:147,column:9}},type:"if",locations:[{start:{line:107,column:8},end:{line:147,column:9}},{start:{line:107,column:8},end:{line:147,column:9}}],line:107},"6":{loc:{start:{line:165,column:4},end:{line:170,column:5}},type:"if",locations:[{start:{line:165,column:4},end:{line:170,column:5}},{start:{line:165,column:4},end:{line:170,column:5}}],line:165},"7":{loc:{start:{line:171,column:4},end:{line:176,column:5}},type:"if",locations:[{start:{line:171,column:4},end:{line:176,column:5}},{start:{line:171,column:4},end:{line:176,column:5}}],line:171},"8":{loc:{start:{line:188,column:8},end:{line:204,column:9}},type:"if",locations:[{start:{line:188,column:8},end:{line:204,column:9}},{start:{line:188,column:8},end:{line:204,column:9}}],line:188}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"300bb35021e6d3c14bf9e565d1b46d8e625e1456"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();/* globals log database */const{Response}=(cov_wkf62y399.s[0]++,require('../../Response'));const Collection=(cov_wkf62y399.s[1]++,'owbnVampireSheets');const db=(cov_wkf62y399.s[2]++,database.collection(Collection));/**
 * Tests to see if the devices are synced.
 * @param {object} sheet Character Sheet
 * @returns {Object} Returned object showing success or failure of action
 */async function createSheet(sheet){cov_wkf62y399.f[0]++;cov_wkf62y399.s[3]++;log.debug('Starting: crudCharacter.createSheet. sheet object ');cov_wkf62y399.s[4]++;log.trace(`Starting: crudCharacter.createSheet. sheet object : ${JSON.stringify(sheet)} `);const validationResponse=(cov_wkf62y399.s[5]++,new Response({from:'createSheet',responseCode:400,message:'',step:'Create Sheet'}));// Updates must always include player and character name.  Without those, there can be no update.
// Throw an error if his happens.
cov_wkf62y399.s[6]++;if(!sheet.name){cov_wkf62y399.b[0][0]++;cov_wkf62y399.s[7]++;log.debug('Update: crudCharacter.createSheet. value of character name not found!');cov_wkf62y399.s[8]++;validationResponse.message='Value of character name not found!';cov_wkf62y399.s[9]++;validationResponse.responseCode=456;cov_wkf62y399.s[10]++;return validationResponse;}else{cov_wkf62y399.b[0][1]++;}cov_wkf62y399.s[11]++;if(!sheet.player){cov_wkf62y399.b[1][0]++;cov_wkf62y399.s[12]++;log.debug('Update: crudCharacter.createSheet. value of player name not found!');cov_wkf62y399.s[13]++;validationResponse.message='Value of player name not found!';cov_wkf62y399.s[14]++;validationResponse.responseCode=456;cov_wkf62y399.s[15]++;return validationResponse;}else{cov_wkf62y399.b[1][1]++;}// This is what we are going to use for our sheet definition critera.
// No player may have two characters of the same name.
cov_wkf62y399.s[16]++;try{const query=(cov_wkf62y399.s[17]++,{name:sheet.name,player:sheet.player});// Is sheet currently in DB?
cov_wkf62y399.s[18]++;log.debug('Update: crudCharacter.createSheet. Is sheet currently in DB? ');const deviceCol=(cov_wkf62y399.s[19]++,await db.findOne(query));cov_wkf62y399.s[20]++;if(!deviceCol){cov_wkf62y399.b[2][0]++;cov_wkf62y399.s[21]++;log.debug('Update: crudCharacter.createSheet : Sheet not found in DB.   Adding Sheet');// Insert Sheet into DB
cov_wkf62y399.s[22]++;await db.insertOne(sheet);cov_wkf62y399.s[23]++;validationResponse.message='Character sheet entered.';cov_wkf62y399.s[24]++;validationResponse.responseCode=200;}else{cov_wkf62y399.b[2][1]++;cov_wkf62y399.s[25]++;log.debug('Update: crudCharacter.createSheet : duplicate sheet, throwing error ');cov_wkf62y399.s[26]++;validationResponse.message='Duplicate character sheet entry.';cov_wkf62y399.s[27]++;validationResponse.responseCode=455;}}catch(err){cov_wkf62y399.s[28]++;log.error(`Update: crudCharacter.createSheet : Sheet insert failed : ${err}`);cov_wkf62y399.s[29]++;validationResponse.message='Sheet insert failed.';cov_wkf62y399.s[30]++;validationResponse.responseCode=457;}// Return Results
cov_wkf62y399.s[31]++;log.debug(`Ending: crudCharacter.createSheet. validationResponse : ${JSON.stringify(validationResponse)} `);cov_wkf62y399.s[32]++;return validationResponse;}async function updateSheet(updateSheet){cov_wkf62y399.f[1]++;cov_wkf62y399.s[33]++;log.debug(`Starting: crudCharacter.updateSheet. sheet object : ${JSON.stringify(updateSheet)} `);const validationResponse=(cov_wkf62y399.s[34]++,new Response({from:'updateSheet',responseCode:400,message:'',step:'Update Sheet'}));// Updates must always include player and character name.  Without those, there can be no update.
// Throw an error if his happens.
cov_wkf62y399.s[35]++;if(!updateSheet.name){cov_wkf62y399.b[3][0]++;cov_wkf62y399.s[36]++;log.debug('Update: crudCharacter.updateSheet. value of character name not found!');cov_wkf62y399.s[37]++;validationResponse.message='Value of character name not found!';cov_wkf62y399.s[38]++;validationResponse.responseCode=456;cov_wkf62y399.s[39]++;return validationResponse;}else{cov_wkf62y399.b[3][1]++;}cov_wkf62y399.s[40]++;if(!updateSheet.player){cov_wkf62y399.b[4][0]++;cov_wkf62y399.s[41]++;log.debug('Update: crudCharacter.updateSheet. value of player name not found!');cov_wkf62y399.s[42]++;validationResponse.message='Value of player name not found!';cov_wkf62y399.s[43]++;validationResponse.responseCode=456;cov_wkf62y399.s[44]++;return validationResponse;}else{cov_wkf62y399.b[4][1]++;}// Take our updateValues and pull them out for later use.
const updateValues=(cov_wkf62y399.s[45]++,updateSheet.updates);// Make sure that the character exists in the DB.   If the character does not exist, we don't want
// to create a fragmented character
const query=(cov_wkf62y399.s[46]++,{name:updateSheet.name,player:updateSheet.player});// Is sheet currently in DB?
cov_wkf62y399.s[47]++;log.debug('Update: crudCharacter.updateSheet. Is sheet currently in DB? ');const deviceCol=(cov_wkf62y399.s[48]++,await db.findOne(query));cov_wkf62y399.s[49]++;if(deviceCol){cov_wkf62y399.b[5][0]++;cov_wkf62y399.s[50]++;log.debug('Update: crudCharacter.updateSheet : Sheet found in DB.   Updating Sheet');// Build the update object.  We are using the ID we found when we queried the DB to make
// the update faster and to allow us to update the character/player name
const updateOneObject=(cov_wkf62y399.s[51]++,{filter:{_id:deviceCol._id},update:{$set:updateValues},upsert:true});cov_wkf62y399.s[52]++;log.debug(`Update: crudCharacter.updateSheet : deviceCol : ${JSON.stringify(deviceCol)}`);cov_wkf62y399.s[53]++;log.debug(`Update: crudCharacter.updateSheet : updateValues : ${JSON.stringify(updateValues)}`);// updateOne: {
//     filter: { _id: device },
//     update: { $set: { status: result, nso_sync_time: now, device: device } },
//     upsert: true
// }
// {    "filter": {"_id":"5d6fc9b3aa3246630385bc70"},
//      "update": {"$set": { "position":"Keeper" } },
//      "upsert":true
// }
cov_wkf62y399.s[54]++;log.debug(`Update: crudCharacter.updateSheet : updateOneObject : ${JSON.stringify(updateOneObject)}`);cov_wkf62y399.s[55]++;try{// Update the character sheet
const updateValueResults=(cov_wkf62y399.s[56]++,await db.bulkWrite(updateOneObject));cov_wkf62y399.s[57]++;log.debug(`Update: crudCharacter.updateSheet : updateOneObject : ${JSON.stringify(updateValueResults)}`);// await db.updateOne(updateOneObject);
cov_wkf62y399.s[58]++;validationResponse.message='Character sheet updated.';cov_wkf62y399.s[59]++;validationResponse.responseCode=200;}catch(err){cov_wkf62y399.s[60]++;log.error(`Ending: crudCharacter.updateSheet : Sheet update failed : ${JSON.stringify(err)}`);cov_wkf62y399.s[61]++;validationResponse.message='Sheet update failed.';cov_wkf62y399.s[62]++;validationResponse.responseCode=400;}}else{cov_wkf62y399.b[5][1]++;cov_wkf62y399.s[63]++;log.debug('Ending: crudCharacter.updateSheet : Character sheet not found!  Unable to update.');cov_wkf62y399.s[64]++;validationResponse.message='Character sheet not found!  Unable to update.';cov_wkf62y399.s[65]++;validationResponse.responseCode=400;}// Return Results
cov_wkf62y399.s[66]++;return validationResponse;}async function deleteSheet(updates){cov_wkf62y399.f[2]++;cov_wkf62y399.s[67]++;log.debug(`Starting: crudCharacter.deleteSheet. sheet object : ${JSON.stringify(updates)} `);const validationResponse=(cov_wkf62y399.s[68]++,new Response({from:'deleteSheet',responseCode:400,message:'',step:'Delete Sheet'}));// Updates must always include player and character name.  Without those, there can be no update.
// Throw an error if his happens.
cov_wkf62y399.s[69]++;if(!updates.name){cov_wkf62y399.b[6][0]++;cov_wkf62y399.s[70]++;log.debug('Update: crudCharacter.deleteSheet. value of character name not found!');cov_wkf62y399.s[71]++;validationResponse.message='Value of character name not found!';cov_wkf62y399.s[72]++;validationResponse.responseCode=456;cov_wkf62y399.s[73]++;return validationResponse;}else{cov_wkf62y399.b[6][1]++;}cov_wkf62y399.s[74]++;if(!updates.player){cov_wkf62y399.b[7][0]++;cov_wkf62y399.s[75]++;log.debug('Starting: crudCharacter.deleteSheet. value of player name not found!');cov_wkf62y399.s[76]++;validationResponse.message='Value of player name not found!';cov_wkf62y399.s[77]++;validationResponse.responseCode=456;cov_wkf62y399.s[78]++;return validationResponse;}else{cov_wkf62y399.b[7][1]++;}// Make sure that the character exists in the DB.   If the character does not exist, we don't want
// to create a fragmented character
const query=(cov_wkf62y399.s[79]++,{name:updates.name,player:updates.player});// Is sheet currently in DB?
cov_wkf62y399.s[80]++;log.debug('Update: crudCharacter.deleteSheet. Is sheet currently in DB? ');const deviceCol=(cov_wkf62y399.s[81]++,await db.findOne(query));cov_wkf62y399.s[82]++;if(deviceCol){cov_wkf62y399.b[8][0]++;cov_wkf62y399.s[83]++;log.debug('Update: crudCharacter.deleteSheet : Sheet found in DB.   Updating Sheet');cov_wkf62y399.s[84]++;try{cov_wkf62y399.s[85]++;// Update the character sheet
await db.deleteOne(query);cov_wkf62y399.s[86]++;validationResponse.message='Character sheet deleted.';cov_wkf62y399.s[87]++;validationResponse.responseCode=200;}catch(err){cov_wkf62y399.s[88]++;log.error(`Ending: crudCharacter.deleteSheet : Sheet insert failed : ${JSON.stringify(err)}`);cov_wkf62y399.s[89]++;validationResponse.message='Sheet delete failed.';cov_wkf62y399.s[90]++;validationResponse.responseCode=400;}}else{cov_wkf62y399.b[8][1]++;cov_wkf62y399.s[91]++;log.debug('Ending: crudCharacter.deleteSheet : Character sheet not found!  Unable to delete.');cov_wkf62y399.s[92]++;validationResponse.message='Character sheet not found!  Unable to delete.';cov_wkf62y399.s[93]++;validationResponse.responseCode=400;}// Return Results
cov_wkf62y399.s[94]++;return validationResponse;}cov_wkf62y399.s[95]++;module.exports={createSheet,updateSheet,deleteSheet};