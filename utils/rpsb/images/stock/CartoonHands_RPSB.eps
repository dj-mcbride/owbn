%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: hands_gloves_dark.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Irina Mir
%%CreationDate: 09/04/2016
%%BoundingBox: 0 0 600 600
%%HiResBoundingBox: 0 0 600 600
%%CropBox: 0 0 600 600
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%Exiv2Version: 001900
%Exiv2Website: http://www.exiv2.org/
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="XMP Core 4.4.0-Exiv2">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/postscript"
   xmp:MetadataDate="2016-04-09T12:48:32-03:00"
   xmp:ModifyDate="2016-04-09T12:48:32-03:00"
   xmp:CreateDate="2016-04-09T12:48:32-03:00"
   xmp:CreatorTool="Adobe Illustrator CS6 (Macintosh)"
   xmpMM:InstanceID="xmp.iid:C648DBE86C206811822AFE7729281F96"
   xmpMM:DocumentID="xmp.did:C648DBE86C206811822AFE7729281F96"
   xmpMM:OriginalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Print"
   xmpTPg:HasVisibleOverprint="False"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:NPages="1"
   pdf:Producer="Adobe PDF library 10.01">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-repair">Cartoon hands set</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-repair">Cartoon hands gesture set on dark background. Traditional cartoon white glove. Vector clip art illustration.</rdf:li>
    </rdf:Alt>
   </dc:description>
   <dc:subject>
    <rdf:Bag>
     <rdf:li>hand, set, cartoon, gesture, pointing, glove, white, vector, illustration, isolated, cute, finger, sign, peace sign, fist, body, okay, thumbs down, clipart, cursor, black, wave, human, concept, people, background, icon, thumb, hold, up, symbol, flip off, signal, sketch, expression, character, contour, ok, palm, direction, graphic, attention, point, pointer, clenched</rdf:li>
    </rdf:Bag>
   </dc:subject>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="256"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A5firsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVUby7g&#xA;s7Z7ic0jTrTcknYADxOKozVdF85aHptvq2v+W77StHuioiv50HBS+y+so+KHl250xVCS3drCVE0y&#xA;Rlvsh2C1+VTiqqCCKjpirsVdirsVdirsVdirsVdb2GravrGmaBo/D9K6xcra2zyfYjru8r0B+FFH&#xA;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"/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:C548DBE86C206811822AFE7729281F96"
    stRef:documentID="xmp.did:C548DBE86C206811822AFE7729281F96"
    stRef:originalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:C548DBE86C206811822AFE7729281F96"
      stEvt:when="2016-04-09T12:43:10-03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:C648DBE86C206811822AFE7729281F96"
      stEvt:when="2016-04-09T12:48:32-03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="600.000000"
    stDim:h="600.000000"
    stDim:unit="Points"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Default Swatch Group"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="Black"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="White"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="Black"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="35"
         xmpG:green="31"
         xmpG:blue="32"/>
        <rdf:li
         xmpG:swatchName="R=68 G=68 B=68"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="68"
         xmpG:green="68"
         xmpG:blue="68"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -600 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 600 li
600 600 li
600 0 li
cp
clp
600 600 mo
0 600 li
0 0 li
600 0 li
600 600 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.266667 .266667 .266667 rgb
f
158.357 65.6533 mo
145.553 64.6304 145.002 108.771 139.042 107.701 cv
139.042 107.701 142.995 79.9717 142.348 65.5806 cv
141.801 53.4165 137.785 41.9277 129.891 38.4595 cv
123.513 35.6577 116.071 40.1045 115.389 50.5825 cv
115.44 52.481 li
114.454 47.6182 113.157 42.9985 111.469 38.9399 cv
108.776 32.4619 101.173 28.7949 94.7495 32.6416 cv
88.02 36.6729 88.9443 46.0483 89.9917 52.5264 cv
92.6187 68.7832 95.293 86.3013 94.1528 102.74 cv
93.481 91.0376 90.0508 78.9717 85.7852 68.5781 cv
80.0679 54.6494 68.0991 46.5518 61.0962 53.5845 cv
53.2759 61.437 61.6992 75.0068 66.749 93.7349 cv
68.9316 101.829 73.7051 122.21 73.002 131.257 cv
73.002 131.257 75.209 131.599 75.0137 132.716 cv
73.1621 132.429 71.2163 132.288 69.1685 132.332 cv
67.7881 132.361 63.7344 119.202 59.0146 112.517 cv
49.2026 98.6196 36.2856 96.9722 30.4429 105.338 cv
26.604 110.834 35.0723 119.382 38.1416 124.417 cv
41.7534 130.338 44.5615 134.196 46.5205 140.911 cv
48.4277 147.447 50.5386 153.851 52.1831 160.476 cv
56.0234 175.95 62.6484 186.892 75.0864 192.011 cv
72.5522 191.958 li
61.8989 208.26 88.9863 212.002 106.49 212.104 cv
122.271 212.196 143.833 209.516 136.584 193.289 cv
134.913 193.254 li
138.265 191.851 140.82 190.088 142.46 188.309 cv
162.903 166.146 158.424 127.217 160.645 121.382 cv
166.22 106.733 176.188 67.0776 158.357 65.6533 cv
cp
1 1 1 rgb
f
102.274 155.918 mo
102.274 155.918 102.284 155.968 102.302 156.067 cv
102.307 156.093 102.311 156.117 102.311 156.134 cv
102.317 156.158 102.3 156.12 102.293 156.099 cv
102.328 156.196 102.222 155.936 102.275 155.592 cv
102.268 155.692 102.251 155.791 102.27 155.895 cv
102.274 155.918 li
cp
166.098 89.062 mo
165.728 93.2314 165.029 97.4043 164.158 101.543 cv
163.273 105.681 162.209 109.792 160.97 113.84 cv
160.348 115.862 159.686 117.872 158.961 119.841 cv
158.688 120.578 li
158.611 120.807 li
158.583 120.903 li
158.525 121.096 li
158.487 121.238 158.45 121.325 158.411 121.512 cv
158.336 121.864 158.26 122.239 158.205 122.577 cv
158.092 123.454 li
157.969 124.598 157.894 125.7 157.835 126.789 cv
157.611 131.138 157.479 135.385 157.165 139.632 cv
156.553 148.102 155.388 156.526 152.967 164.555 cv
151.756 168.562 150.263 172.475 148.348 176.153 cv
146.432 179.827 144.124 183.277 141.395 186.344 cv
140.068 187.892 138.669 188.93 136.921 189.94 cv
135.208 190.914 133.345 191.683 131.425 192.307 cv
129.963 192.718 li
129.597 192.822 li
129.506 192.848 li
129.515 192.846 129.467 192.857 129.476 192.856 cv
129.474 192.856 li
129.278 192.901 li
128.492 193.079 li
127.973 193.191 127.43 193.328 126.933 193.421 cv
125.461 193.683 li
124.498 193.897 123.439 193.965 122.43 194.143 cv
121.405 194.281 120.371 194.354 119.333 194.509 cv
119.202 194.528 li
118.463 194.638 117.874 195.25 117.823 196.025 cv
117.764 196.918 118.44 197.691 119.333 197.75 cv
120.443 197.823 121.561 197.89 122.68 197.887 cv
123.806 197.831 124.904 197.845 126.058 197.675 cv
127.774 197.454 li
128.335 197.371 128.836 197.244 129.37 197.141 cv
130.16 196.979 li
130.357 196.938 li
130.521 196.899 li
130.624 196.871 li
131.034 196.756 li
132.674 196.295 li
133.545 196.013 134.407 195.694 135.261 195.351 cv
136.375 198.408 136.282 200.884 134.975 202.887 cv
131.879 207.629 121.745 210.17 106.501 210.104 cv
85.0786 209.979 75.0313 205.441 72.772 201.237 cv
71.6724 199.191 72.0264 196.726 73.8159 193.732 cv
74.1152 193.865 74.4131 194.003 74.7188 194.115 cv
75.626 194.445 76.5093 194.778 77.333 195.056 cv
78.123 195.278 78.876 195.491 79.5913 195.691 cv
82.7563 196.433 85.1851 196.699 86.751 196.657 cv
88.3501 196.677 89.2119 196.604 89.2119 196.604 cv
89.8066 196.553 90.3442 196.15 90.5313 195.544 cv
90.7778 194.748 90.3315 193.901 89.5342 193.655 cv
89.5342 193.655 88.7085 193.399 87.1426 193.078 cv
85.5303 192.804 83.3535 192.254 80.7334 191.656 cv
80.019 191.454 79.2661 191.24 78.4766 191.017 cv
77.7671 190.757 77.0249 190.484 76.251 190.201 cv
75.4795 189.922 74.6929 189.498 73.8667 189.136 cv
73.04 188.76 72.2568 188.243 71.4048 187.783 cv
68.0952 185.781 64.8516 182.764 62.0889 178.822 cv
59.3838 174.833 57.1602 169.965 55.5317 164.521 cv
55.0908 163.173 54.7466 161.766 54.3657 160.355 cv
53.9634 158.899 53.5562 157.425 53.1445 155.935 cv
52.3213 152.983 51.5142 149.963 50.5703 146.906 cv
50.1118 145.376 49.6499 143.833 49.1846 142.279 cv
48.9434 141.483 48.7012 140.684 48.458 139.883 cv
48.1968 139.1 47.9834 138.349 47.6807 137.533 cv
46.4727 134.174 44.8208 131.146 43.0474 128.231 cv
42.1694 126.806 41.2876 125.374 40.4038 123.938 cv
39.7261 122.846 li
39.4785 122.46 39.21 122.063 38.9648 121.711 cv
37.4526 119.612 li
35.4663 116.897 33.4692 114.219 32.3193 111.474 cv
31.7524 110.119 31.4834 108.771 31.7061 107.769 cv
31.8066 107.274 32.0313 106.797 32.3447 106.42 cv
33.1436 105.433 li
33.2822 105.241 33.3989 105.161 33.5166 105.061 cv
33.8647 104.755 li
34.2607 104.313 34.9263 103.978 35.4653 103.581 cv
36.0977 103.327 36.6797 102.957 37.3618 102.825 cv
38.6626 102.394 40.0908 102.361 41.501 102.491 cv
44.3438 102.828 47.1406 104.087 49.5889 105.829 cv
52.0498 107.574 54.189 109.782 56.0562 112.146 cv
56.5044 112.745 56.9927 113.354 57.4048 113.934 cv
57.6401 114.271 57.832 114.569 58.0156 114.858 cv
58.5874 115.798 li
59.3364 117.077 60.0264 118.409 60.6772 119.754 cv
61.9839 122.445 63.1367 125.178 64.3022 127.869 cv
64.896 129.224 65.4536 130.543 66.189 131.944 cv
66.3813 132.3 66.5757 132.655 66.8936 133.099 cv
66.9907 133.223 67.0322 133.301 67.1885 133.467 cv
67.3394 133.621 67.4023 133.727 67.7476 133.971 cv
67.9707 134.116 li
68.0205 134.149 68.1318 134.211 68.3306 134.282 cv
68.5005 134.343 68.6816 134.388 68.8613 134.413 cv
69.1074 134.44 69.1729 134.441 69.1465 134.44 cv
69.4087 134.446 li
70.106 134.459 70.7983 134.473 71.4844 134.487 cv
72.2046 134.473 72.7456 134.599 73.3726 134.646 cv
73.9785 134.711 74.5762 134.753 75.189 134.895 cv
75.7959 135.014 76.3975 135.131 76.9932 135.249 cv
77.5757 135.416 78.1528 135.582 78.7241 135.747 cv
83.2827 137.142 87.0186 139.583 90.0039 142.076 cv
93.0215 144.559 95.2915 147.173 97.1128 149.359 cv
98.9336 151.569 100.257 153.386 101.165 154.649 cv
101.616 155.285 101.961 155.772 102.194 156.1 cv
102.264 156.201 102.325 156.289 102.378 156.365 cv
102.426 156.44 li
102.51 156.584 102.708 156.806 102.962 156.92 cv
103.219 157.043 103.487 157.059 103.678 157.031 cv
103.884 157.02 104.436 156.804 104.648 156.268 cv
104.851 155.796 104.658 155.35 104.7 155.469 cv
104.683 155.414 104.656 155.343 104.651 155.336 cv
104.632 155.3 104.616 155.267 104.601 155.237 cv
104.551 155.146 104.526 155.102 104.523 155.096 cv
104.531 155.107 104.548 155.123 104.554 155.134 cv
104.574 155.158 li
104.581 155.145 104.54 155.031 104.513 154.94 cv
104.382 154.541 104.175 153.934 103.858 153.171 cv
103.231 151.648 102.174 149.433 100.446 146.875 cv
99.5469 145.616 98.541 144.218 97.272 142.832 cv
96.0342 141.422 94.5889 139.975 92.8906 138.598 cv
89.5439 135.799 85.1636 133.233 79.9512 131.68 cv
79.2959 131.502 78.6338 131.323 77.9648 131.142 cv
77.2847 131.012 76.5981 130.881 75.9043 130.749 cv
75.6265 130.686 75.335 130.644 75.043 130.604 cv
75.4424 121.208 71.1016 102.194 68.6802 93.2144 cv
67.3271 88.1958 65.7129 83.4795 64.2886 79.3179 cv
60.4287 68.0386 57.6396 59.8896 62.5132 54.9956 cv
64.2061 53.2969 66.2881 52.6777 68.7036 53.1606 cv
74.3008 54.2769 80.4214 60.7778 83.9351 69.3374 cv
87.1309 77.124 91.0483 88.834 92.0332 101.183 cv
91.6431 101.283 91.2617 101.385 90.8345 101.524 cv
89.6836 101.873 88.7178 102.26 87.9077 102.627 cv
87.499 102.812 87.1445 102.997 86.8359 103.153 cv
86.5566 103.314 86.3188 103.452 86.1265 103.563 cv
85.749 103.799 85.5479 103.925 85.5479 103.925 cv
85.0518 104.237 84.7861 104.845 84.938 105.443 cv
85.1265 106.187 85.8818 106.637 86.625 106.448 cv
86.625 106.448 86.8555 106.39 87.2871 106.281 cv
87.4995 106.222 87.7612 106.148 88.0688 106.062 cv
88.3594 105.998 88.6934 105.932 89.0552 105.835 cv
89.7944 105.661 90.7319 105.448 91.7949 105.226 cv
92.3394 105.116 92.9189 105 93.5303 104.877 cv
93.8491 104.822 94.1987 104.761 94.5347 104.703 cv
94.5361 104.703 94.5371 104.703 94.5386 104.702 cv
94.8306 104.652 95.1074 104.604 95.4111 104.551 cv
98.0845 104.111 101.268 103.808 104.703 103.723 cv
106.419 103.684 108.198 103.666 110.004 103.714 cv
110.908 103.733 111.818 103.772 112.73 103.819 cv
114.065 103.901 li
115.466 104.021 li
117.255 104.199 119.026 104.419 120.792 104.752 cv
122.547 105.081 124.263 105.475 125.911 105.917 cv
129.207 106.799 132.227 107.863 134.75 108.921 cv
136.008 109.445 137.147 109.975 138.198 110.441 cv
139.238 110.889 140.147 111.257 140.88 111.55 cv
142.27 112.103 143.063 112.418 143.063 112.418 cv
143.218 112.48 li
143.681 112.664 144.229 112.579 144.618 112.217 cv
145.158 111.715 145.188 110.871 144.687 110.332 cv
144.687 110.331 144.49 110.12 144.099 109.775 cv
143.724 109.453 143.16 109.021 142.444 108.559 cv
142.31 108.471 142.164 108.38 142.018 108.29 cv
142.527 107.679 142.83 107.115 143.105 106.568 cv
143.646 105.428 144.015 104.341 144.346 103.261 cv
145 101.105 145.495 98.9844 145.978 96.8696 cv
146.931 92.6455 147.789 88.4536 148.821 84.3418 cv
149.862 80.2529 151.024 76.1582 152.801 72.5962 cv
153.687 70.8574 154.795 69.2021 156.043 68.3804 cv
156.661 67.9551 157.255 67.7798 157.894 67.7681 cv
158.139 67.7754 li
158.15 67.7754 li
158.349 67.8066 li
159.146 67.9307 li
159.544 67.9917 li
159.685 68.0103 159.728 68.0547 159.824 68.0825 cv
159.992 68.1455 160.161 68.2031 160.332 68.2549 cv
160.501 68.2891 160.679 68.3716 160.859 68.478 cv
161.4 68.752 li
161.754 68.9478 162.051 69.2319 162.392 69.4526 cv
162.67 69.7637 162.982 70.0327 163.25 70.3623 cv
163.487 70.728 163.783 71.0322 163.989 71.436 cv
164.898 72.9683 165.476 74.8369 165.84 76.7808 cv
166.526 80.7075 166.465 84.9048 166.098 89.062 cv
cp
69.3481 130.226 mo
69.2349 130.223 li
69.1704 130.226 69.1919 130.215 69.3481 130.226 cv
cp
70.3315 130.653 mo
70.3462 130.676 70.3403 130.667 70.3301 130.651 cv
70.3306 130.652 70.3306 130.652 70.3315 130.653 cv
cp
95.7769 34.3574 mo
98.6631 32.6294 101.36 32.9565 103.113 33.5347 cv
105.975 34.4785 108.408 36.7861 109.623 39.708 cv
117.028 57.5122 116.82 87.5977 115.544 99.7793 cv
114.416 99.6875 li
112.948 99.6016 li
111.994 99.5562 111.044 99.5195 110.101 99.5024 cv
108.215 99.4663 106.357 99.4702 104.558 99.5522 cv
101.588 99.6743 98.7959 99.9561 96.29 100.342 cv
97.0068 85.106 94.7568 69.4805 91.9658 52.207 cv
90.8979 45.5996 90.3657 37.5991 95.7769 34.3574 cv
cp
117.376 50.8052 mo
117.377 50.7998 li
117.484 49.8096 117.574 48.7573 117.773 47.999 cv
117.838 47.5864 117.956 47.166 118.096 46.7432 cv
118.218 46.3184 118.344 45.896 118.53 45.5059 cv
119.178 43.897 120.144 42.4668 121.379 41.4263 cv
122.604 40.3735 124.106 39.7349 125.662 39.6699 cv
125.856 39.6646 126.05 39.6431 126.245 39.644 cv
126.828 39.6982 li
127.221 39.6978 127.599 39.8452 127.987 39.9102 cv
128.183 39.938 128.363 40.041 128.553 40.1001 cv
128.834 40.2021 li
128.976 40.252 li
129.047 40.2769 li
129.06 40.2813 li
130.342 40.9448 li
131.628 41.7261 133.013 43.001 134.082 44.4121 cv
135.171 45.8428 136.122 47.4375 136.858 49.1646 cv
137.597 50.8862 138.25 52.6699 138.712 54.5278 cv
139.197 56.3755 139.581 58.2627 139.836 60.1758 cv
140.119 62.0576 140.271 64.0742 140.351 65.8931 cv
140.357 67.8896 140.397 69.9009 140.377 71.8853 cv
140.124 77.7515 li
139.695 83.6875 li
139.565 85.668 139.333 87.6489 139.158 89.6294 cv
138.982 91.6108 138.753 93.5898 138.534 95.5693 cv
138.161 98.9844 137.728 102.401 137.273 105.8 cv
136.955 105.652 136.627 105.503 136.29 105.354 cv
133.65 104.172 130.492 102.972 127.013 101.952 cv
125.269 101.46 123.446 101.019 121.574 100.646 cv
120.9 100.513 120.206 100.403 119.513 100.292 cv
120.361 92.2275 121.21 70.0952 117.245 51.312 cv
117.307 51.1514 117.357 50.9844 117.376 50.8052 cv
cp
167.646 69.2505 mo
167.353 68.7007 166.921 68.1968 166.556 67.6748 cv
166.148 67.1724 165.658 66.7148 165.199 66.2471 cv
164.661 65.8525 164.148 65.4121 163.568 65.082 cv
162.675 64.6216 li
162.385 64.4634 162.075 64.3232 161.72 64.2241 cv
161.07 64.0225 160.257 63.7456 159.8 63.7178 cv
159.003 63.5981 li
158.804 63.5679 li
158.704 63.5532 li
158.725 63.5537 158.369 63.5142 158.485 63.5298 cv
158.415 63.5273 li
157.854 63.5137 li
156.345 63.52 154.809 64.0615 153.669 64.8696 cv
152.498 65.6665 151.621 66.645 150.892 67.6372 cv
150.161 68.6348 149.57 69.6646 149.048 70.7012 cv
147.013 74.8613 145.871 79.1157 144.807 83.3452 cv
144.151 86.019 143.574 88.6924 143.006 91.3506 cv
143.05 90.9072 143.099 90.4644 143.139 90.02 cv
143.317 88.0161 143.549 86.0225 143.682 84.0103 cv
144.117 77.9771 li
144.377 71.854 li
144.397 69.8394 144.357 67.8496 144.35 65.8467 cv
144.259 63.6709 144.101 61.6934 143.797 59.6177 cv
143.522 57.5659 143.109 55.5249 142.579 53.5044 cv
142.072 51.479 141.354 49.4902 140.514 47.5405 cv
139.677 45.5894 138.578 43.71 137.246 41.9639 cv
135.877 40.2148 134.335 38.665 132.178 37.3911 cv
130.846 36.7017 li
130.689 36.6265 li
130.637 36.6064 li
130.531 36.5669 li
130.32 36.4883 li
129.898 36.333 li
129.612 36.2397 129.341 36.1084 129.042 36.0518 cv
128.449 35.9312 127.869 35.7451 127.256 35.7207 cv
126.345 35.645 li
126.041 35.6416 125.734 35.6646 125.429 35.6768 cv
124.204 35.7192 123.008 36.0464 121.871 36.4746 cv
120.766 36.9712 119.699 37.5737 118.806 38.3633 cv
117.188 39.7261 116.001 41.4556 115.159 43.2817 cv
114.602 41.5137 113.993 39.7998 113.316 38.1724 cv
111.662 34.1924 108.316 31.0386 104.367 29.7358 cv
100.766 28.5474 96.9858 28.9707 93.7217 30.9258 cv
85.29 35.9771 87.2012 47.7979 88.0171 52.8452 cv
89.4844 61.9238 90.8013 70.5376 91.6064 78.8506 cv
90.3169 74.689 88.9189 70.9468 87.6353 67.8188 cv
83.5723 57.9199 76.4482 50.6265 69.4863 49.2378 cv
65.7266 48.4873 62.3374 49.5029 59.6792 52.1733 cv
53.0493 58.8301 56.3394 68.4429 60.5044 80.6133 cv
61.9766 84.916 63.4995 89.3652 64.8179 94.2554 cv
67.5479 104.378 71.3545 121.949 71.0537 130.262 cv
70.728 130.255 70.4004 130.249 70.0723 130.241 cv
70.0186 130.148 69.9644 130.054 69.9106 129.952 cv
69.3276 128.842 68.7563 127.51 68.1836 126.19 cv
67.0347 123.526 65.8628 120.729 64.498 117.905 cv
63.8169 116.491 63.085 115.068 62.2563 113.647 cv
61.6084 112.578 li
61.3711 112.204 61.1357 111.842 60.9189 111.532 cv
60.4194 110.824 59.9165 110.195 59.4106 109.519 cv
57.3438 106.894 54.9468 104.394 52.0615 102.338 cv
49.189 100.297 45.7832 98.6812 41.9688 98.2212 cv
41.5015 98.1289 41.0112 98.1484 40.5273 98.1348 cv
40.0415 98.1421 39.5581 98.0894 39.0693 98.1548 cv
38.0913 98.27 37.1094 98.3687 36.1558 98.6929 cv
35.1777 98.9092 34.2881 99.4048 33.3726 99.8149 cv
32.5337 100.386 31.6738 100.835 30.8955 101.627 cv
30.3071 102.178 li
30.1123 102.363 29.9038 102.556 29.7949 102.711 cv
28.9941 103.697 li
28.231 104.626 27.7178 105.729 27.4741 106.892 cv
27.0039 109.248 27.604 111.355 28.311 113.113 cv
29.8076 116.649 31.9673 119.438 33.9434 122.18 cv
35.3906 124.195 li
36.0376 125.161 li
36.6934 126.214 li
37.5767 127.643 38.457 129.066 39.334 130.485 cv
41.0449 133.269 42.562 136.105 43.583 138.916 cv
43.855 139.633 44.0933 140.454 44.3486 141.215 cv
44.5791 141.97 44.8091 142.724 45.0381 143.474 cv
45.5029 145.016 45.9648 146.547 46.4229 148.065 cv
47.3643 151.09 48.1797 154.118 49.0083 157.066 cv
49.4155 158.529 49.8184 159.976 50.2163 161.404 cv
50.6172 162.883 50.981 164.35 51.4487 165.776 cv
53.1768 171.507 55.5723 176.792 58.6001 181.232 cv
61.6831 185.633 65.4214 189.103 69.2007 191.375 cv
69.5459 191.563 69.8813 191.757 70.2144 191.95 cv
67.8188 196.098 67.4888 199.855 69.2485 203.13 cv
74.4814 212.869 97.0273 214.049 106.478 214.104 cv
106.751 214.105 107.021 214.106 107.292 214.106 cv
123.972 214.106 134.412 211.068 138.325 205.073 cv
140.395 201.901 140.561 198.054 138.872 193.637 cv
138.914 193.614 138.957 193.594 138.998 193.571 cv
140.982 192.463 143.06 190.867 144.518 189.132 cv
147.507 185.777 150.012 182.029 152.071 178.084 cv
154.129 174.135 155.714 169.981 156.991 165.765 cv
159.542 157.317 160.738 148.594 161.371 139.936 cv
161.693 135.608 161.832 131.262 162.053 127.026 cv
162.11 125.969 162.184 124.927 162.291 123.935 cv
162.383 123.212 li
162.471 122.693 li
162.477 122.614 162.538 122.449 162.569 122.332 cv
162.626 122.138 li
162.651 122.051 li
162.928 121.305 li
163.689 119.24 164.374 117.167 165.017 115.082 cv
166.295 110.911 167.39 106.693 168.305 102.425 cv
169.207 98.1538 169.936 93.834 170.329 89.439 cv
170.711 85.0479 170.814 80.5698 170.026 76.0132 cv
169.596 73.7437 168.927 71.4277 167.646 69.2505 cv
cp
0 0 0 rgb
f
408.408 80.0161 mo
408.419 80.1602 li
408.591 80.3452 408.579 80.3604 408.408 80.0161 cv
cp
1 1 1 rgb
f
562.963 57.0776 mo
556.807 48.0649 541.464 55.7979 517.57 59.8618 cv
510.121 61.1289 493.029 63.8232 482.445 64.478 cv
481.043 64.4253 479.646 64.4868 478.265 64.6602 cv
481.394 62.5889 484.303 60.5635 486.188 58.9414 cv
499.083 47.8452 499.487 34.8301 490.601 29.8145 cv
484.763 26.5186 477.022 35.7095 472.347 39.3018 cv
458.911 49.6245 444.234 54.458 437.797 56.7285 cv
422.762 62.0313 412.505 69.6709 408.598 82.5381 cv
408.419 80.1602 li
407.979 79.686 406.295 78.0581 402.706 78.229 cv
391.722 78.7505 390.256 100.822 391.6 115.726 cv
392.803 129.074 396.281 147.457 406.805 146.957 cv
410.967 146.759 413.206 143.881 413.206 143.881 cv
413.121 142.747 li
414.883 144.986 416.894 146.901 418.678 148.256 cv
431.331 157.861 448.787 163.149 465.897 160.177 cv
465.897 160.177 464.965 158.638 465.78 158.451 cv
468.548 161.542 473.893 163.151 478.999 163.383 cv
506.156 164.615 510.661 155.538 511.47 147.911 cv
511.723 145.529 509.95 140.555 504.726 140.559 cv
504.722 140.559 li
511.479 138.769 518.308 135.693 521.465 129.496 cv
523.426 125.649 523.817 118.122 518.171 115.197 cv
518.152 115.2 li
521.366 113.662 524.104 111.755 525.991 109.425 cv
531.298 102.876 530.172 88.5366 519.443 86.8877 cv
518.652 87.46 li
518.664 87.3071 518.668 87.1523 518.676 86.9985 cv
528.195 85.5718 538.424 83.1055 545.411 80.709 cv
559.573 75.8501 568.615 65.353 562.963 57.0776 cv
cp
f
443.732 112.828 mo
443.807 112.781 li
443.857 112.749 443.891 112.7 443.937 112.662 cv
443.897 112.707 li
443.861 112.744 443.824 112.779 443.785 112.81 cv
443.711 112.864 li
443.653 112.898 443.662 112.886 443.664 112.883 cv
443.688 112.856 443.738 112.825 443.732 112.828 cv
cp
464.913 75.1191 mo
464.902 75.0522 li
464.889 74.999 464.902 75.0054 464.925 75.1987 cv
464.921 75.1733 464.917 75.144 464.913 75.1191 cv
cp
562.563 62.4219 mo
562.542 62.9063 562.563 63.3911 562.416 63.8804 cv
562.269 64.6138 li
562.195 64.8564 562.088 65.0957 562.003 65.3374 cv
561.284 67.2729 559.957 69.0801 558.411 70.6606 cv
556.874 72.2642 555.031 73.5947 553.16 74.7847 cv
551.295 76.0005 549.271 76.9189 547.296 77.7935 cv
546.29 78.1694 545.266 78.5874 544.3 78.9009 cv
543.244 79.2368 542.2 79.5684 541.171 79.896 cv
539.115 80.5098 537.164 81.0371 535.225 81.5479 cv
533.269 82.0059 531.394 82.5107 529.566 82.8838 cv
525.925 83.6899 522.562 84.2886 519.578 84.7896 cv
518.084 85.002 516.685 85.2012 515.391 85.3853 cv
514.098 85.5811 512.908 85.6426 511.836 85.7813 cv
509.688 86.0566 508.021 86.1978 506.874 86.3252 cv
505.729 86.4692 505.116 86.5737 505.116 86.5732 cv
504.992 86.5938 li
504.262 86.7178 503.681 87.3247 503.62 88.0972 cv
503.55 89.0083 504.23 89.8047 505.142 89.876 cv
505.142 89.8755 505.784 89.9258 506.994 89.9688 cv
508.202 89.9863 509.995 90.0679 512.218 89.8257 cv
514.268 89.6841 516.7 89.3359 519.448 88.9414 cv
519.639 88.9893 519.912 89.0576 520.271 89.1475 cv
520.656 89.1992 521.063 89.4136 521.556 89.626 cv
522.079 89.7886 522.547 90.1948 523.131 90.5508 cv
524.191 91.4072 525.313 92.7227 526.05 94.6191 cv
526.789 96.4966 527.16 98.9082 526.877 101.486 cv
526.745 102.117 526.723 102.79 526.513 103.423 cv
526.427 103.745 526.341 104.069 526.254 104.397 cv
526.133 104.709 526.011 105.023 525.888 105.34 cv
525.825 105.496 525.771 105.667 525.703 105.811 cv
525.489 106.209 li
525.283 106.614 li
525.213 106.751 525.168 106.879 525.028 107.058 cv
524.792 107.391 524.555 107.727 524.315 108.065 cv
523.68 108.773 li
521.676 110.899 518.808 112.628 515.61 113.952 cv
512.406 115.284 508.863 116.26 505.199 116.946 cv
501.535 117.639 497.733 118.044 493.941 118.164 cv
490.173 118.258 486.306 118.159 482.889 117.414 cv
482.454 117.333 482.076 117.2 481.673 117.095 cv
481.131 116.899 li
480.911 116.831 480.895 116.788 480.761 116.746 cv
480.689 116.746 480.461 116.591 480.262 116.461 cv
480.16 116.396 li
480.132 116.369 li
479.923 116.18 li
479.65 115.924 479.335 115.701 479.126 115.406 cv
478.154 114.321 477.589 113.013 477.428 111.606 cv
477.254 110.2 477.548 108.71 478.084 107.369 cv
478.339 106.688 478.708 106.064 479.093 105.481 cv
479.283 105.187 479.518 104.936 479.72 104.663 cv
480.01 104.365 li
480.101 104.265 480.176 104.165 480.368 104.021 cv
481.439 103.147 482.683 102.48 484.054 101.963 cv
485.396 101.43 486.785 101.021 488.146 100.687 cv
490.873 100.019 493.476 99.6094 495.796 99.2886 cv
498.12 98.9844 500.163 98.7178 501.854 98.4629 cv
503.538 98.2061 504.883 97.9453 505.797 97.7515 cv
506.696 97.5479 507.173 97.4155 507.173 97.4155 cv
507.805 97.2388 508.282 96.6694 508.308 95.979 cv
508.338 95.124 507.67 94.4058 506.815 94.3745 cv
506.815 94.3745 506.32 94.356 505.398 94.3647 cv
504.489 94.374 503.159 94.3931 501.438 94.4902 cv
499.725 94.5898 497.632 94.7627 495.23 95.0918 cv
492.827 95.4155 490.104 95.8271 487.126 96.5435 cv
485.638 96.9038 484.084 97.3491 482.482 97.9766 cv
480.897 98.5693 479.195 99.4321 477.657 100.676 cv
477.511 100.783 477.297 100.991 477.094 101.194 cv
476.492 101.806 li
476.174 102.207 475.83 102.596 475.547 103.021 cv
474.975 103.869 474.456 104.763 474.079 105.733 cv
473.305 107.651 472.854 109.811 473.104 112.062 cv
473.329 114.301 474.302 116.574 475.852 118.302 cv
476.032 118.536 476.234 118.741 476.445 118.937 cv
471.769 120.424 466.363 123.292 466.355 132.518 cv
466.353 135.6 467.63 138.309 470.047 140.354 cv
470.166 140.455 470.296 140.548 470.421 140.645 cv
464.404 142.995 461.593 147.398 461.868 154.007 cv
461.939 155.708 462.464 157.203 463.309 158.514 cv
463.101 158.542 462.88 158.573 462.646 158.605 cv
461.725 158.705 460.65 158.765 459.395 158.872 cv
458.756 158.887 458.075 158.902 457.357 158.918 cv
456.999 158.927 456.632 158.935 456.255 158.943 cv
455.878 158.93 455.492 158.917 455.099 158.904 cv
453.523 158.887 451.822 158.732 450.024 158.56 cv
449.13 158.44 448.21 158.318 447.27 158.193 cv
446.336 158.022 445.383 157.848 444.413 157.67 cv
443.447 157.472 442.477 157.216 441.487 156.988 cv
440.504 156.736 439.523 156.423 438.526 156.141 cv
437.539 155.829 436.558 155.467 435.564 155.131 cv
434.59 154.743 433.611 154.354 432.633 153.964 cv
431.675 153.527 430.717 153.09 429.762 152.655 cv
428.831 152.171 427.889 151.716 426.98 151.218 cv
425.168 150.21 423.426 149.145 421.799 148.027 cv
421.009 147.451 420.172 146.901 419.46 146.336 cv
419.05 146.026 418.753 145.755 418.414 145.475 cv
418.084 145.181 417.748 144.881 417.432 144.58 cv
416.161 143.365 415.058 142.11 414.144 140.892 cv
413.232 139.672 412.496 138.492 411.957 137.414 cv
411.42 136.337 410.983 135.389 410.698 134.594 cv
410.537 134.197 410.418 133.842 410.321 133.527 cv
410.198 133.215 410.126 132.945 410.069 132.726 cv
409.948 132.286 409.859 132.045 409.859 132.045 cv
409.793 131.864 li
409.622 131.406 409.208 131.056 408.688 130.994 cv
407.949 130.904 407.276 131.432 407.188 132.172 cv
407.188 132.172 407.151 132.473 407.129 133.049 cv
407.105 133.34 407.113 133.693 407.15 134.105 cv
407.19 134.517 407.216 135.001 407.341 135.514 cv
407.511 136.571 407.94 137.781 408.54 139.099 cv
409.159 140.409 410.005 141.785 411.027 143.195 cv
411.033 143.204 411.041 143.212 411.047 143.221 cv
410.296 143.871 408.83 144.858 406.71 144.959 cv
406.606 144.964 406.505 144.966 406.403 144.966 cv
397.573 144.966 394.587 126.588 393.592 115.546 cv
392.475 103.157 393.549 88.1284 398.468 82.4829 cv
399.722 81.0435 401.14 80.3057 402.801 80.2266 cv
405.254 80.1069 406.459 81.0176 406.925 81.4961 cv
406.876 81.6348 406.822 81.7861 406.773 81.9229 cv
406.291 83.8086 405.804 85.5347 405.607 87.1289 cv
405.486 87.9238 405.341 88.666 405.286 89.3862 cv
405.229 90.1069 405.207 90.7852 405.174 91.4136 cv
405.142 92.0396 405.126 92.6294 405.126 93.1479 cv
405.158 93.6543 405.188 94.1138 405.213 94.5254 cv
405.348 96.1729 405.47 97.0513 405.469 97.0513 cv
405.552 97.6509 406.02 98.1543 406.648 98.25 cv
407.414 98.3672 408.131 97.8408 408.248 97.0747 cv
408.247 97.0747 408.382 96.1978 408.541 94.5532 cv
408.572 94.1421 408.608 93.6826 408.647 93.1772 cv
408.71 92.6992 408.778 92.1772 408.853 91.6133 cv
408.916 91.0522 409 90.4521 409.054 89.8096 cv
409.114 89.167 409.282 88.4839 409.387 87.7603 cv
409.567 86.2969 410.021 84.749 410.455 83.0469 cv
410.751 82.2246 411.059 81.3691 411.378 80.4819 cv
411.704 79.5977 412.184 78.7466 412.597 77.8296 cv
413.025 76.9189 413.633 76.0718 414.161 75.146 cv
414.742 74.252 415.447 73.4033 416.106 72.4893 cv
416.887 71.6689 417.614 70.7642 418.483 69.9478 cv
419.377 69.1563 420.222 68.2744 421.248 67.5425 cv
425.188 64.4424 430.075 61.7783 435.589 59.6802 cv
438.317 58.624 441.277 57.6416 444.288 56.5313 cv
445.785 55.9521 447.298 55.3672 448.825 54.7764 cv
450.334 54.1289 451.857 53.4756 453.394 52.8169 cv
459.495 50.0732 465.589 46.6812 471.327 42.5454 cv
473.493 41.0054 li
473.714 40.8477 473.848 40.731 474.03 40.5913 cv
474.582 40.1396 li
475.608 39.2598 li
476.945 38.0859 478.216 36.9194 479.513 35.8198 cv
480.805 34.7212 482.119 33.6895 483.466 32.8403 cv
484.803 31.9961 486.215 31.3521 487.436 31.2202 cv
488.045 31.1563 488.585 31.2168 489.086 31.3999 cv
489.215 31.4346 489.335 31.5024 489.458 31.5625 cv
489.551 31.6064 li
489.553 31.6074 489.551 31.6064 489.553 31.6074 cv
489.82 31.7842 li
490.918 32.5093 li
491.218 32.7471 491.403 32.9668 491.66 33.1846 cv
491.779 33.2974 491.907 33.3896 492.023 33.5156 cv
492.359 33.9351 li
492.568 34.2236 492.849 34.4634 493.01 34.7847 cv
493.551 35.709 li
494.801 38.2876 494.891 41.4409 493.984 44.4014 cv
493.129 47.3774 491.491 50.1738 489.491 52.6406 cv
489.021 53.2808 488.469 53.8599 487.924 54.4409 cv
487.113 55.3159 li
486.835 55.5996 486.531 55.8613 486.242 56.1343 cv
485.651 56.666 485.094 57.2363 484.483 57.7334 cv
483.872 58.2402 483.278 58.7002 482.623 59.187 cv
477.439 62.9893 471.982 66.2949 466.924 69.6538 cv
465.65 70.502 464.404 71.334 463.148 72.2905 cv
462.831 72.5371 462.52 72.7827 462.172 73.1011 cv
461.909 73.3486 li
461.597 73.6963 li
461.56 73.7334 461.468 73.8594 461.393 73.9766 cv
461.317 74.0933 461.248 74.2144 461.185 74.3364 cv
461.161 74.3672 461.061 74.6431 461.03 74.8066 cv
460.988 74.9985 460.969 75.1997 460.973 75.3921 cv
460.982 75.644 460.997 75.6934 460.995 75.6831 cv
461.006 75.75 li
461.131 76.4834 461.215 77.0967 461.298 77.7876 cv
461.615 80.4722 461.635 83.0801 461.364 85.541 cv
460.84 90.4751 459.094 94.752 456.887 98.0933 cv
454.685 101.457 452.073 103.898 449.812 105.717 cv
447.545 107.548 445.588 108.783 444.256 109.575 cv
443.654 109.936 443.162 110.185 442.862 110.333 cv
442.764 110.351 442.666 110.376 442.57 110.417 cv
442.57 110.417 442.496 110.448 442.349 110.51 cv
442.304 110.532 442.259 110.551 442.146 110.623 cv
442.03 110.707 li
441.985 110.744 441.941 110.785 441.899 110.829 cv
441.836 110.898 li
441.743 111.01 441.659 111.15 441.603 111.302 cv
441.548 111.512 441.513 111.481 441.519 111.887 cv
441.518 112.319 441.906 112.855 442.229 112.994 cv
442.403 113.091 442.615 113.153 442.818 113.167 cv
442.922 113.175 443.052 113.167 443.097 113.162 cv
443.429 113.119 443.483 113.094 443.642 113.062 cv
444.164 112.935 444.793 112.724 445.617 112.408 cv
447.243 111.771 449.534 110.648 452.137 108.721 cv
454.715 106.784 457.609 104.023 460.131 100.229 cv
462.646 96.4536 464.662 91.5405 465.267 85.9751 cv
465.58 83.2007 465.563 80.2886 465.223 77.333 cv
465.169 76.8594 465.1 76.3579 465.027 75.8672 cv
465.19 75.728 465.373 75.5801 465.566 75.4321 cv
466.645 74.6143 467.876 73.791 469.117 72.9722 cv
472.265 70.8926 475.595 68.8247 478.988 66.5879 cv
479.133 66.6104 479.279 66.6206 479.431 66.6104 cv
479.431 66.6104 481.938 66.4414 486.328 66.1465 cv
488.512 66.0596 491.217 65.6602 494.298 65.3184 cv
495.841 65.1367 497.482 64.9434 499.213 64.7393 cv
500.921 64.4961 502.717 64.2402 504.592 63.9731 cv
506.464 63.7021 508.415 63.4194 510.435 63.127 cv
512.449 62.8052 514.533 62.4731 516.674 62.1318 cv
520.95 61.4551 525.517 60.5171 530.121 59.4683 cv
534.743 58.4243 539.477 57.2148 544.244 56.2065 cv
546.625 55.7144 549.021 55.2783 551.369 55.0757 cv
553.703 54.8828 556.03 54.9365 557.91 55.6309 cv
558.847 55.978 559.653 56.4844 560.336 57.1602 cv
560.496 57.3428 560.674 57.5039 560.826 57.6968 cv
561.05 57.9941 li
561.163 58.1416 li
561.217 58.2104 li
561.501 58.7275 561.85 59.2866 562.064 59.7573 cv
562.119 59.9629 562.179 60.1626 562.247 60.3604 cv
562.307 60.564 562.416 60.7319 562.425 60.9902 cv
562.528 61.7017 li
562.545 61.8203 562.575 61.9375 562.582 62.0576 cv
562.563 62.4219 li
cp
519.683 128.588 mo
516.853 134.143 510.388 136.974 504.339 138.598 cv
504.31 138.604 504.282 138.613 504.254 138.621 cv
501.116 139.458 498.094 139.977 495.759 140.373 cv
489.668 141.403 481.924 141.383 476.554 139.439 cv
476.511 139.419 476.464 139.407 476.42 139.39 cv
474.947 138.845 473.647 138.16 472.63 137.299 cv
471.098 136.003 470.354 134.441 470.355 132.521 cv
470.362 124.698 474.998 123.435 479.905 122.097 cv
480.377 121.969 480.838 121.843 481.281 121.714 cv
481.375 121.687 481.46 121.646 481.546 121.607 cv
481.664 121.637 481.784 121.672 481.9 121.695 cv
486.022 122.591 490.045 122.695 494.084 122.582 cv
498.111 122.442 502.114 122.004 506.017 121.256 cv
509.917 120.512 513.724 119.462 517.292 117.967 cv
517.591 117.842 517.886 117.708 518.182 117.575 cv
521.736 120.306 520.989 126.026 519.683 128.588 cv
cp
508.116 143.983 mo
509.263 145.256 509.562 146.939 509.48 147.7 cv
508.741 154.68 504.617 162.546 479.09 161.385 cv
472.859 161.102 466.063 158.621 465.864 153.84 cv
465.68 149.394 466.762 145.059 475.598 143.327 cv
479.149 144.53 483.383 145.05 487.615 145.05 cv
490.637 145.05 493.658 144.785 496.427 144.316 cv
498.793 143.916 501.798 143.406 504.97 142.58 cv
506.254 142.634 507.316 143.094 508.116 143.983 cv
cp
566.657 61.2798 mo
566.487 60.1387 li
566.364 59.3789 566.003 58.5654 565.728 57.7988 cv
565.422 57.1582 565.112 56.6816 564.805 56.1138 cv
564.775 56.063 li
564.572 55.7363 564.695 55.9395 564.639 55.8521 cv
564.553 55.7383 li
564.382 55.5107 li
564.037 55.0576 li
563.799 54.7607 563.52 54.4868 563.259 54.2041 cv
562.161 53.1069 560.785 52.2549 559.364 51.7329 cv
556.49 50.6934 553.654 50.7251 551.024 50.9209 cv
548.382 51.1479 545.859 51.6118 543.395 52.1172 cv
538.476 53.1533 533.768 54.353 529.193 55.3804 cv
524.605 56.4233 520.236 57.3013 515.98 57.9951 cv
513.856 58.3452 511.791 58.6855 509.792 59.0151 cv
507.79 59.3159 505.854 59.6064 503.997 59.8853 cv
502.14 60.1597 500.359 60.4229 498.666 60.6733 cv
496.984 60.8804 495.389 61.0767 493.89 61.2617 cv
490.884 61.6113 488.3 62.0171 486.084 62.1182 cv
485.838 62.1357 485.6 62.1533 485.366 62.1699 cv
485.936 61.7446 486.521 61.2915 487.078 60.8315 cv
487.756 60.2813 488.371 59.6636 489.022 59.0781 cv
489.342 58.7778 489.673 58.4912 489.982 58.1777 cv
490.89 57.208 li
491.498 56.563 492.111 55.9189 492.651 55.1958 cv
494.91 52.417 496.849 49.2012 497.922 45.5269 cv
498.487 43.7065 498.729 41.7397 498.688 39.7534 cv
498.639 37.7554 498.113 35.7378 497.243 33.8691 cv
496.466 32.5239 li
496.218 32.0674 495.844 31.6987 495.532 31.2856 cv
495.039 30.6846 li
494.858 30.4902 494.642 30.3081 494.441 30.1216 cv
494.038 29.7637 493.603 29.3579 493.211 29.0601 cv
492.115 28.3315 li
491.841 28.1494 li
491.772 28.104 li
491.778 28.1074 491.474 27.9224 491.555 27.9756 cv
491.354 27.8735 li
491.084 27.7373 490.814 27.603 490.522 27.5073 cv
489.378 27.0771 488.125 26.9629 486.99 27.0869 cv
484.701 27.353 482.878 28.3223 481.258 29.3257 cv
479.64 30.354 478.2 31.5044 476.832 32.6733 cv
475.465 33.8413 474.167 35.04 472.893 36.1665 cv
471.941 36.9878 li
471.487 37.3623 li
471.325 37.4873 471.129 37.6533 470.995 37.7446 cv
468.931 39.2192 li
463.469 43.1841 457.624 46.4702 451.729 49.1436 cv
450.241 49.7871 448.767 50.4253 447.307 51.0576 cv
445.82 51.6377 444.349 52.2124 442.893 52.7813 cv
439.961 53.8745 437.038 54.8525 434.141 55.9824 cv
428.388 58.1968 423.139 61.0479 418.811 64.478 cv
417.694 65.2876 416.741 66.269 415.757 67.1558 cv
414.794 68.0688 413.968 69.0869 413.104 70.0142 cv
412.356 71.0425 411.571 72.0068 410.917 73.0186 cv
410.315 74.0625 409.643 75.0313 409.158 76.0566 cv
408.918 76.5854 408.663 77.0981 408.421 77.606 cv
407.157 76.8037 405.283 76.103 402.611 76.2314 cv
399.842 76.3628 397.433 77.582 395.452 79.855 cv
389.375 86.8296 388.448 103.05 389.607 115.905 cv
391.586 137.85 397.218 148.968 406.353 148.967 cv
406.533 148.967 406.716 148.963 406.899 148.954 cv
410.071 148.804 412.333 147.37 413.6 146.296 cv
413.951 146.672 414.313 147.047 414.692 147.419 cv
415.049 147.767 415.416 148.104 415.799 148.454 cv
416.193 148.793 416.619 149.173 416.989 149.46 cv
417.809 150.125 418.646 150.689 419.497 151.326 cv
421.219 152.543 423.063 153.705 424.983 154.805 cv
425.946 155.349 426.943 155.849 427.932 156.376 cv
428.938 156.864 429.96 157.334 430.982 157.802 cv
432.026 158.219 433.069 158.636 434.109 159.052 cv
435.169 159.414 436.216 159.8 437.271 160.134 cv
438.335 160.439 439.382 160.772 440.433 161.043 cv
441.489 161.29 442.527 161.563 443.56 161.777 cv
444.598 161.968 445.618 162.156 446.617 162.34 cv
447.624 162.476 448.609 162.608 449.568 162.737 cv
451.498 162.9 453.324 163.04 455.017 163.039 cv
455.438 163.048 455.853 163.056 456.257 163.064 cv
456.661 163.051 457.057 163.038 457.441 163.024 cv
458.212 162.997 458.943 162.971 459.63 162.946 cv
461.017 162.815 462.253 162.72 463.222 162.601 cv
465.105 162.318 466.182 162.157 466.182 162.157 cv
466.417 162.121 466.634 162.04 466.832 161.933 cv
470.084 164.045 474.52 165.182 478.908 165.381 cv
480.625 165.458 482.273 165.498 483.856 165.498 cv
502.763 165.498 512.208 159.917 513.459 148.123 cv
513.656 146.26 513.001 143.43 511.09 141.307 cv
510.922 141.12 510.744 140.948 510.563 140.78 cv
515.726 138.746 520.61 135.58 523.247 130.404 cv
525.322 126.333 525.633 119.721 521.933 115.619 cv
523.729 114.527 525.398 113.252 526.835 111.722 cv
527.31 111.186 li
527.544 110.919 li
527.66 110.785 li
527.84 110.539 li
528.075 110.198 528.309 109.859 528.541 109.523 cv
528.773 109.196 529.023 108.665 529.252 108.245 cv
529.592 107.577 li
529.69 107.359 529.759 107.151 529.842 106.939 cv
529.998 106.517 530.153 106.098 530.308 105.682 cv
530.417 105.258 530.525 104.837 530.633 104.42 cv
530.881 103.592 530.924 102.751 531.066 101.941 cv
531.389 98.6772 530.907 95.623 529.88 93.083 cv
528.976 90.8169 527.576 89.0225 526.138 87.7734 cv
527.529 87.5059 528.958 87.2192 530.446 86.8916 cv
532.314 86.5117 534.236 85.9976 536.238 85.5298 cv
538.23 85.0093 540.338 84.4385 542.422 83.8169 cv
543.451 83.4907 544.495 83.1602 545.552 82.8252 cv
546.695 82.4546 547.751 82.0239 548.868 81.6045 cv
551.039 80.6514 553.253 79.6431 555.347 78.2881 cv
557.445 76.957 559.523 75.4629 561.356 73.5659 cv
563.188 71.6895 564.873 69.4834 565.892 66.7729 cv
566.014 66.4326 566.151 66.1001 566.256 65.751 cv
566.488 64.6621 li
566.682 63.9458 566.691 63.1812 566.712 62.4199 cv
566.727 61.8501 li
566.716 61.6602 566.681 61.4697 566.657 61.2798 cv
cp
0 0 0 rgb
f
531.525 278 mo
531.794 275.443 537.369 272.833 537.334 265 cv
537.271 250.767 513.37 252.696 497.335 254.669 cv
498.379 253.011 li
509.055 238.5 511.095 210.75 503.922 197.979 cv
500.606 192.075 493.362 188.485 487.443 192.847 cv
479.604 198.629 481.472 211.109 479.426 219.293 cv
477.387 227.449 471.761 236.492 465.915 241.974 cv
456.964 250.366 448.389 258.542 441.891 269.157 cv
436.57 277.848 433.995 287.61 434.385 297.07 cv
434.326 297 li
416.75 307.749 415.735 338.486 437.092 355.986 cv
447.37 364.409 473.729 368.258 481.987 354.021 cv
485.986 354.46 489.992 354.378 493.167 354.214 cv
505.667 353.566 523.624 348.833 522.525 336.475 cv
522.03 330.897 521.264 330.469 524.502 325 cv
526.998 320.783 529.003 317.076 528.498 312.002 cv
527.999 306.978 526.564 306.606 530.375 302.015 cv
533.721 297.982 537.13 293.323 535.4 287.502 cv
533.676 281.699 531.236 280.748 531.525 278 cv
cp
1 1 1 rgb
f
533.619 277.973 mo
533.618 277.972 li
533.619 277.974 533.622 277.971 533.619 277.973 cv
cp
0 0 0 rgb
f
432.407 300.878 mo
432.622 302.696 432.918 304.458 433.355 306.126 cv
433.491 306.774 433.671 307.404 433.865 308.021 cv
434.056 308.638 434.229 309.251 434.426 309.848 cv
434.646 310.437 434.863 311.017 435.076 311.588 cv
435.236 312.015 li
435.316 312.228 li
435.355 312.333 li
435.376 312.386 li
435.438 312.529 li
435.56 312.787 435.679 313.043 435.798 313.297 cv
436.292 314.319 436.674 315.274 437.282 316.282 cv
437.576 316.793 437.859 317.309 438.144 317.801 cv
435.241 325.932 437.425 335.292 444.144 343.12 cv
450.208 350.187 460.444 356.228 471.515 356.228 cv
473.693 356.228 475.905 355.977 478.122 355.471 cv
478.214 355.489 478.301 355.515 478.393 355.532 cv
475.256 358.912 470.872 360.372 467.451 360.995 cv
456.648 362.963 444.177 359.207 438.359 354.439 cv
427.989 345.942 422.317 333.339 423.187 320.727 cv
423.754 312.493 427.066 305.46 432.407 300.878 cv
cp
437.027 289.473 mo
437.389 286.666 438.02 283.788 438.984 280.927 cv
439.936 278.059 441.175 275.202 442.676 272.458 cv
443.081 271.758 443.487 271.054 443.896 270.346 cv
444.343 269.666 444.792 268.981 445.242 268.294 cv
445.704 267.613 446.122 266.901 446.623 266.235 cv
447.117 265.566 447.613 264.895 448.112 264.219 cv
450.108 261.521 452.363 258.929 454.695 256.345 cv
457.088 253.804 459.569 251.271 462.168 248.792 cv
463.456 247.549 464.766 246.302 466.104 245.054 cv
467.408 243.85 468.813 242.461 470.122 241.036 cv
472.709 238.165 474.868 234.984 476.788 231.663 cv
477.241 230.816 477.758 230.007 478.156 229.128 cv
479.396 226.521 li
480.484 223.74 li
480.75 223.044 li
480.947 222.385 li
481.34 221.067 li
481.963 219.158 482.252 217.168 482.479 215.315 cv
482.711 213.441 482.857 211.611 483.035 209.836 cv
483.211 208.057 483.4 206.317 483.709 204.657 cv
483.999 202.988 484.397 201.389 484.988 199.946 cv
485.246 199.197 485.633 198.553 485.972 197.878 cv
486.389 197.275 486.791 196.617 487.217 196.196 cv
487.521 195.827 li
487.611 195.705 487.832 195.549 487.981 195.411 cv
488.84 194.676 li
489.697 194.121 li
490.593 193.695 li
493.015 192.714 495.828 193.308 498.105 194.884 cv
499.232 195.644 500.282 196.699 501.043 197.727 cv
501.331 198.105 li
501.65 198.62 li
501.958 199.113 li
501.959 199.114 501.957 199.112 501.958 199.113 cv
501.987 199.175 li
502.046 199.297 li
502.165 199.542 li
502.481 200.196 502.796 200.846 503.108 201.49 cv
505.245 206.944 505.933 212.796 505.955 218.116 cv
505.989 223.461 505.4 228.373 504.55 232.637 cv
503.714 236.915 502.471 240.498 501.347 243.377 cv
500.713 244.775 500.213 246.1 499.632 247.079 cv
499.063 248.102 498.692 248.963 498.163 249.692 cv
497.218 251.135 496.713 251.904 496.713 251.904 cv
496.709 251.91 li
496.523 252.193 496.428 252.508 496.399 252.824 cv
494.602 253.054 492.815 253.283 491.056 253.508 cv
490.688 253.555 li
490.265 253.62 li
489.534 253.734 li
489.035 253.819 488.453 253.958 487.924 254.073 cv
486.896 254.347 485.884 254.654 484.912 255.046 cv
481.021 256.585 477.601 259.007 475.096 262.2 cv
473.855 263.799 472.873 265.633 472.336 267.636 cv
471.834 269.643 471.817 271.851 472.509 273.806 cv
473.164 275.769 474.354 277.416 475.689 278.683 cv
476.027 278.993 476.376 279.283 476.717 279.578 cv
476.576 279.612 476.441 279.641 476.297 279.678 cv
474.692 280.099 472.899 280.732 471.06 281.729 cv
469.222 282.717 467.324 284.085 465.711 286.011 cv
464.125 287.929 462.811 290.474 462.59 293.39 cv
462.329 296.3 463.337 299.328 465.031 301.649 cv
465.879 302.816 466.831 303.896 467.935 304.771 cv
468.077 304.883 468.235 305.003 468.401 305.124 cv
467.917 305.32 467.418 305.539 466.897 305.815 cv
465.54 306.52 464.058 307.484 462.676 308.854 cv
461.301 310.214 460.006 311.986 459.25 314.163 cv
458.857 315.239 458.594 316.408 458.516 317.621 cv
458.417 318.832 458.493 320.091 458.774 321.324 cv
459.292 323.804 460.615 326.162 462.409 327.999 cv
463.989 329.674 465.938 330.896 467.967 331.812 cv
467.066 332.485 466.125 333.43 465.241 334.67 cv
464.208 336.156 463.33 338.15 463.141 340.528 cv
463.013 341.713 463.16 342.977 463.438 344.26 cv
463.801 345.515 464.302 346.815 465.11 347.965 cv
465.311 348.252 465.493 348.563 465.719 348.834 cv
465.951 349.101 466.186 349.369 466.423 349.641 cv
466.783 350.046 li
467.22 350.443 li
467.454 350.652 467.69 350.863 467.93 351.076 cv
468.355 351.412 468.876 351.797 469.386 352.138 cv
460.411 351.438 452.206 346.372 447.179 340.515 cv
442.211 334.727 440.104 328.28 441.088 322.28 cv
441.404 322.729 441.716 323.169 442.014 323.587 cv
443.907 326.244 445.452 328.143 446.554 329.391 cv
447.094 330.021 447.476 330.49 447.778 330.807 cv
448.083 331.12 448.24 331.281 448.24 331.281 cv
448.369 331.415 li
448.728 331.781 449.272 331.941 449.798 331.785 cv
450.552 331.56 450.98 330.766 450.756 330.012 cv
450.756 330.012 450.685 329.773 450.547 329.313 cv
450.39 328.867 450.177 328.15 449.776 327.335 cv
449.01 325.683 447.594 323.478 445.685 320.938 cv
444.77 319.646 443.754 318.223 442.767 316.645 cv
442.225 315.854 441.823 315.055 441.334 314.22 cv
440.84 313.44 440.407 312.377 439.929 311.379 cv
439.811 311.125 439.691 310.869 439.571 310.61 cv
439.49 310.39 439.409 310.166 439.326 309.941 cv
439.136 309.429 438.942 308.909 438.747 308.382 cv
438.583 307.843 438.418 307.297 438.25 306.743 cv
438.075 306.19 437.915 305.626 437.796 305.042 cv
437.193 302.739 436.88 300.241 436.705 297.633 cv
436.525 295.021 436.673 292.278 437.027 289.473 cv
cp
509.729 255.448 mo
513.865 255.216 518.079 255.152 522.212 255.614 cv
524.272 255.848 526.314 256.216 528.221 256.833 cv
530.105 257.458 531.917 258.303 533.16 259.566 cv
533.62 260.039 li
533.767 260.202 533.875 260.387 534.008 260.557 cv
534.295 260.886 534.444 261.292 534.663 261.661 cv
534.816 262.053 534.986 262.482 535.081 262.87 cv
535.14 263.287 535.281 263.551 535.29 264.185 cv
535.433 266.122 535.168 268.077 534.392 269.798 cv
534.011 270.668 533.521 271.5 532.923 272.317 cv
532.323 273.148 531.627 273.916 530.848 274.94 cv
530.653 275.2 530.456 275.47 530.257 275.813 cv
530.096 276.013 529.76 276.799 529.669 277.156 cv
529.575 277.567 li
529.5 278.064 529.552 277.796 529.535 277.948 cv
529.532 278.107 li
529.532 278.425 li
529.539 278.85 529.533 279.277 529.662 279.68 cv
529.84 280.544 530.187 281.18 530.491 281.776 cv
531.369 283.271 li
531.925 284.201 532.355 285.093 532.727 285.963 cv
532.927 286.395 533.095 286.998 533.281 287.507 cv
533.418 287.905 li
533.485 288.104 li
533.488 288.112 533.487 288.111 533.489 288.116 cv
533.485 288.106 533.482 288.1 533.486 288.114 cv
533.507 288.199 li
533.672 288.874 li
534.031 290.68 533.832 292.512 533.076 294.297 cv
532.353 296.086 531.163 297.803 529.839 299.472 cv
528.813 300.734 li
527.709 302.156 li
527.342 302.631 527.002 303.248 526.658 303.793 cv
526.495 304.1 526.358 304.477 526.218 304.82 cv
526.15 304.997 526.078 305.169 526.021 305.352 cv
525.913 305.951 li
525.735 306.775 525.823 307.504 525.874 308.194 cv
526.148 309.889 li
526.242 310.377 526.317 310.913 526.384 311.468 cv
526.479 312.223 li
526.506 312.938 li
526.604 314.846 526.261 316.696 525.555 318.515 cv
524.843 320.356 523.858 322.082 522.746 323.962 cv
522.217 324.913 521.634 325.859 521.145 326.956 cv
520.629 327.996 520.21 329.311 520.072 330.65 cv
520.046 331.3 520.015 331.976 520.077 332.527 cv
520.112 333.131 520.168 333.66 520.228 334.168 cv
520.39 335.723 li
520.467 336.497 li
520.497 336.728 520.487 336.932 520.502 337.148 cv
520.588 338.867 520.173 340.487 519.333 341.922 cv
517.647 344.828 514.404 346.856 511.116 348.302 cv
507.779 349.745 504.245 350.657 500.792 351.28 cv
497.338 351.901 493.92 352.192 490.639 352.271 cv
487.349 352.361 484.211 352.274 481.31 351.885 cv
480.688 351.806 480.082 351.706 479.484 351.598 cv
479.133 351.399 478.723 351.311 478.303 351.353 cv
476.564 350.97 474.939 350.467 473.511 349.801 cv
472.934 349.57 472.444 349.242 471.928 348.967 cv
471.442 348.656 471.084 348.407 470.62 348.062 cv
470.381 347.849 470.144 347.638 469.909 347.43 cv
469.733 347.273 li
469.646 347.195 li
469.634 347.185 li
469.396 346.909 li
469.226 346.717 469.058 346.527 468.892 346.339 cv
468.729 346.149 468.615 345.934 468.474 345.737 cv
467.904 344.949 467.599 344.089 467.343 343.271 cv
467.176 342.434 467.057 341.617 467.151 340.843 cv
467.271 339.29 467.847 337.953 468.547 336.945 cv
469.264 335.948 470.027 335.188 470.76 334.734 cv
471.959 333.884 473.291 333.522 473.234 333.507 cv
473.273 333.491 473.307 333.468 473.345 333.45 cv
474.109 333.583 474.924 333.681 475.698 333.797 cv
476.909 333.992 478.002 334.043 479.111 334.134 cv
480.218 334.224 481.311 334.31 482.378 334.322 cv
483.448 334.354 484.5 334.385 485.529 334.415 cv
486.557 334.403 487.563 334.392 488.541 334.381 cv
490.498 334.383 492.348 334.261 494.052 334.139 cv
495.757 334.064 497.313 333.782 498.689 333.598 cv
499.377 333.486 500.021 333.402 500.613 333.288 cv
501.203 333.15 501.745 333.024 502.234 332.91 cv
504.188 332.441 505.278 332.096 505.278 332.096 cv
505.879 331.904 506.316 331.341 506.314 330.677 cv
506.312 329.857 505.646 329.194 504.826 329.197 cv
504.722 329.197 li
504.722 329.197 503.605 329.2 501.697 329.342 cv
501.222 329.38 500.695 329.423 500.121 329.469 cv
499.544 329.495 498.919 329.522 498.252 329.553 cv
496.917 329.605 495.427 329.758 493.78 329.79 cv
492.138 329.828 490.364 329.983 488.48 329.952 cv
487.54 329.957 486.573 329.961 485.585 329.967 cv
484.6 329.93 483.594 329.894 482.57 329.855 cv
481.543 329.838 480.513 329.748 479.471 329.656 cv
478.434 329.565 477.345 329.502 476.385 329.335 cv
475.382 329.174 474.431 329.119 473.313 328.805 cv
471.836 328.447 li
471.371 328.271 470.886 328.13 470.435 327.931 cv
468.623 327.155 466.919 326.168 465.664 324.841 cv
464.38 323.547 463.501 321.979 463.146 320.359 cv
462.951 319.553 462.896 318.731 462.955 317.935 cv
462.995 317.136 463.163 316.359 463.423 315.632 cv
463.924 314.169 464.766 312.896 465.747 311.887 cv
466.724 310.87 467.823 310.107 468.864 309.535 cv
469.898 308.944 470.912 308.608 471.733 308.311 cv
472.536 308.071 473.156 307.892 473.716 307.793 cv
473.803 307.775 473.872 307.761 473.945 307.746 cv
475.854 308.314 477.764 308.644 479.63 308.876 cv
482.206 309.169 484.717 309.259 487.127 309.263 cv
491.947 309.256 496.373 308.93 500.137 308.563 cv
503.898 308.194 506.997 307.792 509.155 307.526 cv
511.307 307.272 512.536 307.127 512.536 307.127 cv
513.224 307.045 513.781 306.483 513.83 305.768 cv
513.885 304.958 513.273 304.258 512.464 304.203 cv
512.464 304.203 511.176 304.113 508.95 304.117 cv
506.723 304.105 503.568 304.222 499.823 304.431 cv
496.08 304.617 491.735 304.933 487.141 304.908 cv
484.847 304.89 482.49 304.786 480.158 304.504 cv
477.839 304.204 475.519 303.732 473.493 302.881 cv
472.477 302.447 471.566 301.929 470.843 301.363 cv
469.986 300.684 469.271 299.877 468.665 299.055 cv
467.452 297.397 466.851 295.52 466.995 293.714 cv
467.117 291.904 467.946 290.196 469.081 288.797 cv
470.242 287.405 471.675 286.302 473.132 285.483 cv
474.588 284.656 476.062 284.096 477.405 283.717 cv
478.754 283.345 479.964 283.112 480.976 282.991 cv
481.99 282.861 482.695 282.8 483.327 282.783 cv
483.915 282.759 484.229 282.747 484.229 282.747 cv
484.324 282.743 484.416 282.725 484.509 282.708 cv
484.696 282.73 484.886 282.755 485.071 282.775 cv
486.59 282.926 488.04 282.991 489.44 283.031 cv
495.03 283.148 499.825 282.916 503.772 282.648 cv
507.719 282.404 510.799 282.058 512.892 281.843 cv
514.939 281.621 516.032 281.502 516.032 281.502 cv
516.114 281.493 li
516.861 281.413 517.446 280.785 517.454 280.015 cv
517.463 279.186 516.797 278.506 515.968 278.498 cv
515.968 278.498 515.67 278.495 515.092 278.489 cv
514.542 278.501 513.726 278.518 512.661 278.541 cv
510.551 278.617 507.47 278.732 503.563 278.934 cv
499.662 279.082 494.909 279.359 489.547 279.221 cv
488.21 279.182 486.835 279.116 485.459 278.977 cv
485.286 278.958 485.113 278.935 484.94 278.914 cv
484.692 278.807 484.419 278.745 484.131 278.748 cv
484.131 278.748 484.01 278.749 483.8 278.751 cv
483.675 278.73 483.547 278.714 483.423 278.691 cv
482.762 278.578 482.091 278.382 481.711 278.251 cv
481.255 278.035 li
481.243 278.028 481.234 278.023 481.243 278.027 cv
481.188 277.992 li
481.076 277.924 li
480.852 277.786 li
480.561 277.595 480.234 277.435 479.965 277.219 cv
479.688 277.01 479.391 276.815 479.122 276.596 cv
478.339 275.913 li
477.341 274.962 476.568 273.836 476.155 272.596 cv
475.714 271.36 475.729 269.986 476.063 268.6 cv
476.44 267.216 477.157 265.829 478.146 264.563 cv
480.131 262.028 483.04 259.938 486.329 258.655 cv
487.148 258.324 488.001 258.07 488.862 257.84 cv
489.29 257.752 489.662 257.653 490.134 257.572 cv
490.864 257.458 li
491.173 257.411 li
491.543 257.364 li
493.506 257.116 495.494 256.865 497.503 256.611 cv
501.507 256.125 505.589 255.683 509.729 255.448 cv
cp
419.196 320.451 mo
418.238 334.354 424.454 348.217 435.824 357.533 cv
441.873 362.49 451.979 365.518 461.347 365.517 cv
463.691 365.517 465.991 365.327 468.167 364.931 cv
474.796 363.724 479.864 360.688 482.968 356.152 cv
485.486 356.373 488.087 356.419 490.752 356.351 cv
494.208 356.273 497.807 355.975 501.508 355.317 cv
505.199 354.655 508.996 353.696 512.759 352.081 cv
514.634 351.263 516.5 350.271 518.266 348.984 cv
520.01 347.677 521.692 346.069 522.891 343.982 cv
524.105 341.928 524.733 339.401 524.6 336.987 cv
524.582 336.689 524.582 336.374 524.547 336.089 cv
524.467 335.314 li
524.303 333.761 li
524.217 332.981 li
524.163 332.275 li
524.104 331.782 524.146 331.407 524.147 331.003 cv
524.258 329.56 525.231 327.832 526.275 326.009 cv
527.334 324.208 528.51 322.181 529.354 319.971 cv
530.221 317.754 530.698 315.227 530.561 312.755 cv
530.518 311.826 li
530.406 310.948 li
530.341 310.411 530.264 309.857 530.153 309.264 cv
529.894 307.694 li
529.872 307.288 529.816 306.903 529.901 306.643 cv
529.924 306.422 li
530.028 306.182 li
530.106 306.018 530.141 305.862 530.235 305.682 cv
530.496 305.299 530.674 304.928 530.985 304.524 cv
531.923 303.313 li
533 301.981 li
534.432 300.164 535.84 298.184 536.805 295.814 cv
537.804 293.481 538.153 290.667 537.605 288.067 cv
537.369 287.107 li
537.339 286.988 li
537.279 286.796 li
537.211 286.597 li
537.074 286.199 li
536.874 285.654 536.746 285.168 536.487 284.575 cv
535.991 283.372 535.424 282.249 534.825 281.249 cv
534.211 280.213 533.649 279.338 533.568 278.825 cv
533.497 278.692 533.536 278.551 533.529 278.415 cv
533.523 278.313 li
533.519 278.261 li
533.514 278.282 533.514 278.275 533.516 278.261 cv
533.569 278.021 li
533.587 277.92 533.599 277.963 533.606 277.961 cv
533.613 277.965 533.616 277.969 533.618 277.972 cv
533.617 277.97 533.616 277.971 533.621 277.961 cv
533.695 277.846 li
533.774 277.701 533.906 277.516 534.049 277.326 cv
534.622 276.56 535.429 275.656 536.143 274.668 cv
536.868 273.676 537.529 272.57 538.042 271.39 cv
539.097 269.016 539.438 266.406 539.252 263.916 cv
539.255 263.43 539.074 262.616 538.938 261.94 cv
538.769 261.253 538.527 260.638 538.267 260.007 cv
537.942 259.409 537.662 258.779 537.232 258.253 cv
537.028 257.984 536.839 257.699 536.617 257.449 cv
535.923 256.73 li
534.016 254.846 531.682 253.826 529.438 253.076 cv
527.169 252.349 524.894 251.953 522.65 251.701 cv
518.157 251.209 513.772 251.293 509.502 251.537 cv
506.716 251.7 503.983 251.957 501.295 252.25 cv
501.367 252.142 501.438 252.037 501.516 251.919 cv
502.012 251.254 502.539 250.176 503.191 249.018 cv
503.891 247.842 504.422 246.473 505.128 244.945 cv
506.375 241.85 507.732 238.021 508.662 233.494 cv
509.607 228.977 510.278 223.797 510.295 218.1 cv
510.305 212.417 509.702 206.16 507.275 199.778 cv
506.928 198.992 506.538 198.208 506.162 197.417 cv
506.02 197.121 li
505.947 196.973 li
505.912 196.899 li
505.911 196.89 505.796 196.698 505.826 196.75 cv
505.511 196.234 li
505.193 195.719 li
504.762 195.118 li
503.602 193.536 502.292 192.242 500.682 191.124 cv
499.087 190.029 497.229 189.182 495.18 188.822 cv
493.142 188.454 490.909 188.634 488.91 189.427 cv
488.423 189.64 487.943 189.876 487.463 190.109 cv
486.132 190.963 li
486.219 190.89 485.923 191.124 485.928 191.119 cv
485.866 191.172 li
485.741 191.277 li
485.493 191.489 li
484.995 191.913 li
484.822 192.069 484.676 192.161 484.482 192.372 cv
483.916 192.986 li
483.104 193.816 482.587 194.665 482.01 195.519 cv
481.538 196.408 481.031 197.301 480.699 198.23 cv
479.943 200.075 479.48 201.965 479.148 203.828 cv
478.797 205.697 478.593 207.548 478.406 209.372 cv
478.219 211.2 478.068 212.995 477.848 214.74 cv
477.623 216.5 477.379 218.153 476.85 219.73 cv
476.453 221.046 li
476.255 221.705 li
476.021 222.291 li
475.088 224.638 li
473.951 227.008 li
473.59 227.806 473.105 228.549 472.69 229.324 cv
470.924 232.359 468.918 235.297 466.582 237.868 cv
465.407 239.133 464.222 240.333 462.85 241.604 cv
461.523 242.848 460.201 244.112 458.886 245.386 cv
456.249 247.915 453.704 250.521 451.236 253.157 cv
448.818 255.847 446.471 258.56 444.368 261.413 cv
443.845 262.126 443.322 262.837 442.803 263.545 cv
442.277 264.249 441.83 265.006 441.344 265.729 cv
440.867 266.46 440.394 267.188 439.922 267.911 cv
439.493 268.657 439.066 269.398 438.642 270.136 cv
436.957 273.219 435.614 276.349 434.583 279.484 cv
433.536 282.621 432.848 285.783 432.456 288.876 cv
432.149 291.338 432.001 293.757 432.052 296.104 cv
424.577 301.258 419.913 310.038 419.196 320.451 cv
cp
f
147.734 392.618 mo
147.196 392.687 li
148.393 391.861 149.607 390.919 150.806 389.812 cv
161.087 380.312 160.126 365.233 154.852 351.146 cv
144.337 323.062 142.748 298.018 142.591 289.636 cv
142.227 270.243 146.541 254.866 136.843 249.5 cv
128.159 244.696 118.919 255.803 117.305 270.776 cv
116.1 281.944 116.038 297.77 120.087 308.769 cv
112.489 294.147 106.036 275.625 102.455 259.549 cv
101.028 253.147 99.415 245.096 91.6709 243.843 cv
84.2793 242.649 78.834 249.032 78.2119 258.943 cv
76.9307 279.386 89.3691 302.327 95.4141 312.124 cv
95.4141 312.124 81.7539 292.478 69.7539 300.478 cv
61.354 306.078 59.0518 311.432 62.3906 320.144 cv
62.3662 320.148 62.3423 320.154 62.3179 320.158 cv
62.2764 319.854 li
62.2764 319.854 57.3369 315.478 50.7539 320.485 cv
43.3232 326.136 42.6592 333.478 49.04 346.478 cv
53.5186 355.602 58.9922 361.477 64.4824 361.839 cv
64.8096 362.985 65.1533 364.133 65.522 365.277 cv
63.6045 362.647 li
63.6045 371.978 66.8857 385.784 77.793 395.571 cv
79.9346 397.493 82.0771 399.242 84.7578 400.635 cv
83.8721 400.747 li
82.9961 403.341 82.8896 404.835 83.3877 406.716 cv
86.1836 417.284 104.432 418.071 117.728 416.868 cv
132.168 415.562 150.212 412.312 152.212 401.437 cv
152.925 397.558 150.946 394.187 147.734 392.618 cv
cp
1 1 1 rgb
f
47.0024 329.729 mo
47.3589 327.487 48.4341 325.618 49.8398 324.104 cv
50.5635 323.333 51.27 322.713 52.0903 322.084 cv
52.834 321.518 53.5762 321.079 54.2886 320.766 cv
55.7163 320.128 57.0112 320.035 58.0425 320.18 cv
59.0791 320.321 59.8569 320.685 60.3413 320.955 cv
60.4624 321.024 60.563 321.086 60.6475 321.14 cv
61.0098 322.074 61.4058 322.984 61.8389 323.864 cv
62.6875 325.678 63.6553 327.392 64.6431 329.084 cv
66.1621 331.591 li
67.7393 334.043 li
68.8628 335.718 69.8486 337.223 71.0732 338.848 cv
71.6538 339.653 72.2529 340.441 72.8799 341.204 cv
73.4834 341.983 74.1274 342.74 74.7939 343.484 cv
76.1147 344.979 77.5259 346.427 79.1865 347.724 cv
80.0078 348.376 80.9116 348.981 81.9336 349.507 cv
82.7388 349.873 li
83.0381 349.977 83.3276 350.082 83.6392 350.172 cv
83.8394 350.215 84.0317 350.259 84.2329 350.297 cv
84.3198 350.625 84.4189 350.949 84.5459 351.265 cv
84.9331 352.239 85.4995 353.106 86.1226 353.829 cv
87.3848 355.271 88.8008 356.251 90.168 357.078 cv
92.9229 358.71 95.6084 359.83 98.1431 360.894 cv
99.4102 361.404 100.643 361.901 101.835 362.382 cv
102.895 362.834 104.18 363.333 105.098 363.811 cv
106.152 364.313 107.151 364.848 108.077 365.396 cv
107.936 366.074 107.785 366.938 107.649 367.961 cv
107.471 369.2 107.409 370.665 107.422 372.245 cv
107.44 373.824 107.588 375.533 107.962 377.227 cv
108.313 378.922 108.907 380.604 109.696 382.09 cv
109.888 382.464 110.09 382.825 110.314 383.167 cv
110.523 383.517 110.746 383.849 110.988 384.156 cv
111.455 384.778 111.951 385.336 112.467 385.782 cv
112.957 386.258 113.488 386.599 113.937 386.912 cv
114.412 387.19 114.834 387.413 115.189 387.575 cv
115.917 387.867 116.343 387.982 116.343 387.982 cv
116.757 388.092 117.223 388.009 117.578 387.716 cv
118.164 387.232 118.247 386.366 117.764 385.78 cv
117.649 385.641 li
117.649 385.641 117.405 385.346 116.963 384.919 cv
116.55 384.45 115.949 383.844 115.346 383.044 cv
115.181 382.857 115.043 382.635 114.883 382.42 cv
114.719 382.208 114.56 381.982 114.416 381.734 cv
114.097 381.264 113.795 380.737 113.53 380.163 cv
112.992 379.021 112.566 377.703 112.294 376.32 cv
112.151 375.631 112.063 374.924 111.975 374.225 cv
111.893 373.523 111.845 372.824 111.823 372.143 cv
111.774 370.779 111.854 369.494 111.917 368.39 cv
111.924 368.3 111.932 368.219 111.938 368.131 cv
112.644 368.729 113.256 369.31 113.751 369.842 cv
115.431 371.629 116.353 372.657 116.303 372.514 cv
116.586 373.298 117.452 373.704 118.237 373.421 cv
119.021 373.138 119.428 372.271 119.145 371.486 cv
119.114 371.414 119.069 370.89 118.745 370.083 cv
118.426 369.278 117.826 368.183 116.802 367.053 cv
115.781 365.924 114.435 364.692 112.78 363.475 cv
111.119 362.242 109.182 361.079 106.908 359.967 cv
105.724 359.358 104.709 358.964 103.431 358.405 cv
102.264 357.921 101.058 357.42 99.8174 356.905 cv
97.3696 355.854 94.7817 354.721 92.4634 353.309 cv
91.312 352.605 90.2563 351.806 89.5229 350.942 cv
88.791 350.068 88.46 349.211 88.4365 348.118 cv
88.4253 347.572 88.4961 346.973 88.6431 346.344 cv
88.7612 345.818 89.02 344.944 89.2095 344.541 cv
89.6563 343.553 90.4375 342.693 91.4683 341.994 cv
93.5449 340.586 96.4053 339.924 99.2178 339.78 cv
102.053 339.628 104.917 339.961 107.61 340.587 cv
110.294 341.222 112.874 342.146 115.112 343.252 cv
115.632 343.486 116.307 343.872 116.813 344.131 cv
117.429 344.451 118.036 344.766 118.632 345.075 cv
119.847 345.652 121.029 346.194 122.2 346.625 cv
124.529 347.517 126.739 348.13 128.723 348.545 cv
130.709 348.947 132.471 349.18 133.937 349.183 cv
135.401 349.198 136.555 349.043 137.341 348.864 cv
138.115 348.695 138.589 348.515 138.562 348.521 cv
139.322 348.443 139.875 347.765 139.797 347.005 cv
139.719 346.244 139.04 345.691 138.28 345.77 cv
138.253 345.776 137.942 345.682 137.24 345.559 cv
136.55 345.43 135.532 345.265 134.247 345.068 cv
132.963 344.857 131.394 344.682 129.619 344.299 cv
127.847 343.908 125.874 343.337 123.796 342.516 cv
122.751 342.12 121.698 341.621 120.616 341.095 cv
120.085 340.812 119.544 340.523 118.996 340.23 cv
118.335 339.88 117.856 339.591 117.149 339.25 cv
114.542 337.936 111.723 336.875 108.658 336.14 cv
105.601 335.426 102.339 335.031 98.9722 335.203 cv
98.5977 335.225 98.2197 335.255 97.8408 335.29 cv
97.8032 334.874 97.7036 334.408 97.5625 333.894 cv
97.4277 333.372 97.2988 332.76 97.0649 332.169 cv
96.8359 331.57 96.6128 330.895 96.3008 330.251 cv
95.9951 329.598 95.6782 328.899 95.2988 328.229 cv
94.9404 327.538 94.5332 326.85 94.1045 326.171 cv
93.6919 325.476 93.2412 324.799 92.7715 324.137 cv
91.8584 322.793 90.8652 321.522 89.9063 320.358 cv
89.4072 319.794 88.9248 319.249 88.4673 318.731 cv
87.9844 318.236 87.5435 317.758 87.1104 317.338 cv
85.4014 315.649 84.0718 314.68 84.0723 314.68 cv
83.6953 314.405 83.1768 314.36 82.7466 314.607 cv
82.1636 314.942 81.9624 315.687 82.2979 316.271 cv
82.3008 316.275 li
82.3013 316.275 83.0811 317.633 84.3525 319.592 cv
84.9883 320.56 85.7295 321.689 86.5239 322.899 cv
86.9189 323.5 87.3452 324.11 87.7446 324.746 cv
88.1558 325.374 88.5918 326.003 88.9834 326.65 cv
89.3857 327.294 89.79 327.933 90.165 328.568 cv
90.5615 329.197 90.8989 329.834 91.2417 330.438 cv
91.6035 331.04 91.8813 331.636 92.1665 332.194 cv
92.4795 332.749 92.6792 333.28 92.9028 333.769 cv
93.1494 334.256 93.2861 334.692 93.4341 335.085 cv
93.5073 335.281 93.5757 335.465 93.6392 335.635 cv
93.6831 335.777 93.7051 335.9 93.7329 336.02 cv
92.0747 336.479 90.4351 337.164 88.8774 338.195 cv
87.3003 339.259 85.8696 340.804 85.0415 342.699 cv
84.6113 343.739 84.4502 344.382 84.2153 345.377 cv
84.1641 345.61 84.1362 345.859 84.0967 346.101 cv
83.709 345.922 li
83.0278 345.569 82.3247 345.112 81.6479 344.57 cv
80.2822 343.508 78.9961 342.204 77.7832 340.826 cv
77.1704 340.143 76.5713 339.44 76.001 338.702 cv
75.4092 337.983 74.8491 337.246 74.3091 336.496 cv
73.2192 335.063 72.0967 333.36 71.0859 331.852 cv
69.5513 329.467 li
68.0898 327.055 li
67.1465 325.438 66.2271 323.808 65.4517 322.146 cv
64.6353 320.494 63.999 318.807 63.4976 317.124 cv
63.3687 316.703 63.3154 316.284 63.2178 315.865 cv
63.1304 315.445 63.0229 315.024 63.0171 314.615 cv
62.915 313.379 li
62.9951 312.182 li
63.1895 310.61 63.7368 309.131 64.6582 307.77 cv
64.896 307.434 65.1787 307.116 65.4336 306.785 cv
65.5669 306.623 65.6875 306.454 65.8296 306.295 cv
66.2925 305.838 li
67.2173 304.924 li
68.2192 304.097 li
68.8296 303.542 69.7017 302.986 70.459 302.431 cv
71.1538 301.931 71.8311 301.554 72.561 301.24 cv
74.0044 300.605 75.5815 300.467 77.1738 300.656 cv
78.7715 300.841 80.3784 301.466 81.917 302.264 cv
83.4604 303.069 84.9277 304.116 86.3242 305.266 cv
87.7231 306.416 89.042 307.696 90.2939 309.045 cv
91.3247 310.161 92.3389 311.363 93.2402 312.555 cv
92.9321 312.747 92.647 312.935 92.4028 313.104 cv
91.9697 313.415 91.6626 313.657 91.415 313.866 cv
91.1724 314.073 91.0854 314.167 91.0854 314.167 cv
91.0059 314.252 li
90.6025 314.688 90.4624 315.333 90.7002 315.919 cv
91.0283 316.727 91.9487 317.116 92.7563 316.788 cv
92.7563 316.788 92.9019 316.729 93.1099 316.675 cv
93.3379 316.599 93.6724 316.487 94.0977 316.346 cv
94.9663 316.046 96.2236 315.628 97.7192 315.098 cv
98.4805 314.857 99.2827 314.547 100.166 314.294 cv
101.035 314.009 101.974 313.768 102.942 313.513 cv
103.911 313.26 104.932 313.057 105.955 312.809 cv
106.996 312.621 108.043 312.393 109.106 312.231 cv
110.173 312.091 111.225 311.866 112.281 311.756 cv
113.336 311.64 114.37 311.493 115.378 311.407 cv
116.388 311.319 117.363 311.234 118.289 311.153 cv
119.218 311.11 120.097 311.07 120.908 311.033 cv
122.531 310.936 123.891 310.875 124.847 310.701 cv
125.804 310.553 126.359 310.374 126.359 310.374 cv
126.442 310.348 li
126.907 310.195 127.299 309.837 127.476 309.341 cv
127.779 308.489 127.335 307.553 126.483 307.249 cv
126.483 307.249 125.927 307.051 124.938 306.866 cv
124.079 306.712 122.88 306.53 121.46 306.515 cv
120.256 302.549 119.565 298.371 119.123 294.162 cv
118.687 289.377 118.639 284.535 118.796 279.708 cv
118.93 277.317 119.048 274.933 119.316 272.463 cv
119.512 270.063 119.872 267.802 120.464 265.541 cv
121.627 261.077 123.639 256.723 126.656 253.617 cv
128.155 252.098 129.935 250.952 131.72 250.695 cv
132.61 250.559 133.495 250.621 134.365 250.883 cv
134.596 250.936 134.74 251.025 134.936 251.082 cv
135.122 251.143 135.462 251.334 135.717 251.454 cv
135.769 251.479 li
135.771 251.481 135.769 251.48 135.773 251.482 cv
135.813 251.507 li
135.97 251.604 li
136.285 251.797 li
136.505 251.915 136.678 252.083 136.878 252.22 cv
138.408 253.392 139.42 255.11 140.025 257.172 cv
140.637 259.228 140.853 261.547 140.938 263.896 cv
141.079 268.619 140.715 273.526 140.513 278.461 cv
140.297 283.42 140.175 288.373 140.443 293.417 cv
140.743 298.399 141.152 303.365 141.871 308.287 cv
142.506 313.222 143.441 318.108 144.414 322.982 cv
146.093 330.248 li
146.657 332.669 147.424 335.066 148.082 337.475 cv
149.108 341.084 li
149.469 342.273 149.897 343.416 150.289 344.585 cv
152.689 351.56 li
153.31 353.314 li
153.506 353.878 153.723 354.436 153.89 355.007 cv
154.247 356.143 154.61 357.276 154.895 358.428 cv
155.521 360.719 155.967 363.043 156.261 365.369 cv
156.581 367.699 156.613 370.03 156.511 372.334 cv
156.368 374.637 155.934 376.884 155.27 379.042 cv
154.578 381.188 153.514 383.198 152.26 385.014 cv
151.281 386.276 li
150.968 386.7 150.457 387.154 150.055 387.591 cv
149.413 388.253 li
149.369 388.299 li
149.33 388.331 li
149.163 388.469 li
148.831 388.743 li
147.503 389.846 li
143.894 392.756 139.626 394.537 135.376 396.599 cv
135.292 396.639 li
134.929 396.816 134.673 397.183 134.657 397.614 cv
134.633 398.238 135.12 398.764 135.745 398.786 cv
138.441 398.888 140.991 398.199 143.403 397.198 cv
144.866 396.534 146.27 395.741 147.617 394.862 cv
149.679 396.23 150.704 398.578 150.245 401.075 cv
148.899 408.392 137.898 413.035 117.547 414.876 cv
110.689 415.499 88.0996 416.705 85.3213 406.204 cv
85.0728 405.267 84.9956 404.454 85.2559 403.209 cv
86.1211 403.584 86.9585 403.864 87.7075 404.149 cv
88.7798 404.449 89.7222 404.724 90.5112 404.813 cv
92.0918 404.992 93.0039 404.923 93.0039 404.923 cv
93.5571 404.879 94.0796 404.561 94.3564 404.033 cv
94.7852 403.216 94.4697 402.206 93.6528 401.777 cv
93.5059 401.7 li
93.5059 401.7 92.748 401.303 91.4053 400.908 cv
90.7334 400.708 89.958 400.396 89.0298 400.152 cv
88.1479 399.8 87.1167 399.48 86.0962 398.918 cv
85.8354 398.789 85.5698 398.656 85.2988 398.521 cv
85.0337 398.374 84.7744 398.202 84.5044 398.04 cv
84.2354 397.876 83.9614 397.709 83.6836 397.539 cv
83.4155 397.348 83.1436 397.153 82.8672 396.956 cv
81.7461 396.176 80.6968 395.264 79.4658 394.18 cv
78.3818 393.167 77.2373 392.078 76.207 390.879 cv
75.1558 389.694 74.1743 388.413 73.2622 387.084 cv
72.3408 385.762 71.5122 384.371 70.7734 382.961 cv
70.0283 381.554 69.3857 380.118 68.8286 378.703 cv
67.7227 375.867 66.9722 373.108 66.4878 370.716 cv
66.353 370.119 66.2627 369.541 66.1753 368.991 cv
66.084 368.442 65.9976 367.921 65.9482 367.428 cv
65.8164 366.436 65.748 365.594 65.7017 364.905 cv
65.6675 364.564 65.6538 364.232 65.6455 363.938 cv
67.3354 363.825 68.9551 363.298 70.313 362.526 cv
71.0688 362.074 71.79 361.588 72.4155 361.042 cv
72.5908 360.89 72.7002 360.814 72.9277 360.599 cv
73.1255 360.409 li
73.415 360.101 li
73.7627 359.705 74.0469 359.321 74.2964 358.891 cv
75.2993 357.172 75.501 355.322 75.4434 353.738 cv
75.271 350.535 74.2666 347.952 73.2915 345.66 cv
72.2847 343.377 71.1831 341.417 70.1558 339.72 cv
69.1133 338.032 68.1084 336.632 67.208 335.536 cv
65.4233 333.33 64.1519 332.283 64.1519 332.283 cv
64.1211 332.258 li
63.6934 331.907 63.0791 331.833 62.5659 332.117 cv
61.8936 332.488 61.6499 333.335 62.022 334.008 cv
62.022 334.008 62.7798 335.378 64.1914 337.671 cv
64.8862 338.817 65.7295 340.209 66.6968 341.806 cv
67.6465 343.401 68.6563 345.238 69.5415 347.291 cv
70.4087 349.326 71.2129 351.65 71.2979 353.886 cv
71.3325 354.99 71.1519 356.019 70.6948 356.768 cv
70.5889 356.954 70.438 357.143 70.3125 357.286 cv
70.2354 357.374 li
70.041 357.557 li
70.0083 357.592 69.8271 357.734 69.7271 357.818 cv
69.2578 358.227 68.75 358.55 68.2402 358.856 cv
66.1758 360.035 63.8618 360.037 61.5732 358.779 cv
59.2886 357.551 57.2397 355.39 55.4766 353.027 cv
53.6978 350.636 52.2075 348.02 50.877 345.305 cv
49.5518 342.594 48.415 339.868 47.666 337.21 cv
46.9263 334.559 46.6113 331.964 47.0024 329.729 cv
cp
83.3428 281.348 mo
82.9404 279.849 82.4463 278.368 82.1167 276.854 cv
81.7598 275.347 81.3882 273.841 81.1475 272.316 cv
81.0176 271.556 80.8564 270.798 80.751 270.035 cv
80.4761 267.745 li
80.3369 266.599 li
80.2729 265.475 li
80.1489 263.23 li
80.1045 262.483 80.1665 261.655 80.1704 260.872 cv
80.1963 259.681 li
80.2095 259.085 li
80.21 259.047 li
80.2129 259.02 li
80.2261 258.882 li
80.2524 258.607 li
80.3501 257.128 80.6333 255.691 80.9834 254.287 cv
81.3872 252.905 81.9141 251.578 82.603 250.377 cv
83.9888 247.982 86.1235 246.23 88.6064 245.83 cv
88.917 245.78 89.2344 245.715 89.5044 245.729 cv
89.9263 245.71 li
90.001 245.708 90.0566 245.695 90.1479 245.701 cv
90.4443 245.73 li
91.0371 245.79 li
91.3335 245.819 li
91.3794 245.824 li
91.4766 245.848 li
92.4307 246.062 li
93.6631 246.429 94.751 247.055 95.6665 247.95 cv
97.5151 249.742 98.6177 252.524 99.417 255.431 cv
99.8213 256.896 100.153 258.409 100.5 259.972 cv
101.625 264.653 li
101.979 266.22 102.432 267.758 102.85 269.306 cv
103.282 270.85 103.673 272.407 104.164 273.933 cv
105.573 278.53 li
106.063 280.056 106.596 281.567 107.105 283.087 cv
107.877 285.364 li
108.716 287.617 li
109.281 289.117 109.823 290.625 110.407 292.119 cv
111.627 295.086 112.793 298.074 114.15 300.988 cv
114.964 302.888 115.87 304.749 116.788 306.605 cv
116.196 306.636 115.594 306.667 114.976 306.699 cv
113.906 306.764 112.805 306.919 111.684 307.029 cv
110.563 307.146 109.43 307.345 108.297 307.523 cv
107.166 307.719 106.044 307.984 104.936 308.209 cv
103.836 308.489 102.75 308.742 101.716 309.064 cv
99.9653 309.585 98.3413 310.148 96.9092 310.725 cv
93.7207 305.49 90.8115 300.065 88.3193 294.473 cv
87.019 291.625 85.8804 288.713 84.8135 285.783 cv
84.2905 284.314 83.8198 282.83 83.3428 281.348 cv
cp
51.9937 355.621 mo
53.9912 358.282 56.3633 360.843 59.5737 362.57 cv
60.2134 362.906 60.9033 363.183 61.6133 363.413 cv
61.6216 363.813 61.6045 364.319 61.6563 365.067 cv
61.6909 365.867 61.751 366.828 61.8701 367.896 cv
61.9136 368.437 61.9946 369.007 62.0815 369.607 cv
62.1641 370.209 62.251 370.842 62.3828 371.494 cv
62.8442 374.116 63.6143 377.144 64.8257 380.258 cv
65.4277 381.815 66.126 383.398 66.939 384.958 cv
67.7456 386.52 68.6548 388.065 69.6689 389.541 cv
70.1826 390.275 70.6738 391.025 71.2529 391.708 cv
71.8188 392.399 72.3477 393.116 72.9629 393.752 cv
74.1309 395.087 75.3828 396.269 76.6431 397.421 cv
77.812 398.437 79.103 399.547 80.3911 400.429 cv
80.7119 400.653 81.0288 400.875 81.3403 401.094 cv
81.4346 401.15 81.5249 401.205 81.6182 401.262 cv
80.9604 403.575 80.9277 405.238 81.4541 407.228 cv
84.0542 417.056 97.1938 419.299 108.643 419.298 cv
111.975 419.298 115.164 419.108 117.908 418.86 cv
132.372 417.551 151.869 414.358 154.179 401.798 cv
154.85 398.148 153.609 394.688 150.963 392.381 cv
151.584 391.869 li
151.962 391.557 li
152.151 391.4 li
152.198 391.361 li
152.321 391.244 li
152.401 391.162 li
153.046 390.503 li
153.478 390.039 153.902 389.68 154.34 389.129 cv
155.64 387.492 li
157.196 385.28 158.447 382.901 159.283 380.364 cv
160.083 377.83 160.587 375.223 160.761 372.614 cv
160.895 370.012 160.858 367.406 160.523 364.857 cv
160.213 362.307 159.739 359.787 159.081 357.331 cv
158.779 356.094 158.399 354.884 158.023 353.673 cv
157.847 353.063 157.622 352.472 157.417 351.873 cv
156.815 350.149 li
154.447 343.163 li
154.063 341.999 153.633 340.835 153.288 339.671 cv
152.316 336.179 li
151.693 333.842 150.965 331.547 150.424 329.177 cv
148.815 322.062 li
147.886 317.29 146.993 312.506 146.395 307.682 cv
145.727 302.867 145.292 298.025 145.003 293.192 cv
144.871 289.592 li
144.85 288.352 144.843 287.143 144.852 285.951 cv
144.871 283.529 144.951 281.099 145.054 278.656 cv
145.244 273.768 145.615 268.85 145.46 263.737 cv
145.357 261.183 145.142 258.557 144.354 255.888 cv
143.957 254.56 143.406 253.222 142.623 251.97 cv
141.845 250.718 140.821 249.571 139.639 248.66 cv
139.337 248.444 139.05 248.197 138.73 248.016 cv
138.259 247.728 li
138.023 247.584 li
137.964 247.548 li
138.025 247.579 137.813 247.468 137.816 247.47 cv
137.713 247.418 li
137.413 247.277 137.219 247.157 136.83 246.999 cv
136.447 246.853 136.035 246.667 135.667 246.576 cv
134.185 246.125 132.559 246.009 131.02 246.255 cv
127.896 246.749 125.391 248.524 123.46 250.471 cv
121.522 252.459 120.075 254.74 118.898 257.1 cv
117.737 259.469 116.864 261.94 116.232 264.458 cv
115.594 266.958 115.208 269.577 115.026 272.078 cv
114.784 274.5 114.672 277.029 114.554 279.549 cv
114.449 283.835 114.518 288.125 114.848 292.416 cv
114.61 291.83 114.372 291.243 114.13 290.658 cv
113.558 289.192 113.025 287.71 112.47 286.237 cv
111.646 284.024 li
110.888 281.787 li
110.387 280.293 109.864 278.808 109.382 277.309 cv
107.998 272.792 li
107.515 271.293 107.132 269.766 106.708 268.25 cv
106.298 266.731 105.852 265.22 105.507 263.687 cv
104.404 259.1 li
104.062 257.561 103.714 255.968 103.274 254.371 cv
102.832 252.772 102.301 251.153 101.552 249.563 cv
100.804 247.98 99.8179 246.407 98.4536 245.081 cv
97.1021 243.749 95.3594 242.746 93.541 242.219 cv
92.1709 241.908 li
91.999 241.871 li
91.7271 241.839 li
91.4307 241.809 li
90.8379 241.75 li
90.4985 241.691 89.8828 241.726 89.3989 241.731 cv
88.8711 241.725 88.4063 241.81 87.9326 241.887 cv
86.0376 242.203 84.2236 243.033 82.7393 244.195 cv
81.251 245.356 80.0498 246.8 79.1528 248.353 cv
78.2568 249.908 77.6113 251.553 77.1279 253.221 cv
76.7026 254.897 76.3804 256.59 76.2656 258.285 cv
76.2358 258.603 li
76.2212 258.762 li
76.2119 258.919 li
76.2104 258.994 li
76.1973 259.59 li
76.1714 260.781 li
76.1675 261.585 76.1064 262.347 76.1494 263.186 cv
76.2793 265.701 li
76.353 266.956 li
76.499 268.176 li
76.7935 270.617 li
76.9058 271.428 77.0737 272.226 77.2119 273.031 cv
77.4692 274.647 77.8569 276.228 78.2329 277.812 cv
78.582 279.404 79.0928 280.944 79.5161 282.512 cv
80.0112 284.055 80.5024 285.601 81.0449 287.124 cv
82.1509 290.164 83.3301 293.175 84.6689 296.108 cv
85.3384 297.609 86.0366 299.096 86.7588 300.57 cv
85.8164 299.902 84.834 299.276 83.7856 298.728 cv
81.9326 297.767 79.9082 296.959 77.6875 296.689 cv
75.4888 296.411 73.1099 296.635 71.0288 297.545 cv
69.9941 297.98 68.9951 298.555 68.1348 299.175 cv
67.3472 299.754 66.5908 300.222 65.7627 300.94 cv
64.5479 301.945 li
63.4253 303.049 li
62.8687 303.605 li
62.6909 303.804 62.5273 304.021 62.3564 304.229 cv
62.0229 304.655 61.6729 305.062 61.3594 305.508 cv
60.1157 307.32 59.2749 309.513 59.019 311.745 cv
58.915 313.418 li
59.0405 315.048 li
59.0576 315.48 59.1387 315.888 59.2236 316.293 cv
59.0254 316.25 58.8418 316.199 58.6289 316.167 cv
56.9448 315.895 54.7642 316.066 52.6631 316.981 cv
51.6113 317.428 50.5791 318.03 49.5981 318.757 cv
48.6982 319.424 47.6772 320.282 46.7773 321.23 cv
45.8599 322.196 44.9902 323.336 44.2764 324.647 cv
43.5684 325.959 43.0391 327.449 42.7676 329 cv
42.2246 332.128 42.6792 335.341 43.5117 338.365 cv
44.3628 341.401 45.5942 344.334 46.9858 347.198 cv
48.3799 350.055 50.0098 352.949 51.9937 355.621 cv
cp
0 0 0 rgb
f
150.021 474.038 mo
142.491 473.529 140.97 467.061 134.662 464.646 cv
124.423 460.728 121.693 465.847 115.354 462.605 cv
110.577 460.162 106.164 456.291 98.0498 459.074 cv
92.1875 461.086 90.0625 465.258 87.3911 466.188 cv
84.4038 467.229 80.9063 465.847 74.9336 468.918 cv
66.3354 473.339 62.2432 493.628 62.2432 493.628 cv
62.2432 493.628 51.1226 497.177 48.791 505.467 cv
47.5513 509.875 46.6665 518.625 52.1226 527.856 cv
58.2285 538.188 63.9282 542.546 70.666 539.775 cv
70.6162 539.502 li
73.7993 543.282 80.4033 545.672 80.4033 545.672 cv
80.4033 545.672 87.3652 561.259 114.469 560.501 cv
144.292 559.667 151.25 542.992 151.25 542.992 cv
151.25 542.992 147.021 542.501 149.798 542.468 cv
157.417 542.375 161.006 534.627 162.106 532.221 cv
164.894 526.119 165.882 518.497 165.929 513.114 cv
166.065 497.319 162.697 474.896 150.021 474.038 cv
cp
1 1 1 rgb
f
163.771 515.348 mo
163.665 517.077 163.51 518.77 163.261 520.402 cv
162.783 523.666 162.022 526.736 161.057 529.36 cv
160.015 532.164 158.77 534.518 157.293 536.348 cv
155.826 538.188 154.124 539.418 152.448 539.969 cv
152.016 540.143 151.646 540.203 151.291 540.282 cv
151.023 540.349 li
150.644 540.378 li
150.392 540.396 150.145 540.416 149.901 540.435 cv
149.416 540.486 148.771 540.326 148.23 540.075 cv
147.108 539.569 146.361 538.738 145.953 538.051 cv
145.559 537.371 145.431 536.674 145.408 536.428 cv
145.407 536.425 145.407 536.415 145.406 536.411 cv
145.611 535.314 li
145.967 532.855 146.253 530.224 146.387 527.866 cv
146.587 525.453 146.648 523.084 146.731 520.791 cv
146.832 518.498 146.774 516.278 146.802 514.175 cv
146.803 512.071 146.689 510.076 146.645 508.237 cv
146.605 506.4 146.403 504.702 146.299 503.205 cv
146.228 502.456 146.162 501.756 146.1 501.107 cv
146.003 500.455 145.896 499.858 145.798 499.32 cv
145.428 497.163 145.14 495.951 145.14 495.951 cv
144.927 495.055 144.099 494.409 143.146 494.459 cv
142.074 494.514 141.25 495.429 141.305 496.502 cv
141.314 496.686 li
141.314 496.686 141.376 497.867 141.617 499.899 cv
141.672 500.408 141.734 500.971 141.822 501.58 cv
141.866 502.203 141.914 502.877 141.964 503.598 cv
142.048 505.042 142.264 506.651 142.302 508.442 cv
142.35 510.23 142.468 512.163 142.473 514.216 cv
142.451 516.27 142.516 518.438 142.423 520.676 cv
142.349 522.915 142.296 525.233 142.108 527.568 cv
141.974 529.965 141.742 532.149 141.427 534.479 cv
141.1 536.262 li
141.018 536.707 li
140.999 536.809 li
140.944 536.986 li
140.723 537.719 li
140.375 538.667 139.917 539.554 139.346 540.35 cv
138.214 541.954 136.57 543.13 134.793 543.893 cv
133.925 544.268 132.92 544.559 132.095 544.705 cv
131.879 544.752 131.571 544.785 131.316 544.825 cv
131.116 544.854 li
131.176 544.846 131.031 544.859 130.999 544.861 cv
130.646 544.889 li
130.177 544.941 129.718 544.938 129.265 544.941 cv
127.452 544.945 125.819 544.537 124.528 543.898 cv
123.224 543.263 122.317 542.328 121.691 541.361 cv
121.07 540.382 120.769 539.348 120.549 538.488 cv
120.465 538.084 120.427 537.731 120.369 537.417 cv
120.412 537.193 120.457 536.975 120.492 536.736 cv
120.808 534.601 li
121.166 531.795 121.362 529.041 121.464 526.322 cv
121.585 523.605 121.598 520.945 121.585 518.375 cv
121.551 513.234 121.35 508.462 121.153 504.383 cv
120.954 500.304 120.792 496.919 120.472 494.572 cv
120.184 492.222 119.869 490.9 119.87 490.9 cv
119.867 490.888 li
119.718 490.266 119.214 489.76 118.543 489.64 cv
117.641 489.478 116.777 490.079 116.616 490.982 cv
116.616 490.982 116.554 491.326 116.486 491.974 cv
116.411 492.623 116.334 493.568 116.302 494.765 cv
116.197 497.16 116.415 500.548 116.604 504.598 cv
116.787 508.647 116.971 513.364 116.989 518.397 cv
116.994 520.912 116.974 523.51 116.849 526.128 cv
116.751 528.746 116.528 531.406 116.221 533.985 cv
115.961 535.876 li
115.88 536.503 115.716 537.195 115.598 537.85 cv
115.405 538.844 li
115.362 539.003 115.281 539.388 115.202 539.629 cv
115.053 540.187 114.847 540.691 114.635 541.188 cv
113.745 543.137 112.213 544.479 110.266 545.28 cv
109.294 545.663 108.204 545.932 107.226 546.084 cv
106.723 546.176 106.044 546.211 105.472 546.276 cv
104.766 546.294 li
104.509 546.3 104.253 546.315 104.006 546.29 cv
102.004 546.227 100.209 545.728 98.8301 544.852 cv
97.4346 544.001 96.4155 542.845 95.7275 541.645 cv
95.0444 540.438 94.6353 539.24 94.3809 538.22 cv
94.1519 537.217 94.0156 536.475 93.9624 535.782 cv
93.9551 535.71 93.9492 535.655 93.9424 535.591 cv
93.9854 535.354 li
93.9888 535.354 94.0244 535.03 94.0107 535.128 cv
94.0156 535.046 li
94.0244 534.881 li
94.0723 534.003 94.1196 533.136 94.166 532.279 cv
94.1685 530.494 94.1709 528.756 94.1733 527.065 cv
94.1416 525.434 94.1104 523.848 94.0806 522.312 cv
93.9419 516.175 93.7485 510.842 93.5933 506.448 cv
93.4116 502.057 93.3374 498.606 93.1694 496.262 cv
92.9839 493.924 92.624 492.699 92.624 492.699 cv
92.6113 492.654 li
92.4375 492.069 91.96 491.594 91.3223 491.453 cv
90.3872 491.246 89.4619 491.837 89.2549 492.771 cv
89.2549 492.771 88.9717 494.055 88.96 496.419 cv
88.9731 498.775 89.1592 502.22 89.3062 506.604 cv
89.4604 510.988 89.6533 516.313 89.791 522.405 cv
89.8208 523.927 89.8511 525.496 89.8828 527.113 cv
89.8853 528.672 89.8877 530.275 89.8901 531.921 cv
89.8433 532.777 89.7959 533.646 89.7485 534.523 cv
89.7393 534.688 li
89.7363 534.747 li
89.6885 535.002 li
89.5801 535.592 li
89.5215 535.994 89.4023 536.364 89.3091 536.751 cv
88.9097 538.28 88.2412 539.677 87.2969 540.688 cv
86.3369 541.688 85.1162 542.275 83.478 542.47 cv
81.8071 542.65 80.0371 542.59 78.3916 542.135 cv
75.064 541.271 72.1914 538.752 70.373 535.327 cv
69.4463 533.612 68.7666 531.733 68.2798 529.77 cv
67.936 528.212 li
67.6367 526.586 li
67.4531 525.495 67.2681 524.398 67.082 523.296 cv
66.3882 518.878 65.8223 514.338 65.4922 509.716 cv
65.1514 505.096 65.043 500.389 65.2935 495.674 cv
65.5806 490.975 66.2075 486.227 67.668 481.805 cv
69.1133 477.414 71.564 473.336 75.3101 471.187 cv
75.7144 470.949 li
75.9165 470.83 li
76.0176 470.771 li
75.8418 470.871 76.0244 470.774 76.0098 470.785 cv
76.7808 470.441 li
77.2964 470.221 77.7993 469.944 78.333 469.807 cv
79.3818 469.438 80.4414 469.182 81.5581 469.04 cv
82.6519 468.877 83.8604 468.857 85.1919 468.763 cv
85.9946 468.675 86.8975 468.564 87.4175 468.396 cv
87.8735 468.281 li
87.8662 468.283 88.2725 468.162 88.1772 468.18 cv
88.332 468.108 li
88.6411 467.963 li
89.0278 467.763 89.5156 467.558 89.7803 467.326 cv
90.7017 466.641 li
91.4629 465.977 li
92.8667 464.717 li
93.3169 464.336 93.7563 463.961 94.2051 463.601 cv
94.6602 463.287 95.1182 462.93 95.5659 462.645 cv
96.8887 461.883 li
98.623 461.161 li
98.7729 461.099 li
98.7769 461.098 98.7832 461.097 98.814 461.085 cv
98.9146 461.056 li
99.3154 460.936 li
100.117 460.696 li
100.653 460.6 101.188 460.431 101.721 460.39 cv
103.86 460.078 105.929 460.354 107.969 461.18 cv
110.018 461.984 112.044 463.306 114.379 464.519 cv
115.672 465.156 117.129 465.661 118.645 465.817 cv
120.16 465.985 121.597 465.815 122.835 465.642 cv
125.293 465.26 127.328 465.083 129.476 465.437 cv
129.999 465.551 130.557 465.606 131.049 465.761 cv
131.568 465.913 132.019 465.984 132.618 466.212 cv
133.47 466.506 li
133.896 466.653 li
134.179 466.779 li
134.859 467.081 li
135.513 467.448 li
137.25 468.461 138.76 470.061 140.564 471.761 cv
142.358 473.445 144.673 475.189 147.504 475.805 cv
147.85 475.881 148.266 475.988 148.554 476.024 cv
149.411 476.128 li
150.279 476.234 li
150.503 476.271 150.738 476.267 150.954 476.333 cv
151.846 476.495 152.674 476.855 153.465 477.295 cv
155.039 478.21 156.365 479.668 157.454 481.325 cv
158.547 482.987 159.397 484.859 160.108 486.768 cv
161.517 490.604 162.343 494.62 162.904 498.529 cv
163.456 502.448 163.731 506.291 163.817 509.98 cv
163.835 510.895 163.847 511.794 163.843 512.727 cv
163.835 513.611 163.808 514.482 163.771 515.348 cv
cp
114.414 558.502 mo
94.543 559.06 86.1953 550.674 83.3984 546.771 cv
83.6113 546.753 83.8262 546.747 84.0381 546.724 cv
84.4126 546.673 li
84.8735 546.592 li
85.1865 546.541 85.4595 546.459 85.7529 546.392 cv
86.3306 546.232 86.9038 546.027 87.459 545.769 cv
88.5679 545.25 89.5859 544.514 90.4048 543.647 cv
90.793 543.23 91.1367 542.795 91.4458 542.35 cv
91.6362 542.79 91.8486 543.241 92.0986 543.704 cv
93.0127 545.385 94.48 547.166 96.54 548.482 cv
98.5815 549.833 101.163 550.585 103.815 550.72 cv
104.15 550.752 104.48 550.739 104.814 550.735 cv
105.317 550.728 li
105.57 550.723 li
105.697 550.721 li
105.89 550.705 li
106.507 550.641 107.042 550.626 107.745 550.518 cv
109.189 550.313 110.541 549.987 111.942 549.451 cv
113.327 548.888 114.708 548.095 115.905 547.007 cv
116.917 546.095 117.761 544.978 118.414 543.783 cv
119.359 545.219 120.781 546.646 122.63 547.575 cv
124.574 548.573 126.861 549.119 129.206 549.145 cv
129.792 549.145 130.387 549.146 130.98 549.084 cv
131.428 549.049 li
131.711 549.022 li
131.912 548.994 li
132.19 548.951 132.423 548.93 132.742 548.869 cv
134.066 548.638 135.215 548.292 136.435 547.784 cv
138.813 546.779 141.139 545.141 142.778 542.847 cv
143.074 542.438 143.34 542.01 143.592 541.572 cv
144.336 542.393 145.306 543.163 146.554 543.738 cv
147.046 543.959 147.583 544.161 148.175 544.299 cv
145.221 548.547 136.27 557.891 114.414 558.502 cv
cp
53.8442 526.839 mo
48.3486 517.54 49.8262 509.174 50.7163 506.008 cv
52.186 500.782 57.9531 497.613 60.978 496.276 cv
60.77 500.941 60.8804 505.537 61.2109 510.027 cv
61.5518 514.792 62.1318 519.442 62.8433 523.97 cv
63.0337 525.1 63.2231 526.224 63.4116 527.342 cv
63.7188 529.009 li
63.8428 529.575 63.9668 530.14 64.0903 530.702 cv
64.6597 533.032 65.4746 535.297 66.6016 537.376 cv
66.8252 537.789 67.0723 538.19 67.3223 538.59 cv
63.9316 538.871 59.6763 536.705 53.8442 526.839 cv
cp
167.09 497.943 mo
166.511 493.827 165.666 489.568 164.119 485.294 cv
163.332 483.163 162.38 481.02 161.05 478.974 cv
159.714 476.948 157.988 474.967 155.633 473.586 cv
154.457 472.919 153.162 472.376 151.798 472.121 cv
151.461 472.03 151.117 472.019 150.775 471.967 cv
149.933 471.864 li
149.076 471.76 li
148.793 471.724 148.655 471.655 148.436 471.611 cv
146.707 471.234 145.095 470.125 143.487 468.612 cv
141.867 467.108 140.109 465.181 137.707 463.756 cv
136.796 463.247 li
135.835 462.816 li
135.594 462.711 li
135.473 462.658 li
135.446 462.645 135.265 462.581 135.292 462.591 cv
134.866 462.444 li
134.014 462.15 li
133.488 461.946 132.753 461.778 132.112 461.6 cv
131.448 461.401 130.797 461.329 130.136 461.192 cv
127.489 460.732 124.605 461.007 122.24 461.389 cv
121.06 461.557 120.033 461.654 119.097 461.547 cv
118.161 461.447 117.259 461.139 116.333 460.694 cv
114.282 459.644 112.137 458.221 109.551 457.187 cv
106.99 456.128 103.942 455.704 101.133 456.136 cv
100.418 456.202 99.748 456.398 99.0562 456.535 cv
98.0586 456.829 li
97.561 456.979 li
97.4365 457.018 li
97.5112 456.987 97.1943 457.102 97.1885 457.106 cv
96.9717 457.197 li
95.2378 457.919 li
94.5938 458.256 93.9316 458.635 93.2871 459.004 cv
92.6797 459.392 92.144 459.805 91.5718 460.208 cv
91.0425 460.631 90.5264 461.07 90.021 461.501 cv
88.6235 462.755 li
87.9688 463.329 li
87.3799 463.766 li
87.1689 463.955 87.04 463.939 86.8813 464.046 cv
86.769 464.109 li
86.7134 464.143 li
86.6982 464.148 86.7041 464.146 86.6968 464.149 cv
86.3423 464.239 li
85.6587 464.448 85.3022 464.411 84.8613 464.481 cv
83.6919 464.567 82.3857 464.584 80.9966 464.783 cv
79.627 464.957 78.2388 465.287 76.9263 465.75 cv
76.2456 465.938 75.6396 466.258 75.0068 466.531 cv
74.0669 466.956 li
73.9814 467 74.0923 466.935 73.8457 467.067 cv
73.7446 467.126 li
73.5425 467.245 li
73.1382 467.482 li
72.8643 467.647 72.6094 467.781 72.3198 467.973 cv
71.4043 468.641 li
70.7622 469.083 70.2832 469.57 69.7583 470.048 cv
68.7383 471.021 67.8701 472.11 67.0762 473.232 cv
65.5205 475.501 64.4336 477.965 63.5962 480.442 cv
62.3525 484.222 61.6836 488.048 61.2983 491.837 cv
59.2993 492.539 49.249 496.452 46.8657 504.926 cv
45.8364 508.586 44.1201 518.247 50.4009 528.874 cv
54.0459 535.042 59.4766 542.583 66.8291 542.583 cv
67.8818 542.582 68.9761 542.421 70.1084 542.086 cv
70.4063 542.382 70.7017 542.681 71.0215 542.954 cv
72.835 544.517 75.0049 545.671 77.2666 546.276 cv
77.7153 546.398 78.1641 546.483 78.6133 546.565 cv
79.2227 547.868 86.6631 562.528 112.552 562.528 cv
113.197 562.528 113.857 562.519 114.525 562.5 cv
143.56 561.688 151.872 546.372 152.969 544.042 cv
153.24 543.972 153.509 543.897 153.758 543.802 cv
156.26 542.985 158.63 541.202 160.46 538.916 cv
162.32 536.628 163.756 533.84 164.857 530.922 cv
166.024 527.813 166.825 524.53 167.36 521.011 cv
167.634 519.253 167.808 517.438 167.928 515.573 cv
167.973 514.64 168.005 513.689 168.017 512.732 cv
168.024 511.823 168.016 510.86 168 509.893 cv
167.924 506.058 167.654 502.064 167.09 497.943 cv
cp
0 0 0 rgb
f
295.954 504.479 mo
295.935 504.438 li
295.735 504.704 295.751 504.688 295.954 504.479 cv
cp
1 1 1 rgb
f
370.494 472.624 mo
364.992 464.433 352.613 467.589 343.053 478.757 cv
338.455 484.129 334.504 493.919 333.158 493.611 cv
331.08 493.135 329.252 492.486 329.252 492.486 cv
326.666 485.514 327.002 478.164 328.162 474.6 cv
329.717 469.82 332.734 464.51 334.533 461.386 cv
342.934 470.763 356.418 468.057 360.027 463.632 cv
364.822 457.755 357.861 452.74 351.898 447.433 cv
345.781 441.988 341.143 438.219 339.275 436.533 cv
335.441 433.075 330.396 433.27 326.943 434.759 cv
322.447 436.697 310.641 448.729 308.393 458.926 cv
308.482 459.069 li
305.372 457.491 308.246 457.491 308.246 457.491 cv
308.033 441.012 312.92 424.615 317.088 408.684 cv
318.75 402.335 320.566 393.092 314.252 388.434 cv
308.227 383.994 298.91 389.746 295.611 395.938 cv
294.234 398.521 293.039 401.313 291.994 404.229 cv
292.278 393.802 286.49 388.94 278.641 391.48 cv
270.438 394.136 264.855 405.588 263.092 417.637 cv
260.003 438.744 263.205 460.051 263.205 460.051 cv
263.205 460.051 261.014 453.535 260.206 445.276 cv
258.859 431.51 257.123 413.25 247.783 415.221 cv
231.963 418.562 236.592 452.579 242.014 485.608 cv
245.751 508.373 252.439 529.03 260.969 537.896 cv
262.604 539.596 265.036 541.319 268.14 542.719 cv
266.949 542.75 li
260.045 559.126 281.656 562.352 297.434 561.927 cv
314.932 561.455 341.932 557.144 330.938 541.069 cv
330.434 541.083 li
341.467 536.563 347.385 528.102 350.748 516.496 cv
352.271 511.23 356.664 496.431 364.135 487.743 cv
367.406 483.938 373.73 477.441 370.494 472.624 cv
cp
f
297.054 505.379 mo
297.027 505.418 li
296.984 505.476 297.029 505.407 297.024 505.41 cv
297.065 505.338 297.086 505.301 297.086 505.301 cv
297.107 505.266 li
297.172 505.152 297.207 505.029 297.238 504.906 cv
297.186 505.33 296.981 505.592 297.061 505.368 cv
297.054 505.379 li
cp
369.169 476.096 mo
369.055 477.108 368.561 478.283 367.9 479.419 cv
367.235 480.562 366.409 481.687 365.521 482.791 cv
364.637 483.894 363.663 484.994 362.691 486.121 cv
362.195 486.706 361.708 487.338 361.219 487.943 cv
360.744 488.562 360.315 489.203 359.864 489.831 cv
356.436 494.947 354.054 500.396 352.062 505.727 cv
351.074 508.396 350.204 511.051 349.422 513.663 cv
349.031 514.985 348.671 516.258 348.28 517.451 cv
347.927 518.676 347.468 519.833 347.035 520.984 cv
345.262 525.571 342.755 529.467 339.862 532.476 cv
336.967 535.5 333.609 537.497 330.485 538.906 cv
327.333 540.299 324.36 541.014 321.919 541.586 cv
319.48 542.071 317.567 542.48 316.145 542.67 cv
314.764 542.907 314.03 543.062 314.03 543.061 cv
313.331 543.209 312.802 543.829 312.8 544.573 cv
312.797 545.429 313.489 546.124 314.345 546.127 cv
314.345 546.126 315.094 546.13 316.494 546.085 cv
317.859 546.059 320.005 545.868 322.694 545.396 cv
323.355 545.251 324.052 545.097 324.782 544.936 cv
325.147 544.851 325.52 544.764 325.901 544.676 cv
326.277 544.562 326.663 544.444 327.056 544.325 cv
327.838 544.075 328.665 543.86 329.499 543.551 cv
329.665 543.485 329.847 543.414 330.015 543.348 cv
331.617 546.093 331.912 548.394 330.913 550.351 cv
328.743 554.603 318.795 559.351 297.38 559.928 cv
282.893 560.31 272.24 557.601 268.864 552.658 cv
267.466 550.611 267.258 548.122 268.22 545.091 cv
268.686 545.281 269.155 545.466 269.63 545.629 cv
273.931 547.176 278.556 547.757 283 547.125 cv
283.579 547.042 284.067 546.596 284.172 545.988 cv
284.304 545.232 283.798 544.514 283.042 544.383 cv
283 544.375 li
278.862 543.656 274.89 542.917 271.111 541.55 cv
269.214 540.895 267.443 539.977 265.761 538.964 cv
264.647 538.168 li
264.09 537.775 li
263.899 537.628 263.697 537.422 263.5 537.248 cv
262.907 536.704 li
262.61 536.433 li
262.521 536.352 li
262.495 536.321 li
262.435 536.251 li
261.462 535.136 li
258.894 532.102 256.916 528.394 255.162 524.629 cv
253.425 520.834 251.961 516.877 250.671 512.856 cv
249.396 508.828 248.293 504.733 247.31 500.606 cv
246.315 496.47 245.505 492.324 244.759 488.13 cv
244.024 483.939 243.37 479.679 242.716 475.459 cv
242.077 471.229 241.458 467.001 240.918 462.771 cv
239.863 454.321 239.011 445.82 239.239 437.456 cv
239.376 433.295 239.801 429.135 240.97 425.367 cv
241.573 423.505 242.388 421.763 243.487 420.379 cv
243.777 420.055 244.069 419.733 244.368 419.424 cv
244.705 419.173 244.997 418.853 245.355 418.639 cv
245.708 418.44 246.071 418.147 246.395 418.046 cv
246.56 417.974 246.722 417.896 246.883 417.813 cv
247.041 417.729 247.372 417.663 247.607 417.588 cv
249.318 417.049 250.329 417.266 251.484 418.278 cv
252.621 419.301 253.521 421.071 254.221 422.892 cv
255.598 426.626 256.335 430.803 256.937 434.97 cv
257.231 437.063 257.479 439.173 257.71 441.293 cv
257.948 443.417 258.114 445.53 258.471 447.737 cv
258.945 451.014 li
259.121 452.102 259.394 453.17 259.614 454.248 cv
259.846 455.324 260.065 456.402 260.379 457.465 cv
260.576 458.186 260.775 458.908 260.991 459.638 cv
260.557 459.851 260.163 460.056 259.811 460.249 cv
259.11 460.622 258.582 460.969 258.213 461.19 cv
257.845 461.437 257.649 461.567 257.649 461.567 cv
257.139 461.908 256.893 462.558 257.089 463.171 cv
257.327 463.912 258.121 464.32 258.862 464.082 cv
258.933 464.06 li
258.933 464.06 259.133 463.995 259.509 463.874 cv
259.893 463.745 260.456 463.555 261.173 463.313 cv
262.601 462.809 264.639 462.087 267.085 461.222 cv
268.311 460.801 269.648 460.368 271.077 459.971 cv
272.501 459.557 274.017 459.171 275.593 458.83 cv
277.167 458.477 278.805 458.18 280.473 457.942 cv
282.167 457.696 283.784 457.547 285.498 457.447 cv
286.361 457.421 287.224 457.394 288.083 457.367 cv
288.946 457.368 289.806 457.369 290.659 457.37 cv
292.349 457.426 294.02 457.445 295.589 457.636 cv
297.181 457.745 298.66 458.052 300.082 458.273 cv
301.456 458.651 302.798 458.888 303.945 459.367 cv
304.531 459.576 305.092 459.776 305.625 459.967 cv
306.122 460.202 306.593 460.425 307.036 460.635 cv
307.48 460.844 307.896 461.039 308.279 461.219 cv
308.67 461.415 309.048 461.661 309.395 461.822 cv
310.78 462.522 311.753 462.629 311.754 462.629 cv
312.094 462.665 312.452 462.59 312.762 462.389 cv
313.477 461.925 313.68 460.969 313.215 460.254 cv
313.216 460.254 312.684 459.432 311.435 458.508 cv
311.212 458.346 310.97 458.177 310.704 458.009 cv
313.498 448.741 323.955 438.226 327.735 436.596 cv
330.428 435.434 334.713 435.111 337.936 438.018 cv
338.68 438.69 339.843 439.676 341.315 440.924 cv
343.645 442.898 346.834 445.603 350.568 448.927 cv
351.139 449.434 351.718 449.939 352.296 450.442 cv
358.616 455.952 361.287 458.924 358.478 462.367 cv
357.236 463.89 353.823 465.575 349.264 465.681 cv
346.262 465.744 340.555 465.11 336.022 460.051 cv
335.596 459.573 334.967 459.334 334.325 459.396 cv
333.688 459.463 333.12 459.832 332.8 460.388 cv
331.22 463.132 327.932 468.843 326.261 473.98 cv
325.072 477.629 324.755 484.075 326.521 490.516 cv
324.96 490.42 323.424 490.403 321.934 490.481 cv
317.212 490.716 312.956 491.789 309.395 493.177 cv
305.821 494.561 302.934 496.274 300.732 497.89 cv
298.536 499.521 296.993 501.025 296.014 502.119 cv
295.522 502.661 295.149 503.091 294.924 503.389 cv
294.872 503.456 294.808 503.535 294.802 503.551 cv
294.8 503.557 li
294.799 503.558 294.942 503.431 295.017 503.393 cv
295.068 503.365 li
294.97 503.43 294.865 503.483 294.783 503.574 cv
294.783 503.574 294.748 503.612 294.68 503.688 cv
294.648 503.728 294.662 503.699 294.587 503.804 cv
294.535 503.88 li
294.522 503.899 li
294.702 503.396 293.417 505.392 295.767 506.106 cv
296.71 505.975 296.409 505.911 296.498 505.928 cv
296.576 505.881 li
296.663 505.832 296.82 505.697 296.83 505.686 cv
296.863 505.656 li
296.924 505.605 296.994 505.546 297.074 505.479 cv
297.342 505.259 297.74 504.934 298.258 504.51 cv
299.318 503.695 300.879 502.499 302.984 501.174 cv
305.083 499.848 307.713 498.354 310.918 497.102 cv
314.121 495.861 317.922 494.912 322.146 494.71 cv
324.255 494.604 326.464 494.684 328.731 494.979 cv
329.299 495.048 329.869 495.14 330.443 495.234 cv
331.009 495.34 331.546 495.433 332.173 495.575 cv
332.63 495.674 li
332.688 495.687 li
332.66 495.682 332.775 495.706 332.957 495.726 cv
333.239 495.76 333.631 495.727 333.811 495.673 cv
333.995 495.623 334.18 495.556 334.354 495.475 cv
334.535 495.389 334.575 495.35 334.689 495.278 cv
335.401 494.765 335.582 494.446 335.864 494.113 cv
336.34 493.479 336.69 492.906 337.043 492.326 cv
338.407 490.03 339.614 487.746 340.977 485.493 cv
341.652 484.369 342.357 483.263 343.104 482.199 cv
343.477 481.676 343.875 481.14 344.246 480.678 cv
344.574 480.282 li
344.621 480.228 344.705 480.121 344.722 480.109 cv
344.89 479.927 li
345.56 479.194 li
347.35 477.241 349.334 475.397 351.559 473.901 cv
353.768 472.398 356.195 471.179 358.705 470.563 cv
361.207 469.965 363.764 470.098 365.803 471.164 cv
366.26 471.493 366.835 471.762 367.152 472.13 cv
367.345 472.317 367.528 472.422 367.749 472.659 cv
368.44 473.536 li
369.065 474.341 369.272 475.066 369.169 476.096 cv
cp
263.792 435.896 mo
263.804 434.9 263.787 433.897 263.822 432.907 cv
263.979 429.949 li
264.111 427.969 264.109 426.026 264.392 424.002 cv
265.066 417.98 li
265.352 416.178 265.704 414.165 266.205 412.313 cv
266.679 410.427 267.269 408.573 267.975 406.778 cv
268.655 404.969 269.508 403.244 270.448 401.597 cv
271.382 399.94 272.511 398.433 273.756 397.096 cv
274.37 396.412 275.058 395.831 275.751 395.277 cv
276.112 395.031 276.474 394.754 276.827 394.527 cv
277.174 394.343 277.515 394.15 277.854 393.948 cv
279.255 393.389 li
280.41 393.073 li
280.831 392.986 281.25 392.939 281.668 392.863 cv
282.079 392.858 282.496 392.815 282.898 392.833 cv
284.508 392.918 285.966 393.476 287.087 394.539 cv
288.197 395.618 288.984 397.143 289.434 398.84 cv
289.607 399.477 li
289.719 400.142 li
289.801 400.585 289.877 401.028 289.896 401.461 cv
289.987 402.155 289.991 403.025 289.993 403.893 cv
283.399 422.557 283.048 445.733 283.141 453.498 cv
282.028 453.614 280.917 453.757 279.865 453.931 cv
278.091 454.215 276.361 454.561 274.707 454.962 cv
273.049 455.352 271.463 455.785 269.977 456.246 cv
268.485 456.689 267.094 457.167 265.819 457.629 cv
265.525 457.733 265.239 457.838 264.958 457.942 cv
264.793 456.585 264.642 455.213 264.52 453.843 cv
264.306 451.86 264.213 449.862 264.069 447.87 cv
263.921 445.878 263.911 443.879 263.824 441.884 cv
263.717 439.887 263.806 437.893 263.792 435.896 cv
cp
297.376 396.879 mo
299.315 393.24 303.508 389.967 307.348 389.096 cv
309.594 388.587 311.52 388.905 313.064 390.043 cv
318.143 393.789 316.849 401.702 315.153 408.178 cv
314.72 409.834 314.278 411.496 313.836 413.162 cv
310.147 427.051 306.351 441.397 306.253 455.878 cv
305.938 455.759 305.637 455.646 305.308 455.522 cv
304.003 454.968 302.506 454.664 300.954 454.226 cv
299.381 453.944 297.715 453.588 295.995 453.476 cv
294.269 453.27 292.507 453.247 290.72 453.188 cv
289.832 453.188 288.938 453.186 288.039 453.185 cv
287.902 453.187 287.871 453.18 287.646 453.188 cv
287.315 453.202 li
287.138 453.211 li
287.057 445.421 287.447 423.1 293.728 405.308 cv
293.844 405.104 293.926 404.88 293.964 404.64 cv
294.954 401.916 296.083 399.305 297.376 396.879 cv
cp
333.584 491.526 mo
333.541 491.517 li
333.597 491.528 333.626 491.537 333.584 491.526 cv
cp
333.391 490.13 mo
333.13 490.563 332.867 490.974 332.621 491.323 cv
332.147 491.227 331.649 491.132 331.164 491.044 cv
331.061 491.027 330.958 491.015 330.854 490.998 cv
328.651 484.462 329.146 478.038 330.064 475.219 cv
331.248 471.579 333.377 467.513 334.987 464.631 cv
338.919 468.028 343.901 469.801 349.356 469.68 cv
349.64 469.673 349.921 469.659 350.201 469.643 cv
349.836 469.872 349.476 470.105 349.122 470.347 cv
346.572 472.073 344.367 474.134 342.39 476.299 cv
341.65 477.111 li
341.466 477.314 li
341.276 477.538 li
340.941 477.943 li
340.444 478.563 340.023 479.136 339.601 479.731 cv
338.771 480.916 338.019 482.107 337.311 483.29 cv
335.893 485.646 334.642 488.019 333.391 490.13 cv
cp
360.611 465.896 mo
360.97 465.578 361.293 465.244 361.577 464.896 cv
367.142 458.076 360.367 452.172 354.924 447.427 cv
354.356 446.933 353.788 446.438 353.229 445.938 cv
349.458 442.583 346.246 439.86 343.901 437.873 cv
342.456 436.647 341.314 435.68 340.615 435.048 cv
335.984 430.872 329.931 431.292 326.151 432.922 cv
322.473 434.508 315.286 441.323 310.574 448.973 cv
311.574 437.283 314.678 425.58 317.702 414.188 cv
318.146 412.518 318.588 410.852 319.022 409.19 cv
320.317 404.244 323.351 392.66 315.438 386.823 cv
312.951 384.99 309.847 384.427 306.462 385.195 cv
301.51 386.318 296.322 390.35 293.847 394.997 cv
293.544 395.564 293.252 396.144 292.966 396.729 cv
292.339 394.897 291.35 393.098 289.84 391.638 cv
288.035 389.891 285.482 388.93 283.068 388.837 cv
282.464 388.812 281.87 388.859 281.272 388.883 cv
280.695 388.975 280.109 389.049 279.542 389.168 cv
278.711 389.391 li
278.295 389.503 li
278.088 389.561 li
278.036 389.574 li
277.869 389.635 li
277.781 389.67 li
276.37 390.234 li
275.823 390.519 275.279 390.813 274.741 391.114 cv
274.244 391.43 273.8 391.765 273.33 392.093 cv
272.446 392.792 271.591 393.529 270.852 394.346 cv
269.345 395.959 268.047 397.72 266.994 399.581 cv
265.931 401.438 264.993 403.351 264.25 405.322 cv
263.478 407.285 262.841 409.29 262.33 411.32 cv
262.061 412.333 261.837 413.355 261.633 414.381 cv
261.52 414.892 261.434 415.407 261.35 415.923 cv
261.221 416.696 li
261.157 417.082 li
261.125 417.275 li
261.091 417.531 li
260.417 423.553 li
260.218 424.971 260.153 426.454 260.083 427.934 cv
259.641 425.75 259.08 423.563 258.301 421.374 cv
257.463 419.222 256.501 416.974 254.478 415.037 cv
253.475 414.092 252.11 413.272 250.593 412.993 cv
250.219 412.942 249.839 412.879 249.467 412.861 cv
249.1 412.863 248.724 412.855 248.364 412.886 cv
247.836 412.96 li
247.573 413 li
247.441 413.021 li
247.375 413.031 li
247.289 413.052 247.476 413.002 247.165 413.079 cv
246.39 413.297 li
246.115 413.384 245.911 413.411 245.578 413.546 cv
244.594 413.962 li
243.902 414.23 243.409 414.607 242.836 414.949 cv
242.279 415.298 241.813 415.756 241.307 416.164 cv
240.853 416.617 240.419 417.092 240.002 417.571 cv
238.421 419.555 237.42 421.78 236.694 423.99 cv
235.309 428.438 234.883 432.906 234.718 437.309 cv
234.459 446.122 235.321 454.769 236.366 463.346 cv
236.901 467.633 237.513 471.902 238.18 476.157 cv
238.854 480.419 239.516 484.644 240.277 488.906 cv
241.047 493.161 241.899 497.443 242.926 501.65 cv
243.946 505.871 245.09 510.068 246.419 514.221 cv
247.766 518.369 249.296 522.476 251.146 526.481 cv
252.065 528.486 253.089 530.457 254.217 532.388 cv
254.769 533.357 255.421 534.288 256.021 535.238 cv
256.715 536.146 257.338 537.091 258.11 537.959 cv
259.261 539.264 li
259.333 539.346 li
259.369 539.386 li
259.295 539.315 259.509 539.528 259.501 539.519 cv
259.65 539.653 li
259.947 539.925 li
260.542 540.467 li
260.748 540.647 260.923 540.826 261.154 541.01 cv
261.901 541.561 li
262.4 541.921 262.903 542.301 263.407 542.635 cv
263.802 542.873 264.203 543.101 264.604 543.325 cv
263.05 547.79 263.356 551.688 265.561 554.914 cv
270.794 562.574 285.061 563.964 294.715 563.964 cv
295.691 563.964 296.62 563.949 297.487 563.926 cv
306.935 563.671 329.45 562.016 334.477 552.17 cv
336.063 549.063 335.801 545.568 333.711 541.765 cv
336.736 540.263 339.921 538.205 342.739 535.297 cv
346.067 531.885 348.898 527.474 350.848 522.511 cv
351.324 521.267 351.825 520.01 352.211 518.708 cv
352.643 517.404 353.014 516.117 353.393 514.861 cv
354.167 512.324 355.025 509.757 355.989 507.189 cv
357.928 502.071 360.258 496.874 363.402 492.244 cv
363.813 491.684 364.203 491.102 364.628 490.555 cv
365.069 490.02 365.483 489.481 365.945 488.942 cv
366.909 487.836 367.907 486.722 368.889 485.514 cv
369.865 484.309 370.819 483.039 371.662 481.61 cv
372.491 480.183 373.259 478.577 373.499 476.615 cv
373.414 468.662 366.461 465.574 360.611 465.896 cv
cp
0 0 0 rgb
f
336.305 118.807 mo
334.08 108.293 326.939 101.834 317.17 98.9644 cv
315.114 111.668 li
316.026 99.3174 317.475 85.207 317.909 78.9058 cv
318.986 63.3086 321.976 43.8804 315.566 31.103 cv
313.253 26.4912 307.919 22.8867 302.659 24.5508 cv
293.119 27.5684 293.253 37.5425 293.112 45.7168 cv
292.939 55.7725 292.117 67.123 291.234 76.7852 cv
290.186 76.6646 291.198 73.4829 291.198 73.4829 cv
286.886 66.8691 277.56 67.6245 271.138 73.1265 cv
269.701 74.3574 268.458 76.5791 267.523 79.5166 cv
266.709 79.8379 266.358 79.0879 266.358 79.0879 cv
264.117 76.2632 254.287 76.7417 250.058 80.4312 cv
246.39 83.6299 244.804 88.0825 244.314 92.8037 cv
244.313 92.7993 li
234.654 92.0825 229.266 99.7178 228.038 104.139 cv
226.135 110.994 226.044 130.067 228.649 147.95 cv
232.091 171.583 244.166 183.534 251.819 188.255 cv
251.899 188.305 251.99 188.363 252.086 188.425 cv
251.72 188.421 li
251.72 188.421 246.787 190.671 247.222 195.844 cv
247.861 203.459 261.155 207.826 280.645 207.909 cv
304.592 208.012 314.534 201.722 315.33 195.623 cv
316.233 188.701 311.716 189.029 311.716 189.029 cv
311.504 189.027 li
311.563 188.998 311.619 188.974 311.678 188.944 cv
317.054 186.233 322.709 180.542 326.928 173.397 cv
333.476 162.31 338.957 131.342 336.305 118.807 cv
cp
1 1 1 rgb
f
287.465 98.6309 mo
287.437 98.6841 287.412 98.7383 287.391 98.7949 cv
287.396 98.7822 287.402 98.7598 287.406 98.75 cv
287.422 98.729 287.387 98.7749 287.465 98.6309 cv
cp
287.563 98.4717 mo
287.546 98.4961 287.528 98.5186 287.513 98.5435 cv
287.52 98.5313 287.521 98.5273 287.529 98.5137 cv
287.54 98.5029 287.552 98.4878 287.563 98.4717 cv
cp
288.017 98.0479 mo
287.885 98.1265 287.764 98.2207 287.664 98.335 cv
287.733 98.248 287.837 98.1455 288.017 98.0479 cv
cp
288.572 97.8545 mo
288.538 97.8589 288.503 97.8652 288.469 97.8721 cv
288.487 97.8672 288.5 97.8618 288.519 97.8569 cv
288.538 97.854 288.554 97.8564 288.572 97.8545 cv
cp
288.881 97.8447 mo
288.856 97.8428 288.831 97.8433 288.805 97.8428 cv
288.831 97.8438 288.856 97.8428 288.881 97.8447 cv
cp
289.17 97.896 mo
289.15 97.8901 289.13 97.8867 289.11 97.8823 cv
289.13 97.8867 289.15 97.8906 289.17 97.896 cv
cp
289.427 97.9966 mo
289.409 97.9873 289.391 97.98 289.373 97.9717 cv
289.391 97.98 289.41 97.9878 289.427 97.9966 cv
cp
231.95 154.134 mo
231.753 153.205 231.506 152.327 231.346 151.35 cv
230.844 148.432 li
230.718 147.701 li
230.63 147.029 li
230.446 145.574 li
230.221 143.63 229.913 141.698 229.755 139.753 cv
229.583 137.811 229.412 135.876 229.242 133.957 cv
229.13 132.033 229.02 130.124 228.91 128.238 cv
228.859 126.352 228.809 124.488 228.76 122.655 cv
228.724 120.823 228.782 119.028 228.787 117.267 cv
228.801 115.507 228.951 113.808 229.012 112.141 cv
229.126 110.495 229.305 109.019 229.475 107.497 cv
229.63 106.712 229.783 105.941 229.934 105.184 cv
230.04 104.646 li
230.048 104.62 li
230.084 104.509 li
230.156 104.288 li
230.236 103.993 230.372 103.697 230.487 103.404 cv
230.984 102.231 231.656 101.145 232.384 100.202 cv
233.106 99.248 233.907 98.4365 234.726 97.7754 cv
236.357 96.4326 238.032 95.6563 239.469 95.2651 cv
239.82 95.1348 240.175 95.0938 240.501 95.0239 cv
240.825 94.9683 241.144 94.8745 241.407 94.8716 cv
241.678 94.8467 241.928 94.8237 242.157 94.8022 cv
242.175 94.8003 242.19 94.7988 242.208 94.7969 cv
242.179 95.7163 242.175 96.6025 242.2 97.417 cv
242.235 98.459 242.298 99.4111 242.416 100.243 cv
242.516 101.079 242.664 101.793 242.794 102.381 cv
243.065 103.553 243.312 104.203 243.312 104.203 cv
243.504 104.704 243.968 105.082 244.539 105.137 cv
245.342 105.213 246.056 104.624 246.132 103.82 cv
246.133 103.808 li
246.133 103.808 246.197 103.138 246.194 101.994 cv
246.206 100.85 246.148 99.2368 246.103 97.3281 cv
246.091 96.3735 246.11 95.3442 246.186 94.2695 cv
246.271 93.1978 246.387 92.0713 246.625 90.9492 cv
246.825 89.813 247.179 88.6982 247.578 87.5952 cv
248.036 86.5259 248.531 85.4531 249.219 84.5254 cv
249.535 84.0156 249.886 83.6445 250.213 83.2314 cv
250.343 83.0376 250.64 82.7871 250.861 82.5625 cv
251.216 82.2188 li
251.393 82.0469 li
251.449 81.9932 li
251.48 81.9702 li
252.207 81.3335 253.206 80.8394 254.205 80.4536 cv
255.209 80.0576 256.269 79.8013 257.281 79.6309 cv
258.292 79.436 259.268 79.3799 260.157 79.3408 cv
261.039 79.3447 261.849 79.3779 262.507 79.4985 cv
262.846 79.5454 263.145 79.6074 263.396 79.688 cv
263.672 79.748 263.874 79.832 264.051 79.9058 cv
264.128 79.9385 264.265 79.978 264.282 79.9966 cv
264.303 80.0146 264.325 80.0239 264.35 80.0283 cv
264.375 80.0327 264.402 80.0327 264.431 80.0303 cv
264.471 80.0464 264.556 80.1421 264.606 80.1846 cv
264.833 80.3984 264.955 80.5127 264.955 80.5127 cv
264.979 80.5352 li
265.044 80.5967 265.116 80.645 265.187 80.6958 cv
265.05 81.2539 264.924 81.8096 264.811 82.3564 cv
264.523 83.8359 264.301 85.269 264.177 86.6289 cv
264.098 87.3086 264.048 87.9702 264.012 88.6099 cv
263.964 89.2495 263.928 89.8672 263.925 90.46 cv
263.88 91.6465 263.927 92.731 263.958 93.6914 cv
264.039 94.6479 264.109 95.4814 264.167 96.168 cv
264.358 97.5337 264.493 98.3071 264.493 98.3071 cv
264.607 98.9619 265.163 99.4736 265.854 99.5054 cv
266.654 99.542 267.332 98.9233 267.368 98.124 cv
267.37 98.0688 li
267.37 98.0688 267.405 97.3135 267.419 96.0044 cv
267.442 94.6953 267.489 92.8301 267.611 90.6113 cv
267.665 89.501 267.756 88.3008 267.914 87.0454 cv
268.05 85.7852 268.278 84.4746 268.561 83.1401 cv
268.858 81.8125 269.213 80.4512 269.712 79.1611 cv
270.191 77.8843 270.823 76.584 271.532 75.6523 cv
271.718 75.4463 271.767 75.2852 272.101 74.9897 cv
272.475 74.6221 li
272.511 74.5942 li
272.612 74.5156 li
272.814 74.3574 li
273.086 74.1499 273.348 73.9297 273.624 73.7305 cv
274.472 73.1709 li
275.624 72.4785 276.809 71.8599 278.022 71.4961 cv
279.224 71.1177 280.42 70.8535 281.541 70.8286 cv
282.105 70.7642 282.636 70.8462 283.159 70.8447 cv
283.659 70.9409 284.17 70.9502 284.611 71.105 cv
284.837 71.1641 285.059 71.2222 285.276 71.2788 cv
285.48 71.3633 285.68 71.4458 285.875 71.5259 cv
286.279 71.6577 286.603 71.8896 286.932 72.064 cv
287.556 72.4531 288.09 72.8848 288.386 73.2119 cv
288.709 73.4634 289.057 73.9707 289.267 74.2446 cv
289.367 74.377 289.443 74.4775 289.499 74.5508 cv
288.929 81.0815 288.337 86.5991 287.917 90.7295 cv
287.667 93.3936 287.528 95.4932 287.432 96.9224 cv
287.392 97.6348 287.361 98.1812 287.34 98.5493 cv
287.333 98.7266 287.327 98.8608 287.323 98.9512 cv
287.321 98.9941 287.32 99.0166 287.322 99.0215 cv
287.334 98.9746 287.343 98.9395 287.349 98.916 cv
287.354 98.8965 287.358 98.8892 287.364 98.8721 cv
287.311 99.0435 287.285 99.2266 287.299 99.416 cv
287.299 99.416 287.301 99.4395 287.306 99.4854 cv
287.333 99.562 287.273 99.583 287.479 100.02 cv
287.527 100.18 288.076 100.906 289.019 100.761 cv
289.814 100.556 289.901 100.208 290.009 100.104 cv
290.18 99.8022 290.114 99.8936 290.133 99.8672 cv
290.148 99.8286 290.171 99.769 290.193 99.688 cv
290.202 99.6528 290.214 99.6001 290.23 99.5303 cv
290.238 99.499 290.249 99.4521 290.263 99.3901 cv
290.285 99.2935 290.318 99.1489 290.362 98.9585 cv
290.437 98.5898 290.547 98.0435 290.69 97.3306 cv
290.952 95.9067 291.317 93.8203 291.667 91.1514 cv
292.008 88.4814 292.343 85.2314 292.717 81.5024 cv
293.087 77.7729 293.477 73.562 293.842 68.9609 cv
294.206 64.3599 294.549 59.3687 294.796 54.0747 cv
294.919 51.4282 295.017 48.7041 295.07 45.9175 cv
295.127 43.1377 295.136 40.3618 295.473 37.667 cv
295.625 36.3145 295.907 35.0112 296.261 33.7451 cv
296.66 32.5054 297.183 31.3379 297.862 30.3008 cv
298.585 29.3037 299.444 28.4297 300.479 27.7437 cv
300.729 27.5684 300.986 27.4663 301.235 27.3164 cv
301.483 27.1768 301.706 27.0254 302.099 26.896 cv
303.152 26.4922 li
303.278 26.4443 li
303.284 26.4424 303.28 26.4438 303.292 26.4399 cv
303.505 26.3882 li
303.931 26.2793 li
306.211 25.7876 308.749 26.6011 310.75 28.2524 cv
311.246 28.6675 311.73 29.1094 312.15 29.6108 cv
312.59 30.0928 312.971 30.6528 313.279 31.1274 cv
313.433 31.3672 313.683 31.8481 313.786 32.0347 cv
314.216 33.0137 li
314.498 33.6689 314.817 34.3047 315.024 35 cv
316.036 37.6919 316.619 40.5859 316.999 43.5034 cv
317.394 46.4224 317.543 49.3911 317.554 52.3511 cv
317.607 58.272 317.129 64.1567 316.672 69.874 cv
316.444 72.7461 316.221 75.5708 316.002 78.335 cv
315.807 81.0903 315.578 83.7617 315.348 86.3892 cv
314.886 91.6416 314.448 96.6074 314.045 101.191 cv
313.282 110.373 312.682 118.043 312.592 123.472 cv
312.53 126.172 312.613 128.341 312.736 129.889 cv
312.795 130.644 312.887 131.161 312.935 131.538 cv
312.988 131.906 313.016 132.096 313.016 132.096 cv
313.126 132.854 313.786 133.431 314.572 133.415 cv
315.424 133.398 316.101 132.694 316.084 131.843 cv
316.084 131.822 li
316.084 131.822 316.068 131.061 316.041 129.633 cv
316.077 128.943 316.061 128.15 316.105 127.121 cv
316.152 126.096 316.207 124.917 316.267 123.596 cv
316.386 120.949 316.604 117.713 316.847 114.001 cv
317.11 110.288 317.454 106.095 317.854 101.52 cv
317.861 101.448 317.868 101.372 317.875 101.3 cv
318.283 101.427 318.711 101.594 319.207 101.791 cv
319.735 101.98 320.344 102.254 321.026 102.571 cv
322.372 103.218 323.985 104.066 325.622 105.313 cv
327.261 106.549 328.951 108.152 330.388 110.209 cv
331.829 112.258 333.039 114.735 333.814 117.546 cv
333.899 117.901 333.985 118.259 334.072 118.619 cv
334.206 119.159 li
334.22 119.212 li
334.241 119.349 li
334.288 119.647 li
334.399 120.433 334.576 121.28 334.637 122.042 cv
334.693 122.796 334.75 123.559 334.807 124.329 cv
334.821 125.143 334.836 125.963 334.851 126.792 cv
334.834 130.12 334.661 133.597 334.255 137.123 cv
334.1 138.888 333.814 140.66 333.591 142.441 cv
333.295 144.215 333.054 146.005 332.697 147.776 cv
332.064 151.333 331.253 154.853 330.381 158.286 cv
329.481 161.711 328.429 165.026 327.206 168.096 cv
326.879 168.846 326.569 169.604 326.236 170.33 cv
325.884 171.009 325.533 171.681 325.188 172.346 cv
324.312 173.749 323.459 175.153 322.59 176.303 cv
320.847 178.707 318.964 180.919 317.042 182.664 cv
315.129 184.421 313.238 185.893 311.433 186.84 cv
311.103 187.031 li
310.939 187.125 li
310.858 187.173 li
310.817 187.196 li
310.823 187.194 310.82 187.195 310.817 187.197 cv
310.583 187.304 310.354 187.408 310.127 187.512 cv
309.652 187.728 309.195 187.937 308.756 188.137 cv
308.306 188.362 307.921 188.471 307.544 188.608 cv
307.17 188.749 306.813 188.882 306.475 189.009 cv
305.812 189.299 305.148 189.437 304.611 189.656 cv
304.336 189.744 304.084 189.862 303.852 189.93 cv
303.618 189.992 303.406 190.053 303.217 190.115 cv
302.454 190.349 302.039 190.53 302.039 190.53 cv
301.859 190.608 li
301.438 190.793 301.123 191.192 301.067 191.683 cv
300.983 192.417 301.512 193.081 302.246 193.165 cv
302.246 193.165 302.738 193.221 303.677 193.219 cv
304.149 193.229 304.732 193.215 305.385 193.092 cv
306.045 192.975 306.809 192.897 307.649 192.628 cv
308.459 192.353 309.476 192.073 310.348 191.67 cv
310.789 191.474 311.247 191.269 311.724 191.056 cv
311.745 191.046 311.769 191.036 311.79 191.026 cv
311.797 191.026 311.803 191.027 311.809 191.027 cv
311.845 191.024 312.412 191.023 312.822 191.484 cv
313.158 191.861 313.673 192.867 313.347 195.364 cv
312.833 199.299 305.48 205.91 281.236 205.91 cv
281.044 205.91 280.848 205.91 280.653 205.909 cv
262.356 205.831 249.722 201.719 249.215 195.677 cv
248.986 192.948 250.865 191.309 251.906 190.618 cv
251.973 190.66 252.045 190.707 252.112 190.749 cv
254.277 192.086 256.379 193.057 258.149 193.58 cv
259.923 194.124 261.364 194.348 262.347 194.397 cv
263.33 194.47 263.853 194.463 263.853 194.463 cv
264.426 194.454 264.966 194.108 265.194 193.543 cv
265.497 192.791 265.132 191.935 264.38 191.632 cv
264.245 191.578 li
264.245 191.578 263.794 191.396 262.951 191.143 cv
262.103 190.909 260.886 190.506 259.375 189.965 cv
257.847 189.442 256.086 188.664 254.162 187.448 cv
253.659 187.123 253.14 186.787 252.605 186.441 cv
252.107 186.099 251.57 185.791 251.063 185.395 cv
250.023 184.647 248.962 183.806 247.91 182.858 cv
245.797 180.973 243.696 178.699 241.741 176.081 cv
239.772 173.472 238.008 170.48 236.468 167.248 cv
234.944 164.009 233.593 160.536 232.638 156.874 cv
232.355 155.966 232.153 155.051 231.95 154.134 cv
cp
290.176 98.8823 mo
290.165 98.8442 290.147 98.8091 290.133 98.7725 cv
290.149 98.8115 290.167 98.8525 290.176 98.8823 cv
cp
290.237 99.2002 mo
290.23 99.1055 290.213 99.0137 290.189 98.9253 cv
290.224 99.0459 290.213 99.083 290.23 99.1309 cv
290.235 99.1772 290.237 99.2002 290.237 99.2002 cv
cp
290.059 98.5972 mo
290.063 98.6055 290.063 98.6084 290.066 98.6162 cv
289.987 98.4663 289.881 98.333 289.757 98.2207 cv
289.934 98.3755 290.039 98.5322 290.059 98.5972 cv
cp
289.671 98.1504 mo
289.643 98.1284 289.613 98.1084 289.583 98.0884 cv
289.614 98.1089 289.643 98.1294 289.671 98.1504 cv
cp
238.547 178.472 mo
240.678 181.292 242.974 183.75 245.301 185.802 cv
246.332 186.718 247.374 187.536 248.409 188.289 cv
246.745 189.771 244.915 192.277 245.229 196.012 cv
245.963 204.75 258.868 209.816 280.636 209.909 cv
280.843 209.91 281.048 209.91 281.253 209.91 cv
313.001 209.91 316.882 199.186 317.313 195.881 cv
317.726 192.725 317.195 190.331 315.744 188.758 cv
317.074 187.838 318.4 186.772 319.73 185.569 cv
321.888 183.629 323.908 181.304 325.877 178.631 cv
326.907 177.268 327.739 175.909 328.626 174.516 cv
329.052 173.72 329.482 172.916 329.918 172.103 cv
330.294 171.3 330.637 170.484 331.001 169.663 cv
332.346 166.363 333.466 162.909 334.427 159.368 cv
335.361 155.822 336.226 152.203 336.867 148.544 cv
337.232 146.723 337.482 144.881 337.787 143.057 cv
338.018 141.219 338.31 139.399 338.473 137.571 cv
338.892 133.933 339.078 130.311 339.095 126.774 cv
339.078 125.885 339.063 125.004 339.047 124.131 cv
338.976 123.22 338.905 122.317 338.836 121.424 cv
338.757 120.54 338.594 119.781 338.479 118.968 cv
338.432 118.67 li
338.408 118.521 li
338.376 118.345 li
338.357 118.267 li
338.204 117.642 li
338.1 117.228 337.996 116.816 337.894 116.407 cv
336.969 113.153 335.512 110.214 333.77 107.79 cv
332.032 105.353 330.004 103.463 328.071 102.032 cv
326.136 100.589 324.274 99.6289 322.731 98.9048 cv
321.957 98.5522 321.258 98.2466 320.612 98.0186 cv
319.974 97.7744 319.435 97.5737 319.039 97.4595 cv
318.703 97.353 318.45 97.2725 318.246 97.208 cv
318.55 93.8721 318.867 90.377 319.199 86.7329 cv
319.437 84.1108 319.677 81.3877 319.881 78.623 cv
320.106 75.8711 320.338 73.0601 320.572 70.2012 cv
321.047 64.4609 321.556 58.4858 321.52 52.3267 cv
321.516 49.2515 321.371 46.1284 320.957 42.9907 cv
320.558 39.8589 319.937 36.6934 318.803 33.6313 cv
318.57 32.854 318.205 32.1133 317.878 31.3623 cv
317.377 30.2393 li
317.114 29.7529 317.013 29.5518 316.765 29.1401 cv
316.252 28.3232 315.751 27.624 315.164 26.9712 cv
314.597 26.3037 313.95 25.7056 313.272 25.146 cv
311.914 24.0303 310.324 23.1548 308.58 22.6367 cv
306.844 22.1235 304.928 21.979 303.115 22.3823 cv
302.444 22.5527 li
302.109 22.6406 li
302.187 22.6108 301.911 22.707 301.916 22.7051 cv
301.85 22.7305 li
301.718 22.7813 li
300.665 23.1875 li
300.34 23.2915 299.913 23.5205 299.503 23.7402 cv
299.103 23.9634 298.67 24.168 298.307 24.4199 cv
296.84 25.3882 295.585 26.6606 294.588 28.0708 cv
293.639 29.5112 292.97 31.0527 292.481 32.5947 cv
292.046 34.1392 291.729 35.6802 291.561 37.186 cv
291.194 40.2026 291.202 43.0957 291.148 45.8452 cv
291.102 48.5918 291.011 51.2793 290.896 53.8979 cv
290.664 59.1348 290.334 64.0889 289.982 68.6592 cv
289.967 68.8594 289.951 69.0479 289.936 69.2461 cv
289.659 69.04 289.37 68.835 289.049 68.6304 cv
288.562 68.354 288.057 68.0229 287.468 67.8086 cv
287.178 67.6895 286.881 67.5679 286.577 67.4429 cv
286.263 67.355 285.942 67.2656 285.615 67.1738 cv
284.961 66.9609 284.262 66.915 283.545 66.793 cv
282.832 66.769 282.081 66.6792 281.333 66.7607 cv
279.818 66.814 278.275 67.1582 276.749 67.6519 cv
275.21 68.1328 273.741 68.8989 272.323 69.769 cv
271.281 70.4668 li
270.943 70.7139 270.62 70.9829 270.289 71.2422 cv
270.042 71.439 li
269.918 71.5376 li
269.856 71.5869 li
269.701 71.729 li
269.294 72.1333 li
269.051 72.3467 268.679 72.835 268.377 73.2183 cv
267.549 74.3574 266.979 75.4873 266.507 76.6255 cv
266.223 76.4434 265.923 76.2764 265.688 76.1948 cv
265.333 76.0327 264.938 75.8696 264.528 75.7686 cv
264.108 75.6338 263.666 75.5352 263.201 75.46 cv
262.261 75.2793 261.235 75.2188 260.121 75.2002 cv
259.015 75.2285 257.82 75.2759 256.578 75.5049 cv
255.335 75.7163 254.034 76.0298 252.711 76.5459 cv
251.394 77.0635 250.028 77.708 248.762 78.7954 cv
248.702 78.8423 li
248.687 78.854 li
248.594 78.9395 li
248.571 78.9609 li
248.483 79.0469 li
248.306 79.2188 li
247.951 79.563 li
247.709 79.8086 247.49 79.981 247.218 80.3184 cv
246.7 80.9272 246.154 81.5474 245.771 82.1758 cv
244.899 83.4165 244.285 84.7891 243.745 86.1387 cv
243.271 87.5073 242.878 88.873 242.665 90.2026 cv
242.629 90.3911 242.615 90.5713 242.584 90.7578 cv
242.576 90.7578 242.569 90.7573 242.562 90.7573 cv
242.408 90.7681 242.247 90.7788 242.077 90.7905 cv
241.738 90.8169 241.369 90.8462 240.969 90.8774 cv
240.558 90.895 240.176 90.998 239.74 91.0723 cv
239.312 91.1592 238.85 91.2227 238.382 91.3828 cv
236.485 91.8887 234.256 92.9097 232.15 94.627 cv
231.091 95.4751 230.072 96.499 229.152 97.6948 cv
228.225 98.8862 227.375 100.23 226.703 101.787 cv
226.542 102.182 226.368 102.57 226.239 103.005 cv
226.135 103.325 li
226.083 103.485 li
226.058 103.566 li
226.017 103.728 li
226.01 103.763 li
225.895 104.327 li
225.74 105.083 225.583 105.854 225.423 106.638 cv
225.21 108.288 224.978 110.1 224.852 111.843 cv
224.771 113.573 224.628 115.359 224.611 117.169 cv
224.605 118.979 224.548 120.831 224.585 122.708 cv
224.637 124.583 224.689 126.489 224.742 128.418 cv
224.854 130.344 224.969 132.293 225.083 134.257 cv
225.258 136.217 225.434 138.193 225.61 140.176 cv
225.773 142.16 226.088 144.14 226.32 146.126 cv
226.509 147.615 li
226.546 147.887 226.558 148.058 226.617 148.413 cv
226.744 149.143 li
227.251 152.06 li
227.416 153.027 227.694 154.049 227.911 155.036 cv
228.138 156.032 228.366 157.025 228.667 157.978 cv
229.705 161.849 231.162 165.548 232.815 169.005 cv
234.485 172.456 236.403 175.662 238.547 178.472 cv
cp
0 0 0 rgb
f
286.886 175.483 mo
287.954 175.755 289.041 175.109 289.313 174.041 cv
289.313 174.041 289.521 173.219 289.844 171.795 cv
289.97 171.105 290.122 170.267 290.296 169.305 cv
290.44 168.353 290.602 167.279 290.778 166.107 cv
291.096 163.771 291.435 161.048 291.757 158.136 cv
292.075 155.223 292.395 152.117 292.688 149.011 cv
293.87 136.589 294.749 124.153 294.749 124.153 cv
294.75 124.138 294.751 124.108 294.752 124.094 cv
294.82 122.684 293.732 121.486 292.323 121.418 cv
290.914 121.351 289.716 122.438 289.648 123.847 cv
289.648 123.847 289.05 136.253 288.15 148.63 cv
287.927 151.724 287.678 154.813 287.428 157.704 cv
287.173 160.595 286.899 163.282 286.639 165.576 cv
286.493 166.714 286.36 167.758 286.241 168.684 cv
286.098 169.59 285.972 170.381 285.869 171.032 cv
285.61 172.258 285.462 172.959 285.462 172.959 cv
285.423 173.14 li
285.205 174.181 285.845 175.219 286.886 175.483 cv
cp
f
266.416 131.858 mo
266.471 133.033 266.503 134.307 266.587 135.652 cv
266.667 136.997 266.751 138.416 266.838 139.883 cv
266.985 142.818 267.313 145.946 267.55 149.073 cv
267.676 150.637 267.891 152.199 268.055 153.737 cv
268.23 155.274 268.403 156.788 268.571 158.252 cv
269.032 161.175 269.463 163.903 269.833 166.242 cv
270.331 168.574 270.784 170.514 271.084 171.871 cv
271.39 173.229 271.564 174.004 271.564 174.004 cv
271.803 175.058 272.84 175.737 273.906 175.523 cv
274.987 175.306 275.688 174.254 275.471 173.172 cv
275.436 172.996 li
275.436 172.996 274.836 170.008 273.937 165.525 cv
273.626 163.242 273.264 160.578 272.875 157.724 cv
272.742 156.284 272.604 154.796 272.465 153.284 cv
272.336 151.771 272.158 150.241 272.066 148.698 cv
271.899 145.61 271.642 142.533 271.559 139.632 cv
271.504 138.184 271.451 136.783 271.4 135.455 cv
271.346 134.127 271.341 132.87 271.312 131.71 cv
271.254 129.387 271.248 127.466 271.242 126.121 cv
271.243 124.764 271.244 123.989 271.244 123.989 cv
271.244 123.949 li
271.244 123.936 271.244 123.921 271.243 123.908 cv
271.215 122.509 270.058 121.399 268.66 121.427 cv
267.261 121.456 266.15 122.613 266.179 124.011 cv
266.179 124.011 266.195 124.793 266.223 126.162 cv
266.259 127.541 266.307 129.512 266.416 131.858 cv
cp
f
244.765 129.244 mo
244.854 130.616 245.028 132.558 245.294 134.881 cv
245.446 136.04 245.58 137.299 245.792 138.621 cv
245.979 139.947 246.205 141.34 246.473 142.777 cv
246.708 144.218 247.042 145.694 247.35 147.198 cv
247.667 148.7 248.072 150.212 248.433 151.73 cv
248.871 153.234 249.27 154.746 249.74 156.215 cv
250.251 157.675 250.672 159.133 251.228 160.502 cv
251.792 161.868 252.243 163.218 252.843 164.442 cv
253.431 165.668 253.93 166.849 254.494 167.897 cv
255.074 168.938 255.605 169.893 256.077 170.738 cv
256.545 171.585 257.072 172.265 257.445 172.854 cv
258.227 174.013 258.673 174.676 258.673 174.676 cv
259.278 175.573 260.492 175.829 261.407 175.241 cv
262.335 174.646 262.605 173.411 262.01 172.482 cv
261.908 172.324 li
261.908 172.324 261.514 171.709 260.824 170.633 cv
260.493 170.085 260.025 169.469 259.609 168.674 cv
259.189 167.883 258.715 166.991 258.199 166.017 cv
257.694 165.036 257.25 163.913 256.723 162.759 cv
256.184 161.611 255.785 160.314 255.278 159.021 cv
254.779 157.723 254.407 156.319 253.95 154.929 cv
253.53 153.523 253.179 152.067 252.789 150.627 cv
252.473 149.163 252.113 147.711 251.839 146.261 cv
251.572 144.809 251.279 143.388 251.081 141.994 cv
250.851 140.606 250.661 139.26 250.507 137.979 cv
250.327 136.701 250.224 135.485 250.099 134.367 cv
249.889 132.127 249.759 130.257 249.701 128.957 cv
249.675 128.315 249.654 127.812 249.641 127.468 cv
249.632 127.118 249.627 126.931 249.627 126.931 cv
249.626 126.883 li
249.625 126.871 249.625 126.858 249.625 126.846 cv
249.563 125.47 248.398 124.405 247.022 124.467 cv
245.646 124.528 244.581 125.693 244.642 127.069 cv
244.642 127.069 244.651 127.265 244.667 127.631 cv
244.69 128.003 244.723 128.549 244.765 129.244 cv
cp
f
543.158 470.503 mo
541.93 466.082 538.352 453.601 525.518 455.435 cv
524.688 459.905 li
524.449 453.819 523.275 447.091 518.717 443.114 cv
514.486 439.425 504.657 438.946 502.417 441.771 cv
503.957 443.535 li
503.143 443.613 502.34 443.719 501.554 443.862 cv
501.171 432.199 500.918 417.273 501.471 405.275 cv
501.848 397.109 502.611 387.162 493.282 383.547 cv
488.138 381.555 482.586 384.813 479.986 389.271 cv
472.781 401.617 474.536 419.195 474.625 434.83 cv
474.638 437.147 474.738 440.845 474.942 445.16 cv
470.221 439.972 461.006 440.891 455.352 447.1 cv
449.957 453.023 450.114 465.256 451.473 477.067 cv
450.349 473.601 li
441.86 475.808 434.397 482.978 432.777 493.601 cv
430.847 506.267 438.221 521.992 444.769 533.08 cv
448.987 540.225 454.643 545.915 460.019 548.627 cv
460.072 548.654 460.135 548.683 460.189 548.71 cv
459.98 548.712 li
459.98 548.712 455.463 548.384 456.366 555.306 cv
457.162 561.405 467.292 568.18 491.239 568.009 cv
510.727 567.871 523.924 562.004 524.434 554.379 cv
524.781 549.2 519.975 548.104 519.975 548.104 cv
519.594 548.107 li
519.696 548.048 519.792 547.991 519.877 547.938 cv
527.529 543.217 539.604 534.266 543.047 510.633 cv
545.652 492.749 545.061 477.358 543.158 470.503 cv
cp
1 1 1 rgb
f
503.868 462.282 mo
503.884 462.325 503.896 462.36 503.915 462.391 cv
503.924 462.42 503.936 462.458 503.947 462.495 cv
503.926 462.422 503.898 462.352 503.868 462.282 cv
cp
503.728 462.035 mo
503.78 462.107 503.818 462.169 503.84 462.218 cv
503.808 462.154 503.768 462.094 503.728 462.035 cv
cp
542.619 489.505 mo
542.624 491.353 542.525 493.226 542.42 495.112 cv
542.366 496.056 542.335 497.004 542.263 497.953 cv
542.178 498.901 542.093 499.853 542.008 500.806 cv
541.753 503.67 li
541.395 506.53 li
541.031 509.39 li
540.94 510.104 li
540.918 510.282 li
540.919 510.274 540.914 510.31 540.914 510.311 cv
540.914 510.311 li
540.897 510.4 li
540.835 510.759 li
540.587 512.192 li
540.41 513.134 540.284 514.133 540.067 515.021 cv
539.857 515.916 539.648 516.808 539.44 517.696 cv
538.5 521.258 537.3 524.709 535.789 527.855 cv
534.247 530.988 532.422 533.828 530.404 536.285 cv
528.391 538.747 526.195 540.821 524.005 542.549 cv
522.917 543.422 521.817 544.194 520.748 544.909 cv
520.222 545.273 519.681 545.604 519.165 545.934 cv
518.972 546.057 li
518.875 546.118 li
518.827 546.148 li
518.826 546.148 li
518.47 546.342 li
518.2 546.486 517.936 546.63 517.675 546.771 cv
517.406 546.929 517.167 547.023 516.936 547.112 cv
516.701 547.206 516.472 547.3 516.246 547.391 cv
515.785 547.566 515.383 547.773 514.924 547.913 cv
513.994 548.182 513.147 548.447 512.382 548.693 cv
510.84 549.156 509.566 549.406 508.73 549.696 cv
507.884 549.952 507.432 550.121 507.432 550.12 cv
507.27 550.181 li
506.65 550.412 506.216 551.015 506.229 551.714 cv
506.246 552.599 506.978 553.303 507.863 553.286 cv
507.863 553.285 508.368 553.276 509.315 553.198 cv
509.79 553.169 510.373 553.104 511.06 553.025 cv
511.743 552.917 512.54 552.894 513.406 552.629 cv
514.275 552.394 515.237 552.127 516.277 551.815 cv
516.799 551.656 517.362 551.392 517.934 551.167 cv
518.482 550.925 519.157 550.695 519.655 550.409 cv
519.773 550.346 519.896 550.28 520.016 550.216 cv
520.89 550.572 522.615 551.611 522.438 554.245 cv
521.937 561.746 505.982 565.904 491.225 566.009 cv
490.939 566.011 490.659 566.012 490.377 566.012 cv
469.365 566.011 459.043 560.363 458.35 555.047 cv
458.023 552.55 458.538 551.544 458.874 551.167 cv
459.284 550.707 459.863 550.709 459.836 550.707 cv
459.884 550.71 459.93 550.702 459.977 550.701 cv
460.169 550.791 460.362 550.88 460.553 550.968 cv
461.136 551.22 461.751 551.457 462.327 551.691 cv
463.478 552.114 464.551 552.491 465.591 552.78 cv
467.648 553.412 469.502 553.778 471.042 554.028 cv
472.595 554.246 473.823 554.366 474.688 554.354 cv
475.544 554.367 476 554.375 476 554.375 cv
476.867 554.388 477.614 553.727 477.689 552.849 cv
477.768 551.932 477.087 551.124 476.169 551.046 cv
476 551.031 li
476 551.031 475.606 550.998 474.869 550.935 cv
474.139 550.904 473.045 550.709 471.658 550.474 cv
470.273 550.178 468.582 549.805 466.683 549.194 cv
465.729 548.916 464.729 548.533 463.696 548.159 cv
463.197 547.955 462.685 547.745 462.16 547.53 cv
461.884 547.401 461.604 547.271 461.321 547.139 cv
460.931 546.956 li
460.903 546.941 460.877 546.928 460.85 546.914 cv
460.78 546.877 460.648 546.799 460.558 546.748 cv
458.477 545.691 456.398 544.06 454.374 542.168 cv
453.342 541.237 452.393 540.152 451.404 539.066 cv
450.473 537.923 449.511 536.759 448.672 535.523 cv
448.013 534.598 li
447.368 533.573 li
446.72 532.542 li
446.425 532.072 li
446.122 531.547 li
445.306 530.147 444.506 528.718 443.727 527.265 cv
442.17 524.357 440.699 521.35 439.396 518.284 cv
436.813 512.162 434.871 505.738 434.54 499.709 cv
434.373 496.8 434.631 493.806 435.348 491.232 cv
436.044 488.628 437.138 486.305 438.443 484.367 cv
439.752 482.428 441.261 480.876 442.729 479.676 cv
444.205 478.479 445.645 477.647 446.857 477.033 cv
447.475 476.753 448.029 476.472 448.496 476.316 cv
448.757 476.22 448.983 476.13 449.203 476.048 cv
449.561 479.289 449.988 482.3 450.387 484.941 cv
450.896 488.303 451.46 491.064 451.899 492.984 cv
452.349 494.902 452.648 495.986 452.648 495.986 cv
452.834 496.656 453.452 497.146 454.18 497.135 cv
455.044 497.121 455.733 496.41 455.721 495.547 cv
455.721 495.547 455.703 494.4 455.553 492.422 cv
455.396 490.444 455.062 487.646 454.577 484.321 cv
454.098 480.996 453.576 477.123 453.222 472.983 cv
452.879 468.851 452.69 464.43 453.067 460.146 cv
453.253 458.008 453.576 455.904 454.154 453.974 cv
454.423 452.998 454.794 452.094 455.192 451.235 cv
455.4 450.824 455.635 450.394 455.854 450.038 cv
456.084 449.706 456.251 449.391 456.638 448.951 cv
457.782 447.583 459.221 446.418 460.679 445.613 cv
462.146 444.795 463.662 444.275 465.084 444.045 cv
466.505 443.817 467.83 443.831 468.935 444.064 cv
470.027 444.316 470.962 444.628 471.62 445.06 cv
471.997 445.241 472.2 445.438 472.425 445.585 cv
472.537 445.67 472.628 445.71 472.739 445.81 cv
472.823 445.892 472.896 445.962 472.969 446.033 cv
473.009 446.941 473.052 447.825 473.11 448.683 cv
473.349 452.032 473.504 454.977 473.726 457.359 cv
473.939 459.74 474.148 461.607 474.41 462.869 cv
474.659 464.132 474.864 464.798 474.864 464.798 cv
475.049 465.392 475.572 465.854 476.229 465.924 cv
477.112 466.019 477.905 465.38 477.999 464.497 cv
477.999 464.497 478.075 463.803 478.083 462.516 cv
478.103 461.228 477.958 459.354 477.721 456.976 cv
477.508 454.597 477.369 451.74 477.145 448.447 cv
477.083 447.521 477.041 446.547 477.001 445.549 cv
477.04 445.294 477.029 445.035 476.969 444.783 cv
476.948 444.252 476.928 443.729 476.902 443.183 cv
476.812 441.325 476.744 439.377 476.718 437.352 cv
476.648 433.254 476.573 428.815 476.494 424.12 cv
476.418 419.444 476.373 414.537 476.749 409.546 cv
477.101 404.558 477.926 399.466 479.72 394.718 cv
480.216 393.557 480.684 392.375 481.313 391.283 cv
481.753 390.445 li
481.8 390.355 li
481.8 390.355 481.801 390.353 481.801 390.354 cv
481.835 390.3 li
481.972 390.086 li
482.245 389.656 li
482.721 389.018 li
483.28 388.367 li
484.844 386.679 486.946 385.455 489.06 385.158 cv
490.114 385.007 491.163 385.088 492.151 385.408 cv
492.338 385.467 li
492.431 385.496 li
492.478 385.51 li
492.469 385.506 492.473 385.507 492.481 385.51 cv
492.869 385.687 li
493.799 386.112 li
494.03 386.219 li
494.189 386.327 li
494.511 386.537 li
494.724 386.684 494.946 386.791 495.16 386.957 cv
496.928 388.305 498.167 390.197 498.776 392.496 cv
499.437 394.765 499.581 397.291 499.569 399.827 cv
499.56 402.363 499.379 404.966 499.298 407.56 cv
498.955 417.876 499.102 427.466 499.288 435.683 cv
499.492 443.898 499.771 450.737 500.012 455.525 cv
500.131 457.92 500.359 459.795 500.509 461.076 cv
500.604 461.718 500.678 462.211 500.728 462.542 cv
500.759 462.715 500.783 462.846 500.799 462.934 cv
500.81 462.994 500.817 463.04 500.822 463.07 cv
500.834 463.141 500.843 463.193 500.849 463.229 cv
500.859 463.278 500.868 463.314 500.874 463.339 cv
500.891 463.392 500.904 463.438 500.917 463.477 cv
500.987 463.588 500.947 463.752 501.438 464.192 cv
502.274 464.078 503.027 463.976 503.697 463.884 cv
503.793 463.69 503.877 463.521 503.948 463.376 cv
503.963 463.317 503.975 463.268 503.983 463.229 cv
503.991 463.181 503.995 463.157 503.995 463.157 cv
504.025 462.946 504.011 462.74 503.962 462.547 cv
503.967 462.567 503.973 462.591 503.981 462.626 cv
503.985 462.65 503.992 462.688 504.001 462.737 cv
504.005 462.746 504.006 462.717 504.008 462.685 cv
504.013 462.604 504.02 462.485 504.028 462.328 cv
504.038 461.999 504.054 461.512 504.073 460.875 cv
504.078 459.599 504.11 457.723 504.008 455.34 cv
503.876 452.192 503.711 448.136 503.564 443.398 cv
503.645 443.342 503.726 443.285 503.799 443.216 cv
503.82 443.195 li
503.82 443.195 503.942 443.079 504.171 442.861 cv
504.22 442.821 504.311 442.716 504.344 442.71 cv
504.372 442.712 504.398 442.711 504.424 442.706 cv
504.448 442.7 504.471 442.689 504.492 442.67 cv
504.525 442.647 504.65 442.608 504.731 442.574 cv
504.908 442.495 505.119 442.412 505.398 442.352 cv
505.652 442.271 505.961 442.214 506.302 442.164 cv
506.971 442.049 507.789 442.013 508.684 442.021 cv
509.582 442.061 510.569 442.128 511.59 442.332 cv
512.606 442.522 513.682 442.776 514.687 443.19 cv
514.949 443.278 515.191 443.395 515.433 443.514 cv
515.675 443.631 515.931 443.737 516.144 443.883 cv
516.358 444.024 516.615 444.139 516.804 444.298 cv
517.316 444.689 li
518.025 445.393 li
518.381 445.745 li
518.613 446.056 li
519.091 446.663 li
519.249 446.882 519.397 447.149 519.553 447.39 cv
520.185 448.363 520.657 449.474 521.081 450.589 cv
521.458 451.732 521.784 452.889 521.995 454.055 cv
522.108 454.634 522.214 455.207 522.281 455.78 cv
522.368 456.348 522.433 456.91 522.479 457.462 cv
522.592 458.562 522.649 459.615 522.682 460.595 cv
522.751 462.554 522.703 464.204 522.818 465.378 cv
522.91 466.549 523.081 467.23 523.081 467.23 cv
523.218 467.766 523.621 468.224 524.188 468.4 cv
525.056 468.671 525.979 468.188 526.25 467.319 cv
526.255 467.305 li
526.255 467.305 526.462 466.64 526.601 465.454 cv
526.77 464.271 526.776 462.555 526.731 460.474 cv
526.711 459.513 526.663 458.465 526.572 457.361 cv
526.723 457.35 526.879 457.338 527.065 457.324 cv
527.293 457.308 527.547 457.288 527.826 457.268 cv
528.108 457.245 528.313 457.3 528.589 457.311 cv
529.116 457.35 529.72 457.35 530.432 457.547 cv
531.155 457.642 531.878 457.959 532.684 458.25 cv
533.059 458.457 533.449 458.672 533.854 458.896 cv
534.243 459.148 534.619 459.461 535.027 459.748 cv
536.59 461.02 537.997 462.992 539.147 465.412 cv
539.708 466.636 540.213 467.962 540.648 469.395 cv
540.754 469.758 540.861 470.124 540.969 470.493 cv
541.114 471.016 li
541.117 471.03 li
541.133 471.104 li
541.165 471.253 li
541.229 471.55 li
541.397 472.344 541.569 473.149 541.744 473.967 cv
541.912 475.539 542.219 477.053 542.303 478.799 cv
542.368 479.652 542.435 480.515 542.501 481.385 cv
542.548 482.26 542.558 483.15 542.588 484.044 cv
542.608 484.939 542.652 485.839 542.654 486.75 cv
542.643 487.662 542.631 488.581 542.619 489.505 cv
cp
503.424 461.705 mo
503.412 461.694 503.398 461.686 503.386 461.676 cv
503.389 461.676 503.392 461.675 503.395 461.675 cv
503.407 461.687 503.412 461.693 503.424 461.705 cv
cp
501.136 461.983 mo
501.14 461.982 501.144 461.982 501.147 461.981 cv
501.137 461.996 501.125 462.011 501.115 462.025 cv
501.123 462.01 501.128 461.999 501.136 461.983 cv
cp
500.851 462.639 mo
500.859 462.6 500.871 462.55 500.885 462.491 cv
500.89 462.482 500.896 462.469 500.9 462.46 cv
500.875 462.541 500.852 462.623 500.839 462.71 cv
500.839 462.71 500.843 462.687 500.851 462.639 cv
cp
546.755 481.149 mo
546.684 480.233 546.612 479.325 546.543 478.428 cv
546.481 477.535 546.405 476.644 546.261 475.726 cv
546.132 474.819 546.006 473.925 545.881 473.042 cv
545.699 472.225 545.521 471.418 545.344 470.624 cv
545.186 469.93 li
545.015 469.337 li
544.896 468.938 544.776 468.544 544.658 468.152 cv
544.166 466.578 543.578 465.06 542.91 463.636 cv
541.538 460.803 539.772 458.312 537.633 456.589 cv
537.077 456.187 536.555 455.775 536.013 455.433 cv
535.444 455.127 534.896 454.832 534.37 454.549 cv
533.252 454.124 532.223 453.725 531.248 453.585 cv
530.304 453.346 529.382 453.317 528.588 453.285 cv
528.204 453.275 527.797 453.236 527.52 453.262 cv
527.24 453.284 526.986 453.306 526.759 453.324 cv
526.488 453.347 526.268 453.365 526.074 453.382 cv
526.068 453.352 526.064 453.321 526.059 453.291 cv
525.833 451.968 525.475 450.602 525.033 449.223 cv
524.533 447.857 523.974 446.461 523.141 445.168 cv
522.93 444.844 522.746 444.521 522.512 444.197 cv
521.736 443.225 li
521.343 442.749 li
520.986 442.396 li
520.275 441.695 li
520.088 441.518 li
519.966 441.423 li
519.723 441.234 li
519.233 440.863 li
518.909 440.61 518.567 440.443 518.236 440.234 cv
517.904 440.022 517.564 439.875 517.229 439.715 cv
516.894 439.552 516.56 439.396 516.224 439.281 cv
514.888 438.742 513.571 438.434 512.315 438.204 cv
511.059 437.98 509.854 437.915 508.735 437.892 cv
507.61 437.902 506.573 437.968 505.626 438.145 cv
505.155 438.225 504.711 438.316 504.286 438.453 cv
503.989 438.528 503.706 438.633 503.433 438.745 cv
503.407 437.717 503.382 436.667 503.359 435.59 cv
503.197 427.421 503.081 417.876 503.449 407.711 cv
503.535 405.186 503.727 402.588 503.747 399.851 cv
503.761 397.128 503.644 394.262 502.817 391.345 cv
502.074 388.439 500.276 385.503 497.683 383.566 cv
497.359 383.317 496.978 383.102 496.622 382.873 cv
496.077 382.541 li
495.804 382.377 li
495.571 382.27 li
494.643 381.842 li
494.178 381.627 li
493.913 381.515 494.062 381.582 493.983 381.55 cv
493.908 381.525 li
493.758 381.475 li
493.457 381.377 li
491.852 380.848 490.109 380.715 488.462 380.95 cv
485.141 381.432 482.3 383.206 480.175 385.49 cv
479.406 386.389 li
479.161 386.719 478.888 387.078 478.676 387.392 cv
478.404 387.821 li
478.268 388.036 li
478.159 388.212 li
478.096 388.332 li
477.59 389.293 li
476.874 390.558 476.345 391.889 475.792 393.205 cv
473.795 398.545 472.956 404.026 472.6 409.242 cv
472.224 414.473 472.289 419.484 472.38 424.195 cv
472.474 428.891 472.563 433.33 472.644 437.428 cv
472.663 438.673 472.702 439.871 472.748 441.046 cv
471.898 440.635 470.893 440.293 469.769 440.023 cv
468.189 439.665 466.366 439.607 464.45 439.878 cv
462.535 440.156 460.521 440.787 458.599 441.842 cv
456.67 442.905 454.865 444.329 453.289 446.191 cv
452.972 446.542 452.57 447.131 452.198 447.686 cv
451.85 448.238 451.566 448.76 451.282 449.314 cv
450.755 450.421 450.293 451.563 449.963 452.723 cv
449.263 455.044 448.881 457.416 448.686 459.765 cv
448.346 463.963 448.502 468.091 448.81 471.972 cv
448.739 471.993 448.682 472.01 448.604 472.033 cv
447.857 472.262 446.5 472.749 445.092 473.437 cv
443.651 474.16 441.944 475.147 440.194 476.563 cv
438.453 477.981 436.663 479.818 435.111 482.111 cv
433.563 484.4 432.266 487.143 431.453 490.187 cv
430.627 493.257 430.352 496.479 430.545 499.931 cv
430.949 506.669 433.068 513.446 435.779 519.824 cv
437.149 523.016 438.681 526.12 440.296 529.11 cv
441.104 530.604 441.931 532.071 442.773 533.505 cv
443.086 534.043 li
443.443 534.61 li
444.096 535.64 li
444.743 536.662 li
445.477 537.692 li
447.411 540.465 449.499 542.854 451.749 544.957 cv
453.126 546.233 454.535 547.389 455.987 548.398 cv
454.508 549.972 453.968 552.382 454.383 555.564 cv
455.299 562.583 465.237 570.013 490.332 570.012 cv
490.636 570.012 490.945 570.011 491.253 570.009 cv
511.683 569.864 525.819 563.637 526.429 554.513 cv
526.642 551.35 525.332 549.219 523.761 547.883 cv
524.688 547.253 525.633 546.586 526.583 545.83 cv
528.981 543.953 531.42 541.67 533.653 538.96 cv
535.891 536.255 537.912 533.131 539.605 529.719 cv
541.269 526.286 542.57 522.594 543.598 518.751 cv
543.828 517.775 544.061 516.795 544.293 515.813 cv
544.531 514.825 544.648 513.899 544.833 512.937 cv
545.085 511.503 li
545.147 511.144 li
545.187 510.902 li
545.209 510.72 li
545.302 509.987 li
545.669 507.056 li
546.03 504.123 li
546.287 501.185 li
546.373 500.206 546.458 499.23 546.543 498.257 cv
546.615 497.283 546.646 496.308 546.7 495.338 cv
546.804 493.398 546.901 491.475 546.894 489.565 cv
546.904 488.611 546.914 487.664 546.925 486.723 cv
546.921 485.781 546.874 484.843 546.852 483.914 cv
546.818 482.984 546.806 482.063 546.755 481.149 cv
cp
0 0 0 rgb
f
482.874 534.059 mo
482.874 534.059 482.681 533.394 482.342 532.23 cv
482.174 531.646 482.051 530.863 481.864 530.007 cv
481.661 529.156 481.561 528.123 481.384 527.035 cv
481.198 525.947 481.111 524.723 480.957 523.453 cv
480.813 522.18 480.731 520.815 480.608 519.416 cv
480.409 516.604 480.258 513.591 480.16 510.572 cv
479.966 504.534 479.962 498.477 480.036 493.946 cv
480.061 492.815 480.084 491.778 480.104 490.859 cv
480.136 489.954 480.164 489.165 480.188 488.516 cv
480.225 487.921 480.226 487.506 480.266 487.136 cv
480.3 486.78 480.317 486.591 480.317 486.591 cv
480.329 486.461 li
480.33 486.448 480.332 486.437 480.332 486.424 cv
480.434 485.057 479.407 483.865 478.04 483.765 cv
476.672 483.663 475.481 484.689 475.38 486.058 cv
475.38 486.058 475.366 486.247 475.34 486.603 cv
475.31 486.942 475.295 487.575 475.268 488.311 cv
475.256 488.992 475.243 489.819 475.228 490.769 cv
475.226 491.705 475.224 492.761 475.222 493.913 cv
475.237 498.515 475.362 504.636 475.681 510.764 cv
475.841 513.827 476.057 516.893 476.317 519.77 cv
476.473 521.21 476.583 522.599 476.76 523.922 cv
476.946 525.246 477.06 526.489 477.278 527.65 cv
477.49 528.812 477.614 529.864 477.855 530.817 cv
478.081 531.769 478.228 532.585 478.438 533.277 cv
478.876 534.662 479.126 535.453 479.126 535.453 cv
479.452 536.483 480.544 537.071 481.586 536.768 cv
482.644 536.459 483.252 535.352 482.943 534.294 cv
482.874 534.059 li
cp
f
502.533 485.758 mo
502.493 485.4 502.472 485.21 502.472 485.21 cv
502.471 485.196 502.467 485.17 502.465 485.155 cv
502.281 483.773 501.011 482.803 499.629 482.986 cv
498.247 483.171 497.275 484.441 497.46 485.823 cv
497.528 486.335 li
497.528 486.335 497.554 486.524 497.601 486.879 cv
497.624 487.189 497.586 487.467 497.62 487.923 cv
497.654 489.228 497.687 491.112 497.687 493.396 cv
497.691 497.955 497.609 504.059 497.416 510.149 cv
497.322 513.195 497.19 516.237 497.044 519.084 cv
496.891 521.931 496.703 524.576 496.506 526.831 cv
496.389 527.949 496.282 528.976 496.187 529.884 cv
496.063 530.774 495.955 531.551 495.866 532.189 cv
495.625 533.39 495.486 534.076 495.486 534.076 cv
495.443 534.293 li
495.231 535.352 495.902 536.392 496.961 536.631 cv
498.036 536.874 499.104 536.198 499.348 535.123 cv
499.348 535.123 499.53 534.313 499.851 532.895 cv
499.961 532.21 500.096 531.378 500.25 530.424 cv
500.369 529.48 500.504 528.415 500.651 527.254 cv
500.905 524.939 501.155 522.246 501.374 519.365 cv
501.585 516.484 501.785 513.413 501.947 510.343 cv
502.276 504.202 502.493 498.063 502.59 493.441 cv
502.641 491.134 502.649 489.192 502.644 487.818 cv
502.622 486.938 502.572 486.161 502.533 485.758 cv
cp
f
524.9 487.124 mo
524.882 486.808 524.842 486.636 524.822 486.446 cv
524.775 486.095 524.751 485.908 524.751 485.908 cv
524.748 485.893 524.744 485.864 524.742 485.849 cv
524.522 484.451 523.212 483.495 521.813 483.715 cv
520.416 483.934 519.46 485.244 519.68 486.643 cv
519.694 486.74 li
519.694 486.74 519.724 486.928 519.779 487.277 cv
519.799 487.439 519.857 487.696 519.863 487.894 cv
519.871 488.089 519.88 488.313 519.89 488.564 cv
519.897 488.69 519.906 488.823 519.914 488.962 cv
519.916 489.133 519.917 489.311 519.918 489.497 cv
519.92 489.874 519.922 490.282 519.924 490.718 cv
519.904 491.602 519.88 492.606 519.821 493.707 cv
519.697 495.912 519.494 498.498 519.154 501.261 cv
519.009 502.645 518.773 504.064 518.582 505.514 cv
518.333 506.952 518.117 508.424 517.826 509.878 cv
517.534 511.331 517.265 512.791 516.912 514.203 cv
516.746 514.912 516.58 515.615 516.417 516.311 cv
516.229 516.996 516.043 517.674 515.859 518.341 cv
515.518 519.686 515.084 520.939 514.699 522.143 cv
514.34 523.359 513.859 524.436 513.484 525.467 cv
513.121 526.507 512.651 527.375 512.3 528.186 cv
512.115 528.586 511.942 528.96 511.782 529.306 cv
511.598 529.633 511.429 529.934 511.275 530.205 cv
510.666 531.295 510.317 531.917 510.317 531.917 cv
510.222 532.087 li
509.696 533.028 510.014 534.224 510.946 534.777 cv
511.895 535.34 513.12 535.027 513.683 534.079 cv
513.683 534.079 514.09 533.393 514.803 532.191 cv
514.98 531.89 515.178 531.557 515.392 531.193 cv
515.576 530.82 515.774 530.417 515.987 529.986 cv
516.392 529.118 516.929 528.159 517.342 527.065 cv
517.77 525.977 518.313 524.814 518.723 523.546 cv
519.159 522.284 519.649 520.958 520.04 519.563 cv
520.248 518.867 520.46 518.16 520.674 517.445 cv
520.861 516.725 521.051 515.995 521.242 515.26 cv
521.644 513.792 521.96 512.285 522.298 510.782 cv
522.635 509.278 522.895 507.763 523.186 506.275 cv
523.421 504.779 523.697 503.314 523.882 501.883 cv
524.3 499.027 524.575 496.343 524.76 494.023 cv
524.849 492.862 524.899 491.789 524.943 490.832 cv
524.952 490.348 524.961 489.894 524.969 489.474 cv
524.972 489.261 524.975 489.057 524.977 488.861 cv
524.969 488.636 524.961 488.421 524.954 488.216 cv
524.934 487.807 524.916 487.441 524.9 487.124 cv
cp
f
363.929 293.505 mo
357.861 290.053 354.582 293.646 354.582 293.646 cv
354.502 293.856 li
354.497 293.786 354.496 293.719 354.49 293.649 cv
354.012 287.647 350.881 280.261 345.86 273.654 cv
338.07 263.399 314.902 247.765 302.295 245.48 cv
291.72 243.565 285.097 246.691 278.748 254.651 cv
278.753 254.654 li
277.909 254.354 277.06 254.058 276.197 253.777 cv
260.554 248.687 252.164 250.021 248.567 256.765 cv
246.837 260.007 245.05 265.203 248.988 270.312 cv
248.73 270.422 248.488 270.547 248.243 270.669 cv
247.988 269.688 li
237.998 269.851 231.841 279.354 235.369 288.543 cv
235.989 290.159 237.395 291.959 239.435 293.769 cv
239.524 294.721 239.637 295.666 239.774 296.595 cv
239.08 295.222 li
235.619 296.228 231.5 304.742 234.162 310.82 cv
236.173 315.412 239.805 318.634 244.037 320.93 cv
243.44 320.813 li
239.125 329.484 246.095 336.861 249.724 339.668 cv
255.351 344.021 270.787 350.848 288.328 355.196 cv
311.509 360.943 325.834 354.818 333.1 349.519 cv
333.17 349.467 333.252 349.409 333.337 349.35 cv
333.214 349.672 li
333.214 349.672 333.434 355.09 338.386 356.643 cv
345.678 358.929 355.55 349.68 362.737 331.566 cv
371.572 309.307 369.274 296.548 363.929 293.505 cv
cp
1 1 1 rgb
f
267.125 279.307 mo
267.144 279.308 267.164 279.311 267.18 279.308 cv
267.393 279.332 267.402 279.346 267.412 279.345 cv
267.316 279.322 267.221 279.312 267.125 279.307 cv
cp
266.825 279.32 mo
266.917 279.306 266.992 279.301 267.045 279.305 cv
266.971 279.305 266.897 279.31 266.825 279.32 cv
cp
266.63 279.363 mo
266.655 279.355 266.674 279.351 266.697 279.345 cv
266.674 279.35 266.652 279.357 266.63 279.363 cv
cp
266.235 279.523 mo
266.24 279.521 266.246 279.516 266.25 279.513 cv
266.264 279.507 266.271 279.506 266.284 279.5 cv
266.268 279.509 266.251 279.515 266.235 279.523 cv
cp
265.977 279.711 mo
266.017 279.673 266.054 279.652 266.094 279.623 cv
266.055 279.652 266.014 279.678 265.977 279.711 cv
cp
265.53 280.409 mo
265.542 280.375 265.551 280.343 265.565 280.309 cv
265.552 280.342 265.541 280.375 265.53 280.409 cv
cp
266.164 282.226 mo
266.202 282.251 266.243 282.274 266.284 282.297 cv
266.264 282.286 266.238 282.278 266.218 282.267 cv
266.197 282.253 266.184 282.239 266.164 282.226 cv
cp
265.896 282.006 mo
265.935 282.045 265.977 282.081 266.019 282.116 cv
266.004 282.103 265.982 282.09 265.968 282.078 cv
265.949 282.056 265.925 282.034 265.896 282.006 cv
cp
265.739 281.81 mo
265.775 281.862 265.811 281.914 265.853 281.96 cv
265.822 281.927 265.783 281.875 265.739 281.81 cv
cp
265.573 281.514 mo
265.599 281.573 265.627 281.632 265.659 281.688 cv
265.655 281.682 265.652 281.679 265.648 281.672 cv
265.627 281.629 265.601 281.576 265.573 281.514 cv
cp
265.496 281.271 mo
265.506 281.311 265.516 281.351 265.528 281.39 cv
265.516 281.354 265.506 281.313 265.496 281.271 cv
cp
265.459 281.045 mo
265.46 281.061 265.46 281.075 265.462 281.09 cv
265.46 281.076 265.46 281.06 265.459 281.045 cv
cp
265.457 280.738 mo
265.457 280.723 265.465 280.708 265.467 280.692 cv
265.463 280.717 265.459 280.742 265.457 280.767 cv
265.458 280.756 265.456 280.749 265.457 280.738 cv
cp
235.96 310.116 mo
235.921 310.035 li
235.919 310.029 li
235.904 309.982 li
235.841 309.796 li
235.436 308.833 235.305 307.749 235.282 306.695 cv
235.247 305.636 235.421 304.581 235.646 303.604 cv
235.862 302.619 236.217 301.723 236.562 300.916 cv
236.94 300.129 237.328 299.426 237.732 298.889 cv
237.926 298.607 238.118 298.366 238.307 298.173 cv
238.486 297.95 238.661 297.803 238.815 297.67 cv
238.884 297.613 238.981 297.508 239.014 297.498 cv
239.051 297.479 239.082 297.457 239.108 297.432 cv
239.135 297.408 239.157 297.381 239.178 297.354 cv
239.22 297.323 239.334 297.285 239.396 297.256 cv
239.686 297.136 239.84 297.072 239.84 297.072 cv
239.864 297.062 li
239.871 297.059 li
239.936 297.031 239.992 296.993 240.052 296.96 cv
240.154 297.036 240.256 297.117 240.358 297.191 cv
241.68 298.178 243.025 298.993 244.306 299.753 cv
245.601 300.482 246.845 301.125 248.01 301.679 cv
249.177 302.227 250.263 302.69 251.243 303.05 cv
252.216 303.43 253.099 303.662 253.809 303.896 cv
254.526 304.105 255.106 304.219 255.493 304.319 cv
255.884 304.405 256.093 304.45 256.093 304.45 cv
256.84 304.613 257.63 304.254 257.981 303.537 cv
258.393 302.694 258.043 301.677 257.2 301.266 cv
257.11 301.222 li
257.11 301.222 256.377 300.863 255.076 300.328 cv
254.434 300.045 253.653 299.702 252.758 299.308 cv
252.313 299.112 251.838 298.903 251.338 298.683 cv
250.844 298.453 250.324 298.21 249.782 297.958 cv
248.707 297.438 247.563 296.837 246.381 296.162 cv
245.22 295.461 243.998 294.711 242.836 293.829 cv
241.667 292.961 240.507 292.001 239.514 290.932 cv
239.017 290.399 238.559 289.845 238.165 289.279 cv
237.968 289.002 237.869 288.787 237.698 288.546 cv
237.441 287.981 li
237.339 287.756 li
237.337 287.75 li
237.317 287.687 li
237.278 287.558 li
236.784 286.21 236.545 284.803 236.482 283.417 cv
236.501 282.034 236.688 280.677 237.116 279.434 cv
237.589 278.218 238.139 277.056 238.921 276.14 cv
239.257 275.639 239.717 275.268 240.082 274.836 cv
240.529 274.492 240.915 274.098 241.359 273.817 cv
242.225 273.223 243.093 272.787 243.899 272.489 cv
244.306 272.359 244.692 272.206 245.038 272.113 cv
245.376 272.041 245.688 271.975 245.968 271.916 cv
246.115 271.887 246.227 271.845 246.382 271.829 cv
246.542 271.815 246.693 271.803 246.833 271.792 cv
247.055 271.773 247.242 271.757 247.409 271.743 cv
248.956 273.702 250.798 275.086 252.521 276.2 cv
253.518 276.893 254.535 277.384 255.484 277.901 cv
256.442 278.416 257.285 278.791 258.122 279.201 cv
259.771 279.99 261.237 280.633 262.474 281.113 cv
263.705 281.604 264.711 281.923 265.418 282.128 cv
265.771 282.232 266.05 282.309 266.251 282.353 cv
266.356 282.376 266.436 282.394 266.489 282.406 cv
266.515 282.412 266.535 282.416 266.548 282.418 cv
266.549 282.418 266.552 282.419 266.551 282.419 cv
266.521 282.409 266.497 282.392 266.468 282.381 cv
266.534 282.406 266.6 282.435 266.672 282.452 cv
266.682 282.451 266.691 282.465 266.906 282.489 cv
267.037 282.467 267.18 282.595 267.838 282.285 cv
268.167 282.136 268.612 281.58 268.634 281.061 cv
268.673 280.554 268.522 280.284 268.444 280.127 cv
268.259 279.819 268.185 279.786 268.125 279.721 cv
268.056 279.657 267.97 279.591 267.87 279.53 cv
267.77 279.47 267.653 279.416 267.53 279.376 cv
267.525 279.374 li
267.517 279.369 267.504 279.363 267.487 279.354 cv
267.453 279.337 267.403 279.311 267.338 279.276 cv
267.189 279.199 266.969 279.085 266.682 278.937 cv
266.079 278.622 265.195 278.159 264.07 277.571 cv
262.933 276.98 261.535 276.281 259.92 275.489 cv
259.134 275.093 258.218 274.668 257.391 274.205 cv
256.561 273.737 255.649 273.289 254.821 272.69 cv
253.111 271.569 251.381 270.16 250.24 268.37 cv
249.678 267.477 249.224 266.517 248.998 265.483 cv
248.788 264.447 248.749 263.353 248.926 262.219 cv
249.095 261.101 249.524 259.886 250.025 258.81 cv
250.141 258.541 250.34 258.184 250.494 257.874 cv
250.609 257.667 250.797 257.386 250.942 257.143 cv
251.084 256.878 251.271 256.658 251.456 256.435 cv
251.639 256.212 251.803 255.966 252.025 255.785 cv
252.808 254.944 253.804 254.336 254.923 253.894 cv
255.463 253.639 256.089 253.519 256.685 253.344 cv
257.322 253.251 257.934 253.083 258.604 253.058 cv
261.238 252.82 264.053 253.114 266.799 253.632 cv
267.488 253.746 268.173 253.901 268.855 254.063 cv
269.537 254.219 270.218 254.368 270.878 254.558 cv
271.544 254.74 272.206 254.92 272.863 255.1 cv
273.541 255.308 274.213 255.514 274.88 255.718 cv
277.437 256.542 279.944 257.451 282.282 258.377 cv
284.627 259.311 286.84 260.239 288.896 261.111 cv
290.958 261.973 292.845 262.782 294.588 263.402 cv
296.292 264.053 297.884 264.541 299.194 264.913 cv
299.85 265.121 300.421 265.246 300.916 265.341 cv
301.412 265.445 301.835 265.534 302.178 265.605 cv
302.866 265.735 303.234 265.804 303.234 265.804 cv
303.961 265.941 304.71 265.558 305.006 264.848 cv
305.345 264.033 304.96 263.097 304.145 262.758 cv
304.139 262.755 li
304.139 262.755 303.794 262.611 303.146 262.341 cv
302.514 262.079 301.496 261.723 300.366 261.218 cv
298.015 260.207 294.656 258.763 290.626 257.031 cv
288.576 256.152 286.332 255.202 283.929 254.235 cv
283.396 254.022 282.854 253.811 282.308 253.601 cv
282.614 253.27 282.954 252.921 283.353 252.538 cv
284.379 251.557 285.67 250.418 287.312 249.434 cv
288.95 248.447 290.942 247.639 293.26 247.248 cv
295.572 246.832 298.214 246.909 301.009 247.347 cv
301.535 247.429 li
301.8 247.47 li
301.866 247.48 li
301.896 247.485 li
301.976 247.504 li
302.346 247.59 302.718 247.676 303.092 247.764 cv
303.466 247.85 303.843 247.937 304.221 248.024 cv
304.58 248.123 304.905 248.242 305.252 248.35 cv
306.604 248.74 308.06 249.336 309.525 249.905 cv
312.435 251.16 315.392 252.637 318.329 254.287 cv
321.245 255.974 324.184 257.75 327.004 259.707 cv
329.832 261.648 332.608 263.675 335.196 265.823 cv
337.788 267.959 340.273 270.161 342.375 272.481 cv
342.939 273.04 343.379 273.653 343.878 274.229 cv
344.24 274.664 li
344.331 274.773 li
344.296 274.717 344.371 274.827 344.386 274.846 cv
344.561 275.088 li
344.792 275.411 345.022 275.731 345.252 276.051 cv
346.225 277.338 346.919 278.549 347.688 279.755 cv
349.135 282.249 350.269 284.721 351.132 287.055 cv
351.893 289.326 352.401 291.45 352.606 293.344 cv
352.56 293.647 352.591 293.956 352.684 294.249 cv
352.693 294.498 352.702 294.744 352.712 294.984 cv
352.731 295.48 352.75 295.958 352.768 296.417 cv
352.744 297.275 352.686 298.021 352.66 298.718 cv
352.486 300.104 352.44 301.241 352.314 301.971 cv
352.237 302.722 352.229 303.145 352.229 303.145 cv
352.224 303.349 li
352.214 303.882 352.506 304.398 353.017 304.649 cv
353.719 304.994 354.568 304.705 354.914 304.002 cv
354.914 304.002 355.121 303.581 355.448 302.75 cv
355.81 301.915 356.068 300.667 356.272 299.032 cv
356.316 298.206 356.383 297.266 356.406 296.289 cv
356.392 295.83 356.376 295.352 356.359 294.856 cv
356.358 294.821 356.357 294.783 356.355 294.748 cv
357.098 294.213 359.257 293.149 362.939 295.244 cv
366.895 297.495 369.61 308.829 360.878 330.829 cv
355.483 344.428 346.232 357.001 338.984 354.734 cv
336.438 353.936 335.608 351.676 335.34 350.428 cv
335.503 350.312 335.667 350.194 335.829 350.077 cv
337.836 348.569 339.463 347.023 340.529 345.562 cv
341.613 344.113 342.316 342.885 342.688 341.997 cv
343.084 341.124 343.257 340.646 343.257 340.646 cv
343.422 340.187 343.324 339.651 342.96 339.279 cv
342.451 338.761 341.619 338.752 341.101 339.261 cv
341.009 339.35 li
341.009 339.35 340.666 339.686 340.097 340.338 cv
339.544 341.002 338.7 341.932 337.619 343.064 cv
336.529 344.193 335.182 345.499 333.427 346.798 cv
332.504 347.453 331.443 348.189 330.443 348.863 cv
329.393 349.529 328.26 350.188 327.036 350.805 cv
324.589 352.034 321.79 353.1 318.727 353.883 cv
315.663 354.668 312.331 355.134 308.859 355.289 cv
305.389 355.432 301.771 355.321 298.123 354.809 cv
297.204 354.719 296.302 354.568 295.403 354.404 cv
294.496 354.239 293.608 354.116 292.678 353.917 cv
289.866 353.286 li
289.161 353.131 li
288.809 353.053 li
288.518 352.973 li
287.14 352.604 li
285.308 352.098 283.458 351.651 281.646 351.099 cv
279.835 350.538 278.033 349.979 276.244 349.426 cv
274.477 348.81 272.724 348.198 270.992 347.594 cv
269.284 346.932 267.596 346.278 265.937 345.635 cv
264.289 344.966 262.705 344.238 261.135 343.565 cv
259.588 342.854 258.116 342.093 256.658 341.395 cv
255.984 341.019 255.319 340.647 254.664 340.282 cv
254.008 339.926 253.361 339.578 252.711 339.109 cv
252.104 338.696 251.506 338.291 250.919 337.893 cv
250.389 337.475 249.874 337.039 249.398 336.583 cv
247.474 334.771 246.043 332.792 245.21 330.939 cv
244.356 329.086 244.083 327.372 244.146 325.985 cv
244.119 325.636 244.208 325.312 244.236 325.002 cv
244.28 324.697 244.294 324.391 244.378 324.165 cv
244.439 323.925 244.497 323.701 244.549 323.497 cv
244.569 323.41 244.589 323.328 244.608 323.247 cv
245.414 323.631 246.203 323.98 246.942 324.275 cv
247.916 324.659 248.813 324.993 249.624 325.231 cv
250.427 325.496 251.138 325.677 251.726 325.82 cv
252.899 326.103 253.58 326.207 253.58 326.207 cv
254.313 326.32 255.05 325.906 255.316 325.183 cv
255.619 324.356 255.196 323.442 254.371 323.139 cv
254.36 323.135 li
254.36 323.135 253.746 322.909 252.669 322.554 cv
251.6 322.178 250.067 321.675 248.294 320.947 cv
247.41 320.579 246.467 320.153 245.508 319.646 cv
244.548 319.144 243.56 318.573 242.608 317.901 cv
241.642 317.247 240.721 316.484 239.849 315.658 cv
239 314.812 238.183 313.909 237.518 312.907 cv
237.143 312.418 236.923 311.932 236.609 311.453 cv
236.176 310.563 li
235.96 310.116 li
cp
237.267 318.369 mo
238.316 319.338 239.412 320.213 240.53 320.95 cv
240.706 321.07 240.882 321.168 241.059 321.281 cv
241.054 321.291 241.051 321.298 241.047 321.308 cv
241.002 321.411 240.955 321.521 240.905 321.637 cv
240.859 321.785 240.811 321.941 240.76 322.104 cv
240.665 322.436 240.56 322.796 240.446 323.186 cv
240.315 323.583 240.278 323.982 240.208 324.419 cv
240.156 324.854 240.046 325.313 240.06 325.811 cv
239.928 327.783 240.316 330.227 241.412 332.649 cv
242.487 335.087 244.216 337.483 246.473 339.655 cv
247.035 340.203 247.641 340.729 248.286 341.247 cv
248.406 341.345 li
248.615 341.493 li
248.849 341.654 li
249.32 341.979 li
249.635 342.195 249.953 342.414 250.274 342.635 cv
250.884 343.086 251.623 343.507 252.373 343.933 cv
253.118 344.358 253.874 344.791 254.641 345.229 cv
256.16 345.979 257.714 346.772 259.323 347.518 cv
260.945 348.218 262.589 348.975 264.287 349.667 cv
265.994 350.33 267.721 351.028 269.484 351.69 cv
271.261 352.313 273.059 352.943 274.871 353.578 cv
276.704 354.149 278.551 354.725 280.406 355.302 cv
282.263 355.871 284.16 356.333 286.039 356.854 cv
287.452 357.235 li
287.858 357.343 li
288.211 357.421 li
288.915 357.578 li
291.731 358.195 li
292.679 358.392 293.689 358.533 294.661 358.702 cv
295.642 358.874 296.619 359.028 297.589 359.117 cv
301.458 359.63 305.334 359.729 309.071 359.546 cv
312.811 359.352 316.427 358.821 319.773 357.938 cv
323.12 357.058 326.197 355.863 328.901 354.479 cv
329.954 353.939 330.933 353.366 331.872 352.785 cv
332.633 354.869 334.269 357.447 337.787 358.551 cv
338.746 358.852 339.724 358.999 340.716 358.999 cv
348.886 358.999 357.972 348.998 364.597 332.305 cv
374.327 307.787 370.852 295.144 364.918 291.767 cv
360.944 289.507 357.886 289.784 355.872 290.547 cv
355.574 289.032 355.162 287.461 354.625 285.833 cv
353.692 283.256 352.472 280.563 350.926 277.864 cv
350.101 276.537 349.244 275.084 348.325 273.856 cv
348.098 273.536 347.868 273.213 347.639 272.89 cv
347.466 272.646 li
347.343 272.479 li
347.243 272.357 li
346.842 271.867 li
346.297 271.226 345.784 270.52 345.19 269.923 cv
342.914 267.386 340.341 265.085 337.656 262.845 cv
334.978 260.596 332.131 258.492 329.226 256.473 cv
326.33 254.439 323.311 252.588 320.299 250.824 cv
317.264 249.096 314.186 247.532 311.102 246.182 cv
309.525 245.56 308.012 244.921 306.343 244.428 cv
305.939 244.302 305.526 244.159 305.137 244.051 cv
304.758 243.961 304.382 243.872 304.009 243.783 cv
303.635 243.695 303.263 243.608 302.894 243.521 cv
302.755 243.489 li
302.513 243.447 li
302.218 243.401 li
301.63 243.311 li
298.515 242.833 295.421 242.734 292.58 243.249 cv
289.739 243.733 287.219 244.767 285.229 245.98 cv
283.227 247.193 281.728 248.53 280.559 249.654 cv
279.977 250.216 279.47 250.739 279.047 251.223 cv
278.727 251.569 278.472 251.859 278.252 252.119 cv
277.58 251.887 276.897 251.658 276.201 251.431 cv
275.535 251.224 274.863 251.016 274.187 250.805 cv
273.478 250.608 272.764 250.41 272.046 250.211 cv
271.326 250.002 270.597 249.838 269.864 249.668 cv
269.134 249.493 268.397 249.324 267.64 249.194 cv
264.641 248.625 261.481 248.248 258.177 248.529 cv
257.358 248.565 256.515 248.764 255.687 248.899 cv
254.854 249.135 254.021 249.327 253.21 249.699 cv
251.59 250.359 250.018 251.355 248.807 252.67 cv
248.474 252.972 248.219 253.331 247.945 253.675 cv
247.67 254.02 247.4 254.366 247.193 254.741 cv
246.968 255.122 246.755 255.446 246.529 255.875 cv
246.366 256.213 246.213 256.487 246.043 256.876 cv
245.35 258.406 244.847 259.9 244.601 261.547 cv
244.361 263.175 244.423 264.859 244.778 266.446 cv
244.899 266.968 245.065 267.466 245.25 267.953 cv
244.88 268.023 244.486 268.097 244.055 268.179 cv
243.557 268.303 243.056 268.484 242.501 268.658 cv
241.412 269.043 240.22 269.613 239.025 270.409 cv
238.417 270.79 237.865 271.302 237.257 271.781 cv
236.733 272.349 236.107 272.868 235.634 273.544 cv
234.569 274.809 233.78 276.383 233.143 278.055 cv
232.551 279.753 232.276 281.603 232.259 283.479 cv
232.323 285.351 232.646 287.239 233.293 289.007 cv
233.349 289.175 li
233.376 289.259 li
233.39 289.301 li
233.456 289.456 li
233.586 289.737 li
233.848 290.301 li
234.116 290.761 234.402 291.281 234.686 291.674 cv
235.239 292.46 235.837 293.167 236.457 293.823 cv
236.572 293.944 236.69 294.054 236.807 294.171 cv
236.581 294.327 236.364 294.491 236.211 294.643 cv
235.923 294.892 235.614 295.175 235.345 295.5 cv
235.046 295.817 234.766 296.173 234.496 296.563 cv
233.928 297.334 233.426 298.249 232.943 299.271 cv
232.501 300.305 232.063 301.441 231.789 302.705 cv
231.516 303.964 231.314 305.326 231.373 306.775 cv
231.423 308.214 231.633 309.747 232.257 311.218 cv
232.361 311.496 li
232.388 311.565 li
232.451 311.702 li
232.506 311.813 li
232.728 312.257 li
233.179 313.152 li
233.581 313.794 233.958 314.515 234.403 315.084 cv
235.24 316.298 236.238 317.376 237.267 318.369 cv
cp
0 0 0 rgb
f
293.791 286.392 mo
293.799 286.395 li
293.799 286.395 294.482 286.668 295.678 287.147 cv
296.879 287.621 298.582 288.311 300.602 289.163 cv
302.629 290.009 304.994 290.995 307.528 292.052 cv
308.799 292.572 310.085 293.176 311.406 293.753 cv
312.725 294.339 314.064 294.935 315.403 295.53 cv
316.743 296.125 318.083 296.72 319.402 297.306 cv
320.715 297.903 322.035 298.441 323.252 299.067 cv
325.713 300.275 328.01 301.403 329.979 302.37 cv
333.918 304.304 336.545 305.593 336.545 305.593 cv
336.651 305.646 li
337.62 306.12 338.798 305.738 339.301 304.775 cv
339.812 303.798 339.434 302.59 338.455 302.079 cv
338.455 302.079 335.829 300.706 331.89 298.647 cv
329.918 297.617 327.619 296.416 325.155 295.129 cv
323.932 294.461 322.622 293.888 321.312 293.253 cv
319.997 292.628 318.661 291.994 317.325 291.36 cv
315.989 290.726 314.653 290.092 313.338 289.467 cv
312.019 288.851 310.737 288.21 309.467 287.652 cv
306.933 286.52 304.566 285.463 302.539 284.557 cv
300.512 283.641 298.821 282.906 297.637 282.405 cv
296.454 281.896 295.777 281.605 295.777 281.605 cv
295.761 281.599 295.733 281.587 295.717 281.58 cv
294.389 281.048 292.88 281.694 292.349 283.022 cv
291.816 284.352 292.462 285.859 293.791 286.392 cv
cp
f
283.993 305.11 mo
283.993 305.11 284.725 305.419 286.006 305.958 cv
287.305 306.509 289.15 307.233 291.364 308.106 cv
292.469 308.55 293.681 308.982 294.954 309.466 cv
296.232 309.935 297.567 310.467 298.972 310.946 cv
300.373 311.438 301.82 311.947 303.291 312.464 cv
304.756 312.995 306.265 313.477 307.77 313.967 cv
309.274 314.457 310.779 314.947 312.261 315.43 cv
313.739 315.919 315.221 316.322 316.64 316.756 cv
318.063 317.178 319.438 317.586 320.741 317.973 cv
322.04 318.375 323.286 318.696 324.435 318.998 cv
329.025 320.211 332.086 321.02 332.086 321.02 cv
333.131 321.295 334.213 320.688 334.517 319.646 cv
334.825 318.585 334.216 317.476 333.155 317.167 cv
333.092 317.148 li
333.092 317.148 330.092 316.274 325.593 314.965 cv
324.468 314.639 323.247 314.293 321.974 313.863 cv
320.697 313.448 319.351 313.012 317.957 312.56 cv
316.567 312.098 315.117 311.665 313.67 311.145 cv
312.22 310.632 310.747 310.111 309.274 309.59 cv
307.802 309.07 306.326 308.559 304.895 307.998 cv
303.457 307.453 302.043 306.916 300.674 306.396 cv
299.301 305.89 298 305.333 296.753 304.84 cv
295.513 304.333 294.328 303.877 293.255 303.415 cv
291.103 302.503 289.307 301.745 288.085 301.19 cv
286.844 300.631 286.135 300.312 286.135 300.312 cv
286.081 300.287 li
286.065 300.28 286.049 300.273 286.032 300.266 cv
284.695 299.703 283.154 300.331 282.591 301.669 cv
282.027 303.007 282.655 304.547 283.993 305.11 cv
cp
f
279.075 323.975 mo
279.075 323.975 279.242 324.067 279.555 324.241 cv
279.894 324.416 280.269 324.672 280.968 324.996 cv
281.64 325.303 282.515 325.752 283.397 326.083 cv
284.301 326.458 285.321 326.855 286.435 327.238 cv
288.661 328.037 291.266 328.839 294.07 329.617 cv
295.472 330.006 296.923 330.392 298.402 330.753 cv
299.877 331.137 301.388 331.462 302.893 331.817 cv
305.912 332.476 308.937 333.101 311.792 333.592 cv
314.642 334.107 317.318 334.504 319.619 334.813 cv
320.767 334.98 321.829 335.085 322.766 335.197 cv
323.702 335.313 324.523 335.393 325.201 335.448 cv
326.556 335.569 327.329 335.639 327.329 335.639 cv
328.409 335.735 329.376 334.95 329.495 333.867 cv
329.616 332.77 328.824 331.781 327.727 331.66 cv
327.671 331.654 li
327.671 331.654 326.924 331.571 325.617 331.427 cv
324.964 331.361 324.171 331.267 323.261 331.136 cv
322.352 331.008 321.324 330.887 320.207 330.699 cv
317.972 330.354 315.364 329.914 312.586 329.353 cv
309.804 328.815 306.854 328.144 303.916 327.44 cv
302.454 327.063 300.983 326.716 299.554 326.313 cv
298.118 325.932 296.716 325.528 295.365 325.123 cv
292.664 324.314 290.17 323.491 288.098 322.698 cv
287.05 322.314 286.121 321.93 285.311 321.574 cv
284.456 321.231 283.898 320.909 283.353 320.661 cv
282.837 320.426 282.339 320.088 282.043 319.93 cv
281.734 319.749 281.569 319.652 281.569 319.652 cv
281.537 319.634 li
281.526 319.628 281.515 319.621 281.504 319.615 cv
280.3 318.944 278.781 319.377 278.11 320.58 cv
277.439 321.784 277.872 323.304 279.075 323.975 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 16.0.0%%For: (Irina Mir) ()%%Title: (hands_gloves_dark.eps)%%CreationDate: 09/04/2016 12:48%%Canvassize: 16383%AI9_DataStream%Gb",KM*_ltoC2JU]L,p?`<2Wu^1P:c#iHF$!KYc2%*8L3>isE+s7BZ"G?)uM*d/82IT^mNUs`1Ih-F;lB@#Ss7\a0@=6_.PNIUBZ%]\Kgb]H$k4/M&M<XmF$oE=FfFV/@lfGBR2M;VZ0Q)q@EYI6X(u=fgdm(/OQU`S=g?[G(D<gSbl\B+'X`cc"dcV&F82>.%fe-W`E\%Ys\-HS$mc857X:dX:ClQ1h8i=F>O":1%`$NA0]nNcieia9F&%KK0))3-'7sF2<;['hEr1CT"n\PqCcNsr_2&6pZ#kj<U<['Fku*V%S?MrDkoXu9nStg<m9$r?8LsbEF":mLgh?h_D'"k/)W1J_n;mP1LCQS!Q@8NeBf>_m4pO*6j//=%h+d)WYeNgaa+aLM_"Ra5r(B:#%9_(JSCK?@afIS??]G6Q5[f9!M_7"ZP9Y4l8s,EiB:$*X6In\EVra(G2gs8-CMrhH[QZp-nfrt=G?:X&j$f1,Lj49]GV5#Ce!)R2R%rFM`D=7r6AZeO$)=mFLubhokF6*YPFG;NM^Wa2"_qmhf7Gh&o2MEg-%d_S[7XrfLW)@Dg",]Z)4YRjYClCgaPO_(+o@;;JI+$:"Y%&lPRu)XM3fghBb`.eWZu0pY\/Zmt0j:K<Jam9bV?Pq_l<7/pC.ol*!`\;iB'#D`,A.=V"l?LI,c\*E(&UBWO2f&&Aph7_YIe]*IE%c$_Lbkf:;03s>0Rn5VibY1*L8_CP4NGdpuFlCXZT)VsP^qJg"RBt`:]MK<^r;Q%pjX&mU6*.?@EDWR2.*m>Y3MC"6IIs5a1MO!>+%Z0:i<>&hjeW1PnRl2Qs>f)&38M<&Xah5YscX,U]uXb.>RjkRIWX#V'jDRES"[W2T?0Gc4roe/`s;[MjpQ3!ssPGXoko8%,/f>3gY%WLq1ReF%E?nc&7MRj\'+rFW=1-b3-Wl7[HB<@`A/m[%+BUC=K@>O7kpW>sO5D+C8tg,jTgRuD:#"H;-YD7$nAe(d6a;0?Q!Ira0R%CnT.(3r7Jd&(GggG(KpF_?Ts%C!ee\^$+%BHdFuP1\Q2noCGPSfK?:#L3532GLr&Wm6$@#ZZais<nas7T2Ld,@]NEV<TF%Mm7pp0%]XYMSE^`XD&[Ge\S,FGJ:?f,^3GK:5Q$DZ`K*=6;eFh,5m<:(O316F/XU2RCDZ@)rN6O%;Vq\*1^-a:Yp%a_6+dSHB*?F8Y1Uf>u%Kr%l@%lYWg^U<"]f(FO]Ik5[X'"-g!:]9CcrpWp?IcPbAAa\S+03<moHOJ"HjM?`G,<r*C0Nq>F(Z]>E@/YrX&^(mh*-jmpoOqYm%`kk'u&@Jk&XiO&T!-CT-6sr6`:ai#%-l**iVmOcL+9:C+^5rO3#Ti*a(BM8b/)1d]i7FTSn1DUWXn\U@!u#XI(T]&;oKGJF8KL%_%rBZ,f1=S/RF[b6&Y!TQ00M`*b*tD&-oQTT(6s<m]n'aW#\l<^(b9._=4T\;:qKgY`HlhhW/d^=bVi:7g1>\(>'\FQh??idfJVO+%%S`U=98;&KEoHIro=/(6(Qr@C;<mo1q\kRcs#T/[<L?$9NF2"CK$i2qZJ^`7sUsXkU_!+T!EVGLiG'CdKD&Vut$BKcq?9<79D^'[=%N%&_l)!-W.L($3GpE1%uN-TFDXB@uF,%kLCn3(;#&Zo`d2+[W[?P.2?Bd(9G"adu?aTr<'C`@WI7j+.A!W3ZEnluKn=-7EmB:;FU%Km!bc`fpW>N3.?IA(V@fb!+-/(CHs=.D^'@(jQ.g?#cM6#is-g93\2a$SFd(K`Q_s#_PA].G.d2W7#Jq$/\V!=_(_lhi0l31%^_7%92D=g_ifSDc6=jIE!iEf9:L6RfG4L0&I.$B,Mt;J$+6K2@q:-?Yk+l]-=VFc_eGH"QcBi!Ufh'g_.Nf]p`^'$>0.At,*([j'i'=7%C7oiYBn#`lS>D*!,qP-L(#T@"'EY8F:ZZ@Z^4a-"o%nuk'[[Tt!LFR8f#RoH['M>b6Dh^ac(SPp!tIFu0[1qnBFo.-WDSI:5>n@)%Zg12!'Ja5*$W[B]*R6UMUCC7OM%cq&gUC_XQ6(t>*/&cs#U3X8CjEm18-&R&JR$mkiK2Ee6-njQ:>+$05proj]lLgjlFl=):n.<T%"U][N3A*!AB>@r?F;E<I#jE*ZO;9?#8OSIZ2>>cQ#SUr10d0'TAs0Ehh>#FDTq4/LkuGs&%-)Zgfra<kgA!e[qq>pWIA.+qi8pCs%_/S.d81Fag^>5MemWi%\HZHf[8m2@kVbn1`90A;q*f<>@.?ca74q+J]ZRj=$JJI-1d=b]VX&1Y9eul^TgU1N69EN86L?m&=/*W8-%idoF\XU7X)RFB=Z6Wc$OZq-82;BY<O_^ohZ9J([_A3HE2'HsB,jJ6?fOh`!576'f_m0Tm)dIumqJ.`pO=t%Q"=#:$eC38_a>AG\K%/!?;uL+';nS1Y9#B0M2"iThp83>cFPcH8g-X:VWB:qG)&_^\8E$ipG`&Rh?of`iR1luqKLJ2/770,5NG&^6Bl_>t&6,dEgR*r!O%%3&RH0qdoi*k4TaBXr8<`/(Hd$EYcW^pZTkNDS:<JjdD72)ke%95j4E^P(uEg9+RV$X"B+TC:&<`5U^=d[6Cho`!&e22$AMl(5?<e%Kh?%`e-sd_<=56c*#cQOA&.>(#B<\?J`H$e:(qRb]@(_"Z@PbLi1<[KE0J-iXX`)WBaWXJh+<i.i,klL\?SsDjJ^.s4&(:TfO;6N%D0RHgh<?&"l4f1;,>NSI9u(K07e[bd1^3=3F9"76k/(iYktY18*pd3*"Wn(HG<1Pl=#3(=/9t0t(Me"N-[Xn[Cu=hT'(5SSMTFcV%oO(h_UQpP;66Anis,\+N4*budbWbpi"H"@S!G7Gi.\RUL!t3Z5A'P.86DoCK(@[iE1]i.qE@oE+Lk*A\AD;.,.O0O9j"a`)enK1-%^#srR1f16HH7K"9D2B0^"!MOQ#ddnoMh.d+UIa+igli!b6rL8AK)fuq:-X!Y@Lk;lddo%mT;%'P%1KbM/C7lNaOq%jjrrje,\eCb%:iJ0n3jbdFa:k!R9=:'Z*5VJfFPo]Ee=?pl@V/jUC+-bT9`\p!&Pg(4,Rjmh&e)T[r`[NL]@/5VXb]dZoE%[jDe2uk&U;0Q:P0tb%WN?F4#g*2M'dj-1RH]!(Et(F7.mF@bJk::$DZIo#HL]R*iBlZ??B<*k%$lT,A#%-1Kb?UhYXB&*_B<gHW)kLR@)7)<l_Xh<Ves56%B.$1kE^>@q).NsD2/*gApt@pR@rIepE$F'MCF(s9)&#2/f`5<'8$L?FK,_pB6nfHZ!l9="'#>J;3GpTZS$7_'k[PCliG&k\9pR"*%8Rs6s!_6#N0F5RXp,OAQ6-,/D"m6JW:bgbP7Ydii$G6AX%h%/,q()ec(lj1D#YQRHXufF[phig&`rcrj*jMRXO?Rj.6B4=E+cnM]%#TOA/*`Bg?"<h\6+'Be>[R2Lb47V?$[)_i%.49Qg+Uo'ui^HI"0qih_X[,H(YWcr%=R!gh$AuX.lNc^ha:7NraH3A1an:<2),fK;%Y`RWa!TR,:1l&g)"I)+@Pm?H,SKVDP#MYP)E@:CeOiZL=0g]<M<kBTE;RrKS,o$)r8/-,Pclo+o#jbBsNZp^,bR!9_6CT.7W.DI,%->;h\81;MH&Q0(>X<P^Y;L'Ob4m&Dc3(W<_]+(h]!*6-DQuS-bm5^jB:'i!i<@F/`qf!,;:b,;jSm:ObXA<4lmRqH.-3S>6XMPRk%J0U/2+\QMmGsn=p>_b+3@+0p#8;'LgYH@MKKI?@Sh`\1C,6C1a&V9ML:P)Kjm*H?kU-tt&%+!E7bWsK>^/YbC&[2OlH<-e\Ud83o%4/N]$6Q[r!M[ChJJ:bF<;QZT(G=@D"-2$33m?P't(th7soF=hO5XV:6PX^Y.JNBY660(IPomK%:^UU*s?LTBe:pA_O_@h_`L6**'%ShT,Z%[fh=h5G`;aF,GRPogSL>gF06NFr<^7M.NNW$r*R1k;roY!`JU^^&#V^r_*TP&Abmc)0Zd\nFPr@Oe<.7k+qn335N%E&+JT%![:A&/L(i`%'G=]):@[fE>=Xm__Et>P+%]Z,=s%haIPHD>!,FR5Zt3,g.%mmH4l:?IKE,Zc9gD53/Clg2]5Jiod\k@:#^'Hg(.mE%KGIlBncU1'XgN!KE[GHE%<PZBekW8@fV+7O8&mlACs=3#6Uji(+$c!F4Jg"P8o^`('6t/kD+q_P!(Pc2eiL*,^BMd$#mJc9!q<%K%]^n6r(#q\P+W;!$%(%pUG>]!mCW/KQ[_clYUONe#5M;c.j;:ogk/QMn(%ERV;D2GVq[<=_1gtjs.7]d1O=!@^=/@6&#XXXm8cVc/%5^YV(8kN>a!.2(=!n>:K0Q$]@+T]I\a.QQi[%nT/?qWpFfI..0KhhrgHao-8KKl7T3Q49oU3Yg^:O9!rBHgSI.YTm1&Eq-QK%,q(%"&=/sP\u<]bq=o$Y__k;:OUXLVjui-&]+>-:Cb=akt=M)U'!.@69M+:[L&)>6_DBVGl\q+$<99o1nD/kJV0G6CY\J!WFU6QCJ0r<%_`e.mDT_Wl6&<?6G-("OBRLjM@T17-(Hei?mn0_gaHA"$=rIhZ$uH&,,s4eC6n\]W8b8K%i&ape?qSeCLr=OMd,LQjN6lR.n'fY)%RkeS[$3rID)OqaAHem^km*HUEip?p_+=!9.Q6D]a*+KolaG%$+[EZ[m)52Uf'MqF^dI#3\O-5Q@@6uLrP)@O.'sJ#!g5,f\,-(qs%[E=+eD8";a$#rp2+OJnSc2uK0Qp@PMEhAHiJg49!PN2(VaX-dr,%[Si+;G6S8!7j95bT7=@!<tC&.p,i4sJ@c0jn\(q:n#((co/8%0U,uiSGLg05[YmXAnb=$3!KFqJW],-VJg<cdD<pm/7Mij2$ENd8"lVnFmMm_NeBKZYWmq=HVR5A)\CR:*J#mj.S?!>fc9^S+4*mm%3l-1Z3oHZif)5hK3X-d!aQad5_+?W*KJUuCE"YoM)q\IgCJ6Df<g3C>oW?1`Em1BmOG"907+I0WUC72;!Le"S0*\6CqbC4E(ci,E%G=k5eQj814C)D62^iLC(T`njk5cC3j,pN#8p*@]j77`37-X;g$mLF5r1ih#2pgj#UP4=Q50;Pk9XU24fc3P;uL/F2ZTSslE`+b><%qjo/U$>1c3r\,H2$!nK/1$An,_?oDHMqi>%Vk$4*6/W5W+'g&:=5#'r_7GXL6CQ++@<IH(PhI8]S7$u^kpI.>'e*<(*k7W'+`.EJ%$78T"0Wl&Z'0i(W0RZMk0CW7O_1jM`i4=r5)hFcV73m@G7C'jNp<X8<EoEZd_6m_s&efd*FRY;O2\7O'Ka!W"T\Th-:d>eOO6;47%R^01bP04h-EC9V!#\,iV&?k/W,E1UG!j5-jR)qt`M%Tt=SIc(fDMJS^.fojq-j#S+.D'Wqd'Tal;)k/ret4(\?7=UU695DFEKZb0%jrB(KUoZ].>/=!k6:RiRb(*"Cqb%ojHIm.l=/%#IObJl.BR,?qVNK+jV`(Z0d<X"]mSkmRF30:'$$,2pDMTrELUR@U$<o%-S-\Hf%L1)$Y5Cjm<XDXM[1PCRKE>+Msk6[Wcfjih42I2&4n3f)NPHlk^$(bhSCj"oiVoT<t)2/ZehTpu^e0p0OYVpq3#OXs2fM.C)Q/LTf%+EtL'9>n"*9SDW[d9n+#K"]5HGQ@A`!Xc!0%H>@K;Sr6LQ.=?!"@g_3[deVkYs[KW#AJVC#RlMK$FC9%`=<']o:0SdOL%B.Pm^H(%Si"VCr02I>fGt)Kl!/IbiGg8257?7d-ujtM>'D0:&YTrfR8T^Q%&F=<Q<N2+$>"rm'[Ub%@.Z*klXmOi&Wnp"&lfQ@O]!6`gBsV;%"TZf0;cA]K)e:kK#_=O!6u;(Yk:/a&"F!S^AIVW9KX>XtaiGkIWd0=2ZU$&X`^I2D"DLk$Y_UAX((2N6+NlRJc8Y"KpE3f/0SFO6%iY:g4;&V"5qk^B7?9g3.JHMCHBUD%tT<_nOTkL\qmQkNTF91RecsY-I7d`]GS^9XdOYbGoX=p)2>hDJs4>KD,60)!T49_B6kNG1m%EKG]]gJQ$?8;2#I9NfU[[<!XbGoT)l.W&kVO__&%4Q1G></KlB!#b$CW)X<?5]c(c_Mb!5E.;UVPKme%Fs@$LOoNa+4op;WF34h-%*Z@_dqnPc0m\QEd-3uSSdN_^B+d-EM97RbB73b'.DWhYUfXU*1$mS(fkX0r.NPIYu@ME9S(8s?H^^tmI(5OFj39tEpd=P4j.I2>b%0M+uuc8VhS,Rei1-eF\of'p0G:Jk(m+^uNKam$Uhq_UX4#MHX'kSZiWYVR]/NG]=fB<sFWZsaZA$^qB=kID7b,'Osj$]5plfH`@D%#^CQK4e*UOP)`R6;C,OC6H$B'@._NkTKl!J\(TM:HU,mc!:eD?h8-WT1g!YAM*eC#1K"mG7B(*RBoiCd"V/7mM1XF)DiMQTB.5M8%8Q0aoR7*YZQmW$\+[E5p!CkR>Tm.HJ+R^'o;<*)^q%#m9^dZC&/F]4g,<q3-0n0U_dint@S`O"J!B?WaQJh,q5,$/D)'[eq$QNFn%XsQ+e*Tq[=+uqp^M*>,hW<B'uJ6"Jc,VqbMB<Eh#"X152bs;[LdY(8Ld=R'6dWcsq(o->(MXihQ_>WnF`ZX^jgU[]c<"$M,bOHN=%\Y`1bJlK:^'eRJjq7[F`UIN,>M,D.A&BlhT!i#MAn,]2#XWcZC$c!l1TT?O;L2qCRTH/bPoUe^uS3mT*`D;seGWokZejVq7fFnCr%N!;OXFq*N`i!#d0#Q]U#nq7!Q1'%"f!_h")2Wrc10WbFb'KmM5$cN_-$_VE6/%[8teJN>HdD2VG$\O+k78U`f1qpjU[(NF%g;^s`%FpE-Em[@WKdX"k`LC*0e2$B-%WH84aD&5ai%4iG9VmnnZ_3*m?)+C-@^l,3=A1-MppB<ecjXli$aeVqU!U(sn2a'csdU7psQ*R"R%!eQ\-LL6]*[fA)fYUpLuBTi<GOH[j^6-ViK-ZTo(N>p<"0r-01_PHc(JVD$>EYp#l86Y8>Zn$/'5Wsf1nIIFB:haqY0>[6U<`-`9%b%;u7R&Rg(X,6W[n@\B!8@op:,rG$H"^]@&)I\5C60QtW"u[3?q29P74<)Dj5`'2VE[;S*GOC+5K^%YS:a0ac"[4#+9<Q@>Tot'h%C#^0:"ImObg]:HmR*KAfb^iHY$,ikgQJc<k9Fbpn2$,M'6/'7N!,?qSHcX>V.Us'@o7ZlKppP]Lo)+99pB\\K#i]jA_Z5AL[/`,f%$Pf?E[";dFD2j';,!g4S6[XRn!38m'ahl-HjnjU)XPe0dbT)'I(jSLMq+e3%M^Y5p[">poKl+6%NCZ;,I0<HX8QdtZ+Y[L<G?0ou%)F$(biE;-YJ2dqZ]&>2:8:f9FNY?f,!sm``HCQ0UO@Wj,'J#aIY#aUo<Luk=dgMhM[A9Hl`SsgX@;CFU..)$>6m`2\K*'0>G14Q(%miNY)R+)BNoFoV'BHP;l)\G8O06:1H[O/BnQO;!jaJfcoemo?o-m3QY*Vg/[ka.WZruhr;YG>+g!6E9*:*NCNbS@ONQjNh1"6'`H%ABH/F9\O/2+j_2Xn9bh61F-cCRW(mlP.KP4[V#TS1lFWJLm,oVND)Sh.jnIBOl$3'&MS712Q3'@,e+8D>+hkh[&_!EJgLXl;:IHi%7\85Z%L@X-=QX_gLk:ee"M'>C3BSip3>Gel0*lq?&]OE6Ee7?pFV;c.-%6(h%'g\FR7hYa6.H_T(VmfM'+1ib;JZpi*[<g.$k56g%m1i#*-#@Qn?NH[S4N\(Jq[D+e'X:%0'hWLDA8nV_[5cRd&5^(hh=KDj-N1ks`%eh2]"+Vn*U_%D_ZS7h)/\Ln^ibd%:ZDtV1cGad%+UELoS43N&:s;;.;%V+\,T8P/@DF`p#UF_`!<Mki4?BA3@abaKLDnGj("hk2!)"bSG<'$#5bSM`H$Z'Wr@`!?S6J9YnSul:`e[0l%2#6,HbYi2^JnV:j#;1$KYl`>R"14AI/VaP'mnPNT*@_b[:ofMg0sKK<-1bii"We9V$qN61U=28cTk332]V4393W4mH@"Apo,)f1C%/-[`d@e+iM.@jAb]#?7_9:?Yq/+!W#K[tfE$NsMk9iRJcB'LUt/qGW;-u/A\(rBT+]R_#h;9AkE@Bp.d_5L]VkR#k(1.)&!iI#@W%HktoN!Qd.T-_pge4hrmn1[@&VJ9%Wq,'*LdBPCZn-2*2VS/"mnn3rp[AQ.ef^ejfZ<,rnBa\O,a%*NI?RmO'*'stk9N?!MH!u/FJ%<h^1>?DHON;MI$XbUV'%(n0G\PqGW?1fD<p.0W<_NMQ@OPY7MK&P2Z/+G5cNW@F^eB[Y4/0>k(MV7;]L"bNc8!eQ,!KAg6(esOe*%^,"5NbN!D2E[46>0nR"UU`f@tbuo"PG:-*n$U(,$,*/]&^e%LGfL*Q,<e_)\_6$qe;B"5p;Ljjn.D+BP!]3iKF36QZguX)68i*j9%cK`?#:?VdQO??/e/HN[bC+F]"g+q+M\3_P%2WGDDTgQV3nV8,#m.CF3"mSRoWA`+(3jB9!oiNnL7tM+6GQW%G8b-E0'`sM]&&P4!%BcqfDRGi$q!Z)?0<lLsbOh%Lo<C@W7ML7IN6^f\?0bFF4BhST6hZ]Tpeq7dhg7i`5BEbDd[%)XJ-B)EI_K5MV!dKW5>G#ob2^CH)%5sb^=IiM9kNX!s0UZ^9a.flaG3;Pdt%U?fX8L3+Z<D7X4M%DR>`W?g1/3k@+@KX),:"Gs@C1S"?:`k*/@J*4?7kW,T8$6/o\[4E5%lHFTM;U0p9/t!Bg*/&hK+2Ng%%H'eMWUDsVC!R'lEI7b\<="OK7g4rY&YCgk5,$LFDa4Ps%B@2p.QU`^^HeQ*/0GDFRC4(D=q^/b%(?D0IhgpTf)B&SZl/'R,Tb$Y'30t<$1Cj.58CEZd4n(=*L1/HT?>tCIj827+d&h$J5`caK.`qp;i3^=O8UG*&jTJ>I)j`25&+Tt,%c)uWYgJl::-#OLfW/sZ,"(.0qV^t<Q)N_]t<.pLKTUP=T3ZI]+;SF9=jDj.A_mjim>9FRnYN7AmOUIXWATobuiuICng<Scf!3C&F%R&"O*!!d$=RSAO-Tdp27TX_KSGMS+X<._nr7+sGdES"6RhSb7biN/`$B.ah%#WU=rUS^`T&Iqi381.5A74gHM%*:9(,D:S/"QnW1%T]^F^^^:2Sk=),;:a.aZcG(JM$&F3RU*N:P[HC,l*OjQ4'F"#4Sd?/$!72r@%SK9H"[N+s8R2Ci=/^.Y#X_0'Q%sL*&2/,0"Di%7%9dY3I5`UVq8fSF7&e>%JUddAVd_mY-ml&&(!i6=i\>@!$kEm+;Qau:Y*^I4b/r4[[()i^9N[F"Se2!%i66Iro7Q=HR:UF0]WchO.%9.6mYB&aA`o7_/L9LiQsg,1VN@'#7P&`YWe;kOs[2O6!_m+Z`q).mupa<p$'r>Le[LkT#dV6Xp;,gpP/RLiF/2ZbYS;t<Kk1#p`[%[aM%30ut:(.$oot<t&$Q*>DU?\4$B5K<"t_0h/*><]!rd9Y'G,fHO2N.%h\-,RD$-6:O;^_pUFc9.DuP_^HCSE`Jn^pUWU76gL70%m]A_gUs*iAa_%5f[W:\bV7H7^lAeJAR7S#X"9RUD9XqT`=E0hZ7)^QOL"'E7J9`1JTJ6+D\9bBDHNUKuUi$H-"cuD;*<;m*6t%[n%"`RBP3&6@6I-W/r2@n8(R*.6qgf6b2*+AtI`5\%I'*;97L2l>%'9j'J?$\_.2@arB^MuGY"Iap\Cl,!/%'4o(Smam80c0b,Bp&nQ%<]j:K"PGUM*&>srN2s.4?nSE\,sjIl"$N!%)?@'SP?^QX*&+`K/>L&DQ3V:oUr!IL(8U*9/<0m'Gl6NC&VP\)-\2YK_q_i)%(P?E%NKso]PcLF3RH5,(%3l\1:R.G[2'q:c?i^TA*%Pd.:M'2B(@7D^!6T<N"S1a>fQ$-'_0h<rQM;SAY#,1>.R,_cpBf=EP_^<hVU?39%UAQ)K(8nU*L[,1r$_^59?1Te&C#\3VS:jaj]ts$WT[=WcJ?H[/F\spr8I.;TJhRA2(s1i\>%"9W=b(La[S=gl`JBG:4@fga>q(Ka%jH;"YZq<n(KLo=SX6#F$L"nqm>_i]1J-=Hi_WN-n_)&XIKRi@CR<<im#g=`7aP9=;@QgB94\F1YQEJBLF36%t0(K#\@$3SP9JttH%/P334Sm86\nkV9S#PKGA$m[g-$j&jT)kehp5dj16@PV+m[N_9Fk&_jY2bt.o/1K'&XEjmXF6QF_Hb5\/bQHR]ZtQ3j[=g&Vegq`$%2W`>8@)BK35jr0bb*J/tKhH-B!oL$("U(#nhR<N'X3iY_mMqmG4jI:b-AX-lZYD0?3IB[=(8r[/Y0L6,TCd&"P^KMqPH&JI4=Cp]%R>mk`-RgLiiZYKbjLU!IN''BVTuatQerc\IDGt46jqZEJKd#,cPS@^L'G273Ph[3[?'B(_1/S,i0*_U,XWn4$11lqEr1)8!EJRgr%2G)&-V$')t-RH>56._s>Ka3i$"hk=&>09;L^74T,jr@Krmg^`5;^DQs3T^0Yh\JQZOAZ"Gd@Z_Or$k!q6>r;j\M#DZVCt!9(oEl*%crF#3QHh.YP1nH:#U$lUO>m;sV#On.l)Kie\`>hV2K2,5!1BUtBsrQ-'h<9T*BS69.d\pM%KT+#:5\CC&c(Y/jtJ!VU%!e-C<Q_u%L..cYFu@5`j9d-p&hn`!^9f.mOCA-o0I]b[`3>^LB^:Pj'gA4"(=LG5!]",^p-t[gM(=Sk<.[l!oHJ5Y.[2YAE]fL2';S79"LBG:%mEE'9%/;('5t30i!q)t_\ca1o`64S(YCblJi$EM'KbTGtL8Z@PCWb)s9Mkfmo6b;R<TN4i!:l;9mhR1<o3OdtN]9$E`>F!V:0Z70%-Z`Z1cldqeQ6jATQ9s"?=44*$i4KhI5`:G'/ODKeMn/+h@;`SRZsr7mP:h-<V(U*q0UL'U,K1@7^3+1l)mOEdA>$9(mo)4](+,@\%/4>Y*'\EF>g[GL:8!mON!M7(Q1.t\)AaTXH7:&ha\o5_ka3!sK8s8o+!_bm8=]*\n,^S)\`'QfT]7<U`mp"(Ie;K9(]PY^kBk;_Y%l<-#b^EeNe8GkT("*mduDE"[#e_aBOj88p3U99Fj8-kU3dn"n?.q(ThL):-oQj_fG7TdOjV(5h+[icnqMJdURE.^i%>67sHPN\pb%WN[^;jUhR@/nnT<nSb_2RD#DN&0UlFIM0J`OePds`O'>W+V0rlCVnq,c-p9t"pU$h;t>VMr_f+$oL:kd!!0!GiBjWc)sMC=?+pE;%@l&?%ZN4igOba`Q(R,I@EHcn'b(1Z]RAHW0jq;m<`+B^U<:2_Sc7pf6$]RGF(Vj*K\q"mjK>)lo`2c7n4>M$!2d8Qm&2Hu`od(?L%*Qd@`+(it)/_VUQ\)gJWf;PWY9B-J/1.p)+)bW)M#aF)tMJfADg`=D5*X;*-;W-6&auCku<.:ha$nD?q><:pa>T`0MS1%U$4+do]%S=INkM]X'5b*d7#o?Jf;;oHaVcj=pi]-:<;I?e^aS2f45O[C6g7f-4F63Q`G,+5>1QdcE+TV#%'-(V%UrIYH;6FUY`eHo.(I('bp%+e`Aj_<<78+Y6Un6DYJJangPZT)q36]=d4?Q3g`&;D`:^'.m$g[59QBM$V)V'k5B%Qn)UoD=)^Ze4n'7@;h<m/-;6FN']0t"%,?6%O!W_G_AJ\=2lL+M6%UVtS%QNtrKM?E*$>=ej\73@PXrqm<0XsF+@%"r!8UpRb/M^p0BMC'WA#-]Xqo8MI0gmJUj#^rB'?.'C;fKd%$[nAk_cC"SF6KM'j+6#[U$mRGTIa4:$%TnC_1uQsLI"OPVTTuHfIX[R^-e3d;GFfan9th=*3po@LhaNb*\$5\U*4`i6R:9*_!=5?%=W]\-#@M2E.,heHc;:4j'LLY>:ERdr5uQp`W0BD$=.80`#r#!u$seSmK1]Go!7Ll1\DWOu?T!]hTGo@+8u`Hj\L5uZ`Ati_?GFg'%\e`6jTe3iE^kZVkBd#lk8a4.2-4Q`>5FK2j_EBR9'JYrQ'G)71ae<?1O-'Z-`)PlN[tFh0,I*d"N^UT3EbEZ-N`aGW''R5i\5V)=%<e%Db,G)JN2(>b('d#,VRhpXdFPYol)*o#>h)^,?r/kqek.'Q!65pJsdP[.!7(\6i?1!9%B\O@cfKLonU2+5S!)8<.dL3$LJjRFq%YEA:F-Y3?4CSt#ub#R2IAl?Fqao+'I<ujkF/MUIgDLm\mDYAJ#.uI<K'W4;WJco@7pZPX'B^%pJ1"mWLO1^U>h%c>SYe/H,H=S42%$cjn$hb+N6mNrn5\gS\g'#^0>V'L$@7o"Q>=lrQeKomX2,1g,]U:k.p(en#>jZ`JRCfuQPWKSS2L6lcp@)tKT\oFg,o+HNQZe$<:%)!-E)RhGk=^u!"JJXDj?^fh*h$V!rk0;-L29J*^WRMTIQ)`^MR:\f6d;.0LFg_muqS_4clhEtg$(6)q\<[@G'hurPVIElXlT*B=[%]oV*3!:]69?,g"qW,:V+6X+L4WmGa_I9=#?!cuJ6Ba4CWj:I(c!t8#:`8JGfk\-Rn)+b<2>I.smasjnC'hUej35n\q]EZI,:F=\s%0l):XW,gYAbS:2MY&;,T!0$85%[I+>:5Cf#3M1-AL]JiGKtWVn[WFIP"IOJVmJY#lc4+j"0LoE;"EK$(QB5#'DA)P.U]<`gSmuTH%$H3'6[qT]]1Uf@G6OGtF8mef2(u(@??0pTp!MJni!/?$7c&E%ch1>:4k-e$MbS[3n's&u0,'TrA%!*hW8B`K/)hW"-"GOpKcmB6C%>N$aSgV^H/>YHoih$H>?cq?,(\4mrcEI<t\@Ya*g*3:='1"&h]/Eg7o?NQk*fmLe,CeHY]dcLQI=AgfiQ-C8QcaudM@n^(!k7b,o%;B^CWUIRl/$ZR^!DGMk=(O-__bb,T&XcX9aPLC._p>u">#tc<I)0`/Q9S6It"U#4qOt'1;+h&8_;Pes7$m73EQT9iX4p1K[$N/Y1%%C>tSa.gN(dT?i]%[;f+&csPcKU@_cb_o@:($8,#"/GXF[(!*J9c=VK1q-e#8kQ-d=s3Dc-dd/A#XRCK'bnB8_!^g8V=d+Q1's5m%Vo0kKfa6+mkmCa5.*)I0@*0O6,c`>H#mELZ@U&ET.=7o\LoPD,FooK,[>lL_br>t_Pb?/6m(k3ok]nZ/Pudku:^GNi7J2s9ZI?ck%b!c6n"EAM+6K(ZNnh*6KNmiA1(E=4AG.#+>8aV``*K:Y;a<ap9-R6_T80849:j>8U5M'KR(grLr)A1^,c=8*d3C7uTAlWP@&j5_0%QaLR555&geWTkc$'9.R'%#M1G1-k)[[2-:RHEOir"JRFKc`'I`C7bY492lHFFK//O+odY>PX#?C6cp'dEYXf[7Hp6J"47^n*f`"I%J>[6O(=3\]PVT;L7F",u>^;3-Y:/>pdM*q9V2'p6'rR9N:s^%*%P'@i2:A<"NJc_icioqi-qYA0[Wi?Mek&,tdFK+7ha@fJU8;o\%JV&^+PO,p3%$8n%.0:J\k@p&:LuhTC5rkL'5\"3?(A8HNRP1EkOHc;E.f?4rbpGr3n_eATpPW1ImhjF,&4gu%[_6CXn7HC=.=;1H%9Y$%6]:]ET0-r5?dToZpXc(Y2)Nn]jZ<b:q$>Eg`11CCZ3A/-BOu""m3'iCZ1'l#"nm1h#WG>`[?KZ1ASkH.B5m#!i;)2C4OV4l+%>u%EC2DWi-SZ>`2&+mIJDgcHN_GZtcZo?_Q!F\7(`H6kVN$*-r#7^2ofU/IO$+>'"NPO*CprM0dQBj:lYok1KY1?J(\!PGQa?POS%FThn`6TeYF@L_SKeJ&Q613]4p9Z:ooQF^VF'VuNU/-MMN&rTC,k2$07m+]DX(q:5NV/A&IR+"iq^"h2IV-o&nL:1M%OXrC>M=u5-%^X+Sc^@EESX<ZC@V-K_8[u]2U9neFZ5rr-o\;d.LJ\*R&\JrsAPE+]rjJi&-8hTj;mM_P8GO@BNmc]LjJ@%p/X!5mcKG5L$(-usA%$l2.mQ:]c4Ep<<:9ZiktG.n4M*hd<kI,RKS3=>n!6kD<\^<?9$C,Ynt67jK0<Tqj7?Q,;p]uonT(qH,N;&nX/!I#8&+Wd]8LVu_]%8UR)171pl0:2^:BPP^7]He]u%Q;^A_jWP1+DkBo#'=juf5s's]^qaC@P*mb38HUE/-<!u4L<8iU8N&CbmATFWZWo?.:NdDLWf^,g%\/CP+>Aar04\'TY:I#c]6:ts-Hg1&gdABh@:c\K9Xp;6te=G'BkqFU29N(R!&/OIiVPS6J#Qd@Q+N50bkouqc2$;>GjWu@BqZeq8%]=SkAb&.YSpMgP$bJ=U`1W-HP!8AjN*LQ'n?;ogk=Q8EG)5#[hB9/?T\f<Z],9aU26`8JHi#P'M.duk_[3.8ij8iQd#ZLsVH'UFB%V4]]A](St1S;Uo>LP]l&Dre,fo'sTF;&MpGh*nWC.mso30P=9L%K:08&sXYu!-AQ2]gX;BU;+i2-G`?H>U'g.X[&ROG9bdp(BB02%.q4aV06,[Tmfhhu.P$7qrU7A)_UPP_<.Sq/:iOWV!("2S6)ab_iX_Po6kq.F&?KgclVo&88=e+8dRI7oO?5W_(+UQt>noE?TqYL4%NcDC/+J"dPb:s,%0*c[,KkCHT>GQ<6+@HA!]>Fb(TeW`r[b!?,.[pt-NNb8CZ\4[5:KKTuJ.;uc*8pAmT.4b'O^.K#g`GL#la'3(%I$8%=5m$7:53DF?KOs`nJjZUdKO#9i0L%#*:u'%AI8UeK;I9m%K0oNrat*RmFNQdk)$YKld#CUdQV-F<ef:%sC(/uPPffH8$e>pR%1;m9E23Kb>Yq;mOHH+#F7p#'fp7J6!e_4R-O@"Dhn^Rp1;F%/fdJt`GA<n0c_Bkg79bP5RKuW>N+%R"Rk\VPD(rE)4=Fkms$6]ZW%!kZ*ljeAo&8`0UE.:/!5.c&^iR07=E8SQC$PSb:G&B@7A=r['e(5&?g"'G0gjfLM7k0:`Zg#A]I2dVYC4fQse5Um@&(%oc1lMN*'%:qBK7!P7!3mVYhaUEF]3Uq?JWd?RB08nY]V]gJHcgI/,UHAoL[RN=o]_^#7P\V2)Je)W3_n-1>?ipt2Vd$?iO1WJD+,39^rRKS9#%<<ES0L,Q'kN4X*u]F5knK]K_?JFR%I[%0MGV\e,[pF[N,;H`T<nXiDa<9Q[+W8.M/:m=UGQe_>3&lIXQ"EEY=9d.5qO0R3HU[Zj1%6+W4Po#XnRXd.p!anI6r_n>?l!h$)?OU@"V4A[1-kh]AGi.-EaN:^MfcCQP1,7!(&kIDOH\Z9imUaqkl^qIV5kkR'Qj>Jns*Y+Wr%l^>HO@+eRr8;^"c8M1!dWHfIjPlX,dbG5c4,`f8*Bh!#7Tpe/D6fN-_HpPP3nnD?[bAh/QfL"13;s=j73@[j]Jr/P>OhcMu-\BV(%.Pm$>V8NAFcOlmA'YNRM+5Qu$afU#c9=:VJJj<aqE#C6PCFoN2b2,&l70l9t\Sj'g4<gG65^_l_6]pbB$6Z9$XKVYW'Bi1mDKc>*%JhQ?MF-@5(HS)e%>jqmMLSKr9roeSi:qgmMAl<@Q(;!IY'AY=\+h`ZrB;G!219l/Pgl=t\`V;OcLd3uc.!=7j5a?8:i+d"Ql,kAt%I.ea2JrS]r?rrR*\2s;5KiF9L,k((21*MUh;;A"U"&_lUegEa;A7SF^\m+K[]VBVDfK8G=\qSrSO&=EY>VJtkNeA/tEqe)BFn@No%PJmgZT/e`b-^VI)E%'Rb`NQFV&$>r,X"K&u3eQiE\n@Vp"_S8#6p]@Z-Iac70Ue'LR;mIY71I)I])maobQgC\6%Q8D;QrD9kSMA>%F"DE73+*29@<c_4`)5>K?6hoPa.30mEZ\ES3[<nWH=P'f.]@L:$mg+l;#VD,D?:Tq2510ejPB>I79&qpN^,Y^_iWG+N+bqrM-lu6%$l.H+K1P5&8P#_T14#-98f+>1J:(@rU5\/Z0J_^_,!dIaXJDR6nP5O_OTe?H=&g[@,s[`I:UZ1C5uNpZ#4=*'FM&!/R>fZQnB/kh%&L;S9pL0qmE>OjZ[2Rh7L[NS&I/C&M-@+[de&%nD=V0fbi"X#+E?/Pn3iOA]FeU_r7m=UX-V=I#am2$OGh!po!oa]l/]1kS6&i\J%%;kqT@E2H(6`QkS?6c%P^1m8/A(3Y4hGB2?\&#fBf($O]m1A!oRMpa^##!VVN<4Z:YVO/V)&5,h:"^3f$PXF';YIuer:'-;[iC&E%3J+*6fT^J]M_\;noTB<f0h'cBYmSBg+S*m#Q[aauihhH<MHbhD8BM"UH!p'g,DQI`>!eRN0cC'-eL$=M5mm12n$W1VDn%aQS-J0S%Sp0"OI*'(jotBHn+&*e]nu"h7R.H=$dW=a/RaM=DkQSkhK4'$?dO9hO'*NI6kM?8bI^k\&n94[O![fBqD.nClN:tHQ-2/QqOI?5p%^1a&E5%sJ\4ILQ2XpsCRH73-AE;,;4&^S.DhV\j-/:d^B.m12BimhD/Nh!#`KnXq<6$eCs:C#79ck_YuH9ad3bk4-'_Eh^G@S24U%i.4tHdp0%)d(e^li,k>Q&riI8cp\C6mV1`2E7K'qj`^WO\&Eo@6jelS:NpAV9^c$.>QEr[4\H#d-Rct%#9$3-]us*9\b75$2k>9u%V#Cs>&XYKen\2G_I1om>ecaVm5oT*g9sCLMeN3f.SfQAcA.U,Flu5jd'S4B)(!&3iin7;/.8W@&"""+AThC-1l8_!j+hTUiM1N)9%Q[UU='JS?m&""b>@<DYj(j]nl!&Dus]HH%SFaqMV24K;CW?5967?[gF`qJmX@""b*$g-r!S1<r@it'UH"Zj"d$h!8saF+lu*Y:J8%B&?m1)$gjFRGelWp;#JL&JB&hU-;ERl4Xd92?GF_90BcO70.rW#]1pEIA\Y-afn0u17+p9]qgGYQH3U(q#q-aLLr:jBlWZMB"tk&%,:aHB0WC;,[Z_fe5e@%I#eIiGJV2heH<`3*qURte5Rt,)_UT=T':+)W86$8*KT&47HMZhMTLhC&D*npETq,NER/i#b0PZC1Ch(!b%$ji4haM&f`GXFs5G=Z\=K143I,UdV^@_KK!6'MS<1cluP9bZ/i#58NUKF5X?l5e@s]p\WTBFR6-nF0GQ^>#[;4-fZao!/E<`?G2t%_Q,$]id:BsrO5S2.ohR@iL]q6]>&=RrQE'Y7QH3aS!?mLd\msd5KE`,RToWd<it\[Q8MgIb#,V][r:Br0&0ZL[>KAa8uIqh\J<`T%pE4\K=hU$s#(LcE2IlN!C&Q`DHF8$%4S3RRmd4esoon6uhi$$fD-ABLBEDo][*\b=S%BJ"#&eK*m6;t^rc:+Ls(=+Ks',WeNME[s%WO("9f#sMhNQ*A%PCX\mepgW%FP;q6eC430#NpFO(?S,`gc:of&o9Is@lTGu-`<NWK:mC31CuW"Opu:FSi?a@`HJoMMSF;oH7=K*%k\GY+M],8/:q^)f.<UO*is_D.h=e^@;K(oG.\5"d*L)M]D42JEW`b)+e+gf#eEOE%-B=u=\%C0!H]Hfcasai$c/J32Z.N\9NJ'"c%CNBA.jA%g\ie'h_8OsjXf,)(*Q28G@D`$KTZ.!A\?@\j5Keq2,UY@9;:Kka"Br*Xh`>gc#[#/"Yet$*GO-7gPj9M$](\3PhZdGpt%Z>>6P6%Dhu-MDk+1Hs*d::\3Zk6BC7;Ed%,VUX7c)be^u0MV6Ac'Z1$=[pa)V7F;3+%L>+.Vc,b^1pX$F,OaM1!M;I\]$D7R!L?]%NVIj*h*3KW)a@ppd'Oe:Y2tn)p*mD?I!u7CM_&AJb3"C@f8T0/G#,Nf#"?.&hMf3NMEj`KrB&j3_M<23m>a53regi,8OrH;@^k0r%'^H^57l?9`lXZS:B/ii4dqN0U1E7k*b;`EUZ2W7qTuQVB478&9oGQGu4(_/BZuLM4nnHI09AO?f[Im>%;31#\Q=99>McWn6%kHP9%[l_S#$nHV__M:!/)l2;,*>_B=I]6Goi2#USIGr)CJdMd?Lo!SKdCTA<FL7$rekU[+)ObM$(Wtp8*dE(14)-SL?AUcr1/XO/qO`UC%n:-Wls*pAD,l=".T2lV4A0F.;NION'^i#oFmh@OF_8"%L(@U9\<BpRH6Q4'HnUY><Uf2USSBolNh$H9AlS(+Q`d,5me$>r#MtF>Q%)LH5aU!:QSlV&XRPRAX/3hK"hk_s'qSP:Kr)'mM\AI+f8X3s#1`LRF"c^?c6Y"16*qft<37p37Jfe$5o\gm\\ca)6//C3;GbeB,j%C$AsDXcjUaDMHZ&bT#b<c2R/V@%L0b0,\d.fjVVBW,B!%q#;[f4Jt-+,YLJ>e9[Q1P<PhR,Zd&<hk):=b^?.D^G<@D[oFt\\f'._%g0OJ'Q7LKpL3V2V)0%I(\MT`HWDBnI0`.7Kqo_l#)m/7:UY7\qI'?D-k!'YQ;^RT<=:AJdHCkUW%<F8r>7@C^9pEk"$8\eGG&fQN%qR>gp/3:>;4Zd`LO]a#Z>++6jT^p<//bJ,ra*B9/-.YC)A^I][?Hc.c_pl8-k>g;9EG2FLG)>BXMtMC$h2eUV.?gSdpr%l-fA:%^%q728<pr%jsCK(L38ciYLV8&fOqH;BHZ:Na7c,Vf4bWF:'hG#'/e=.2BQ$0K;/B,$,hK`7?cHoGIjlfKXi1o3$ET/I9:Dm,"C,_EJ%2RRR?ZJT9jGPVa*p/`bZ<0P5T1SN:[U"8Vm\,f=!UrpP;e%0l^'SF]\N<b['+O`!&-BI+eWZBQoMnDmlFNPm7DqrFlMR1P[5)jmZ%:.`IbqL)o\T/<FZk*P"iX&&GY'MG9?XZIj@RiYD+mDV.[-hCM%_^-P9d=kNVMN(4mGra%/8uM5Cb@7uI;g89_[i2X_R<b[['Y<*^%N=9Q'it=m9<dtg5:>Q9Q*:+ADfa^^1n.LUCl>^fah*@rA/\Pt2a9teO]EC`IVS)*P9!t*:?+"uml?ojCWF\'sIT%$]N*[=.*7!"U%/qNZC'hEtu0SZS$=3b%h7$^E:<i3Whn'K3rCY(Z\iXunJ8lm,I,/Y7pem1C6KU@X,A"Er\98O4DFn-tWKU?=&-&].$hF*1J'hF#!%0SZPc/?VenKR\+X+gQ(@eB4a@O9gtW$ra4[c4_?R>>f%kSn[#o="FrXF9N:#15oZ,eW*uOKp\DnN\%5s=U89\Wm0N,?<P^2k4AT<%kP\I_ld*ARs#pK:WUhW[A(mfjro3EVmIY*1Ig-G,r;)S7)p@]]'_endj*<9+Qj]k_!_WGf$E2(ASdVL-J=6kEb7mcW/Ie't:pVXD%@T^@TGaaPg.kR@TlI0!#c,J.:4ADAk8r#D:Iq9%6G,3XVIWt^+"L.#M,g-Zps-#NTnu1_5jF;<-#VRPPkHEQimU\su9/XD%'hN?<%h9%s%FgkQPH2&nJZ7^AA(],tQfb%b[H9"0le?cfM]bNKd@V7L?AHJj.(LIJ,o9XAh&e4H%2r&p9oB$KH"/jDIhO%XMEP@RBRrAPL%`0&9^"V?..?OaZ<0D+..:B.f'5O8?Ql5t&QTAe[bCQ4JRielT20eI^pQ$Cd.n$XDn3c-[r)fMW<<BJYXrb%D%0AIPX)Nf_i9Jikl%l+D"ul)e'a(QW3S-2deoldRTA.\A^!B;<+4WMtY2([k1f9_t]<8XaaM)%-.LdRPV-Ue,4J8U:TGF*8F!VqA"k:2=hsKC#+b_sCW+%FNP-%X;8]I*,31JU:48hdq6YfI_JgPrlgROe^Zck3K4Wo)8=pC*jH^H,+(kO7u^t!Z2DQCRn##bNaa'7r9m,7Q&/ULV(:kk-3Q'H%^g#'\(!WM<o-i]_8i_r1:?*bb;9I)Q9p[BNa5(p/Dq+HZ>gL2V!tSWr8,\CIe]*Z,,HFj?:-8=HjV$A72gJg0mADY"?oRV)[VLqN%)IL.+10GB:>K9o=c8_9Lel+';VY+?84ZiOr8_/Gt`Cc`44)+QH8X[kk\PHp#HqNuH:c@H"V-bkVY)Z<".b:XJXZ3JeC5jTIeRqY=%Up9d0d\t0VeQ,p]D7#2nOTE\:ZYAiDb&Xu4A7oIYeR,V-Bi7YYr_*VG&#K&NQ!1XQl@!,UGt\Z#c-*@p0fFF\[$o01OP$oiIK;=,%).IAGK?`/093V@0D>hr5\lBMibMX&#&<+dpY3^&%_'^ko#T.,!cE\*tmWb-D`sZn_AS(O1MeJXX0'9m+\aO"q]9rIJk.Zc2G/Ad-%_YPn3O^VK3F5OslG;8ht>bLQF1=V]E:GA1@f?6?].l6C9\LQ_9k:mgOf'9pm"cSdb]`49\5)U`_)(M`N-2ElnqQuRLB-;V/P!>Kr%ZqT_HQ9"JOHB5CIV6aC-N/Z$*ca%6s:%P^X1,Of$4j3!>b=p/`Q<Af7m4icJo5a,WZMCm`Z[/`Ip(a*).?fU=9BpouYEW1>G.<$*%/2r%%?Q(Y>9J_#!bEXJkSpWEB]W?Bb(js%dR/GsNo&P#dR5Pl,58d!6-2u>gs"gdY5IGO1EI?Q%42C'^\=?9jcHJ3'0k:+<d(TIu%3aO6]Hs5+[WkHo)D?jGV4(sAPU0RE2i^E&f-oREcf4:U=K4]0BMTs,oT,6mGkMG9Rq,&SRacjVS(I&+i@19&RVX-+jDXIh@kiC4'%-X_6pL`,jgKX9tNa?]UW'/1^JjNMH#\L6<b`seN)FdRLWIKKUl:V_JL"E]N(Z?E+r%ks'"%\K*9YKXJckk)cXa]D[d(#/8%/,n+Z%l_P"nCL?[k\&p(r<7\[hSPlB\4\J(U]'Y34V;Bkn<'$jQ5*3..$I'&1eLX)QBmelL.SY)?:ApHW)9+A<@f3`9eGNR"eYm"L]sgd3%)@,5m*LV?KmS:kJV<8YU\,fmt`?Xu$8,="]o'RO?UAl4B)RU"=X(c\_".9"<N_UgO#]ErLnafsl7LnMmDghFg]F!]/GYAUYXeTc6%T?";!2S1H*5%IO<Vq!9s?$AG:P3_[$AN4c"i@p!gIs.1bPJ^6tPqufqAk8;VdS-ADPgArW/q.cRG6RPnZAd`lk7MtihN`.L:X5`&%H_E+?$f04Nl0S;@4-M4Shri+P>>/,C@`l&(ju1]DAsu/XBsN1B\!cA:e(eQ(gIsD51JP%*ShZFCnpojLe(eK&jn+nMd53eNk!mhT%BUWP.l!:&]5%t`fCs]/hR$R^([@&et5.?t5_;Z#-^hV"IL9#,J?'1W*-X047Re>nb`RMXYBgsW@kBHC>/+1`cY$=B6rM>Hep;PC.%^G4Z@rCU(,2qcg^hES"U94t:c$YhMVV+Tq6r@AH5G3<M8f8&*m(S=Wql(uBu^IPR=A*UPE2R(dAm?"C.o#o*<=6S/'ijVrn`A>/D%Y)LS3%4O/mmus2fT``$?/DmCq2p>l1chefoE3B%WR\e`KMQa!b*[g&Ij6CQ4nLgr&qgH4YbbA;61qrIq9[6ONG?`,,;Oh_`]rgJ[%iOPo5qKg#X5>O&LBCQe0-.='\jjeXa4I[lBB'%S6^[h5c9@@UQiSF'oG%8kVX5u-BdR::hg\Ri$W5i%_XMH9]:`CQ%Z`B+=:X!t%%\[lqFe?/>T7e:h/HoipSENZQ?UW,&j=FLD_qma[Z:h.$chWsdHXa!IaMVj].3lPkh1O$N>9o&2jW$\LCLGfrU@lKhJ;/tbUl$PN`%+*H+.RWLHYUh>cMB9sc`MQKM6Zkd;bML6`\Zn%<fRFt.n]uM#(Isuj4?#!g3r%,Gg>Bb8:Z4*PTca#!`TMp2rS^4s=+(_d$Pg,4)%FoE/Zku`_u+OOe/p4".b1UQdUipEsOn7Ki=$^)jVEA.!VQ&56\bY[TXr3hli&B0+D_`u%&3QT,R17p=<+DNj[HY7)SS1"0\p6^Ms%);>(tU..$9(5SC2pnf+mjgY=cj3GCP9%Xljmbhioj*O6K%To=(hbWXa!R!9HFhhp9c!9`dFtTNen<,^%ba%*nPn^@e$K+q<(K2:_%!8feqjl#mgJ3(jcJSAGIWSJSDL:<2gPX_-KQJ_4Yn$u'f5B_JU6bP^E>MGFomr3p':)l(2:%m.^MFZ4lD+<,^:ZDgi=4@&sn-<fS%l_V94OpW]hkN1j=1pt!gA<qJ^T8TNpAu1L18l78h"dE=8[#4PMEJDZ`Vh_1RMYH%6WmfHIJEP2BT5*87*R(AEZ?,I8Y(auj>-D!,%V_*dI1?:PNmoSW4rJo1Lou<-5ok2!_\5b2o2idr0!9EWLUV<d+R-Q_t/U/L(WRTB]/A,`70;8>U\(]A^n!I0?/1doi)b4mcUXa4R%k$Ahh`KRfsgM)p1ET;PlfcTh)C:/(kV*27LBJca`E['-%XQ9*5PnNfqgYU()0.cc[i/`A^[kZ&`%1<'LNh4dXm4Ic*V?Y#,p=n,,%LYAr@3]m#j@ct+r?/D56/[e92@PtWbgQ$E7\2F8Zc-#cQ3GE##kXKl$lbg<tG&gC=<da@:DT/cQ?M9sJr&;:X/"(%gXP\W]<[;Gf%?X])U?dCP.;)XUm8k'?Z?ZjWKMOTWorY*ACi^a-J;>p'''?2c_MOZAqN6K'3k;RPK`X8:5VScsoEm,$eGKb(,lIq8^[EUD^?ce)@%G+5?Z5Hm9[Z1i9Wl6'fa3I*8JIpf/AjihiB8ZLU]S@B1'i:cUa_D]fDF+-H9?FlCuGYtF>cQ_U&pu'=l"tFiCaGk8gqC<q?Pe_kW%7u;pEHkl[SeiDUaeb9<`gL]k^)9`A9kP-7uMdE?1\=(%DE:66/nY:!9BXML;UHX0c>#G3n:[2#-R6W.RYLK#kR$r91SV8=D'E5Wt%C;A\X[j!%#l_H`n&_IUF'FNDjYt0ZVerm!t!5oCq+Uo\.4Nb?E?UtemhuD25T'Hno2<Y9]m?bAET=eE3KAZ,LQqkg4pIr,PeeV.e%6Ne'cN,IVhm1ub-?3rE^h'5&e-+q#P6\o9obQfd,!rX;5I*%MdV%'pns-B()pLam/F^_a93&O@tb`-/q\,S?R`L_NZUl7;2.\b#I%csDB'5H-kd-3=Yr-]n0H2<;['hEr1CT"n\PqQFEPI;nCaGJd-"c.7/BXAEVTdX3pV8uBG>iFT,7R\0;'erCYK5kG"RMIS;Y"EL;\%ZVg#=id,7DfI8F(*o<[\Rbcq,g="C+'-h2[a,u[ADG%@VmmlmUn;f7(((\GgCl='A2sTeJn&8=SFcs;4gB)bc_pqW4meJc9ZZB*F%_u&RCVQ]<_H4ou4c7:[[P@l<"qX3I*Z/2ET[+0<*C85kd:V)D,:dH[_dIR=Xd>p)8(Cr=(CB]+\=VuYJ9$YjS^]-Ig<emQ=bf)9K%;RbIre1OgcrB<EXh_'Le#A9VD*Eh(c\*o7RM2@`=8]k&cV=!:b;g]Kjnht/_/#?C8`QQ]Yf&L)</cLmmS5^>53raKY@X$fc-IiCS%ShGF-):g%UlZZ)'mKL7%5+kU<i\^iaDr\OT+_ectd:eIVcr$R5:]Eb/gt?CA:*p13$mC8L9Yj;=7%B73R2930&ns;ZG1cEBXXDk_%<in@O[L_3h\5J=,2XY")FR)R9V?=T1a42WI:?%:7EkidFI^YYUFG%o`]MUji&2]iH9!.Z6fo4H\j%EbXn\^6"7re?-5/5ie!7,6p%gqY/$5/cu('"hga]r#@IVOa2oIH^hQ^NT:i9*cZ!HgtFgd!FGRZ>"`8g\d7$o%))DaP,,PET6gP>E+hIghp3-BA.PmbqE4:ng5A-%hn$dAV3B$XE)!5q9:Ddl>aYD^pPce%C@FJEoifg2;u?@1AWorK42l6F1TFP61EFkmUuQb=@oZ\*>H0DC"J)/\Wf<c_FY@WUX)0E2%9:`4)eMo2MJ^*mHl+$K>K19qCDdX$NIdED%9N(1gZ!?^\T=&/*XA;K)2]J=%<a(<PTO:MUQ(+$R$f_LA26&5e'C3tbleP;\[o[Bi%ig/0IqG==ZoDKZR<pm'G.%N6,S_Qf;d;=n\>%opq`D2pbWl?C81XJ,(22f_hQ"sH9h5[N-9GeCG'O.-'7^5t=Q'0TI8H%CrSFpL!%"kU%oROVm.NJ8PW*eYbXjT8.Z2eu??kRa@]Ctg/!<sld^ka$[TJ;I!!"AEXt#k0,JR;5C!gjHC+^"D1coAoYIhl].Lj4<raG7af'%a_d:nS`3Km3Lc<u^5U7#DCr=6lh0Y^WdRKV3.o'ONO>#;2GHY?-a)d#2RkiZ,WOrp[mOOK0B;c*@mn3HWGYU]SNO1+m5-[ZNdo&i%;_UaITiaPD(/NrFDPKc3/OJ(0DVTiuEB@@]GbVb7ctr]`Il^>Fo^;2Xj7Pt1nM-t-)Pf)6D!qUaqg*28bDR;#+Zn,q*P4nn]<PP=%a174:YJHM[eZr<G<,u/1'N%=Nq0^.c8J_Q$XZtS.<i\&ID`,XUfQCB8-!%3-Z6*/?(-DBG6DIM]_BQJ6n&$suf2`DBDEZ`J[nQgL%!7;&8Fc]UYbsAtjC7LEh`)D!cGn:2Ug8\>e6Ms!LN^m<R<gn>96#c$0]rOp#ck3`Z2IOiE/]3Cfht9%rXf.;DU:Jik>UN8"E/j=+%WsM?8m=>N9\)6<<5g2Lr;Tm:-+0d)>h\3-o*)@)O(31A5dM[l0H9#V?/@XLcFp=AY[=?YcF3eU*8(QFoL\oEZiB>fu+]41dP#<e!%`FQ8P-e,@YM$>kS)YbG(H6B]S/=&,&CZb%a1o'b#bK'p[2RJ-Oe3!<DYdnf#4D>N%7YeX)/X)3pK01j_aKp2lg+C2uYkQlMZ>0_O%-FGAk@N3qQXMi:ko-!Gh);4joo,Y?qT;Fa#@nEq(ZrLmbIcf[*[G?=3O/</X7?=Mk4[YYOoDAF&=1jm2c#0kf(K[XZgQcMi:7U*/%Hs6GSBoJ-b5q`K0K<%!)YcEr1_>NEop,n's%+"`SJ<M(Go/Roi4"m/a?TuMcXnm^k:dN4sLuoVRK<.gc4_!)jqpGkRA^O'FJmMAc%dR.^UjgdG3_\[U8;f)5,9mCEk!`+&5rMuhA5'=SR&+M+;>Yk15Usu2q]RG;J]stsUfgbSr^`g0d!EmseeUQ6)_em/8FPNg\ohh;/%[XDTn7=4J$bMAl*-:b.)2H%\oT5u5,G&m%$olB*5n56%:]r>*4)+nGNdE?!uD^&,p<mh2'CLF"VVn;\B?6(N?qgM3(jf./7BS=u*%[lU/d\V"9)'^S_m<K>7T;jP&iWmU),RFnL32)S:..!d]&\-[30?63V'oW$bU>D(57%Q_'TJ^]LL_.PU:4K=frBf0t)kmf2Sqe8LN%)qF5hR075PeMONHe%N4k;;LG7<-t)%o]`2T9YdddrTqu9N@2r6`L(M:Ctje&e_=p8<7s1_jpLX<<oTlZ]oa`=\Ot\F(0HWeJTI#(%^6c?`msT$mXYc_6:E-Tf6k(u*ISK4a\5r"'9(PRanZ;K_mr-e*k#8<$2d/sWNG;U2<3+<[(d/.FA"7$OoLN/O(`*D#n+4QHZheYd%QWT:^k-q8L@i1IbOP!r3Gqau7f^;^?aqg89PU:''<bRK;&f9YsVTj.`;3%^MbTo"M9XXkc2SIQs*4CsRAdb)fmM+A_Vl2Cc!J90h%rcY8O*YjZNFkUV[$u]YdkETe0S?64td@<auD:qNB+%)f?C\(h.5\`L218UL&qO-)SBeutNJt_,mH<M^,p/(%DXO3"ScBUiK^`,Tf%+R<f$Yh#\:n\1%@r8kFo3N8nb]O9Nd5/OCkM46^EFWW?G-aba@fM#!sk"_c5lu[1@e?m@Kk*!0<dkNofd'^\H+#h:['-%2+@WUXX%`cg"4(q(?oR5mhCI%KS's"mdqc#u3];6-gaRWCHK(=bQ13tt>e;:eck+@Ir=5n$&U`dh^2B0+ctmF.dnAE#>"F<`b<9k8M($m^Tu%ql%rB'q:tf*nNJ(j_D,Egdq<OL<p1KI0@i&]k,V9@jGuC,I+A[cM5Aa$k/0#ULG`8!Bjn23)\*=.f*[tG3oR*[:8I'h1p%t&0oqF%d1<6VYHSqfWZ>q@U]NjbD6sr&?A\"+q]uVd][#3N<9*f'?pF)19B4[[2!R0l#01RXTq:#1`9HCOBZ[+jJ@BeT#4ULdHW9''gWsT%%8%(I"ggW*D'lA+'M8/_ILKiKre!YJ/[3::`[1]lHDiZtpF;rJ-c-o/Js2JHHV*rpk$,du4OclDrg9aMA/8,YhmDIOjogP<C4DS'B%PQ$k_Ql+EaHU7o]7%HN/HO1Z@'(nOn+-3JfQ]+X'[a@qUFCq&%&U9IPas^uXmN.?lArWT-T+j@>[:e,A>H+,DoYcB.io/TPTf*du%g$+N,nP,*om8C8oqDh.<\&NUA/+h;$%7b'":2&*$E5tMg@_GNn#>8u9p/c;'iZi<*CD3nAqg3&Wh9PHG[rUAY;+=MZT>2oKD4!Mc%gOMFdkmra`i3AEN;XNX,)4*0rQl@0fC'RckkhiK[ef\f0ADj8*o:`Tl&+XU"hJAEMLj>r$]1rm6XPL7e6R;*-h9%s%FZ41Ya"F<Z%%`2G:c]_D7%&ZFp=>+/`IU!lL5#_MHb'M5pA?lI:+6r783_[iRQ$mCf?fqmp4%IOur,^b-Ur3fP?Z.j_@OmS_':fETWn"7Lmi&=`%^MkS0@n[`WmcO6%6*!n1#oke4l)l)a1T0:Cj^2apGtV;0DPUBY*!pu^8W)//9MR22W4V@!bt>o\U/rldSEfL4/%4H-hVU?c5igW5%2>hG4f5kfpQnHs2YWfPS0j5ia7CckHI`)%W2Rcs1du*\?G>&Nao2lOWT8d`kWDDkcURopA.f<b3YW,F9Q$TT22im&uHuV*C]62HO%ol+rB#2grL\Vfnc(3A$#H0cn(>8<VcRL.(fm;D/&W-q_(1o>DIbP#^udrVEu7]pa$:fD)k](Ikhj()^(42OIA$.ao*X\*ZII6t!>%?#4`W!V!N1s-UIG2@Zfe5F^HX3Dq5g@+#3:dT4f#VLdPhH7iKLeF84JbQ3UUXSc1>2UVl4VYg=PQ<,\_A%5i:BO<[_NRDOA;:D9>%8)9IZ%g^Z>IG**uaKMReYY5(nb\feSda-&,:O-=s[b\4tShE!=8m$d@ntF3Bp<8n4.V2d?oL5:i%2oIdibdT\8<5Y?EY9&%lU1Eq%3KTFo24/bKK"?fl8jd_*[i(,`DHeoL(6Lg"Xg<unl2s0TY8,,+SrqXh2"M:hQcs/d_i:4Yq)gV!No^*SQ,/ESF)X9_5VRdeLJ_mI%Z0Oo>n)KA_OUL6qdk#i^?#0=-`D3-%1F=9b1X/^1Bp/iA5>'jid=WEg9'c9j`D#HaS^cnpANB@AHJ/'OT9])T<fS]+`Fmh>UN?4M%o5F([os=*T8MYC!cJc`_a/_j<ZpE38\[27h2a\YR`.]8@p%[/W"1B2o=ef5WrOVC.pg<U3jMO:L2>[5+o8u3Q-7VCTd&RK33I55^%3d?-$mE`7'ZKW"CB&M)%5O$0+"uas:;gg>r+PZY+\E)Ug4.u&l8Jl.-;$GchU[-jF><Ai$/(G&/%do@0<#*2Z*De9YAeGSO?Kgpj%!K<pX2=SYdDYr67=OBUOZNlGQm?es'iO"lRJ$qF'mu53dqgQ<T4asAISr.uA]f.9%_-A!=$E]n$gRXU-;ZB>6L1g1c**abUlcI4;%1HXm2ZCAfo\HJ63_o`Gnib]-7@C5nFCn<SGE]`um<5s_l]dYMs<^TIsqNL=@lP/Zq[o&j@=PqFhHPVK54X"CHhf4cChRW1Hc@^<O%Dlsl5hgNdfln!(V[@YlCn"8+54l<tsGNi_R;I!r9.Gm8DP1T0+]m924-%C<WnFt1oCTVJGD/TS2_aU3hl^l_br47/ofDBW+p%->n%[0LoFmBuYGi82?1g1oSMM]+bICn*V9?!)Hhj8FAeiM4i`b0%tmJZ]@A^N=s?F*mGkqXC;eq=W2@s0-lp^"+U=p%il-mlZcb]A&hQ%cZ^=8X#Jof/8cMUc]<f)qbor(lL!nuJ$0sT=5Ju*1u7U!VmQbBgRm'b[o[<g2X`8A\!N\NNu&SVA8QhDZ?Z!9dlXs7?)t]SJ%TdT%ae,RDIa<+`\Zo<.$fBMV4MLX:imB$\o:JfB2tX!eh_q*lT3^2R%_r"R^;#'/DJ=?&/9_mGUT[=78m<V3H7=?d%p'jS0<uO@2I>5<%Eb?tRo?DGBmbWEbpA+C1eP`Ak#+mAh[Z1`n[V+L0=&c<ET3q"f5!L]=<#6Y6>]/Bn]=VD%^[Vcs^U:NHr0/cab13tnf%0/`S$b<g%?`r6a[D*eaPe,I1B'ZSI1]PbRIG\HaD*DmQe^LC5`p+T9b4dF^HUYW^rl^'ibBN!+WnOT.&c>X2>g#?YE;eVDh+4pG\ifj<Y<Pq\%`ofDohNgC_&!!fB12%c[(\N;"akPEU8Nt:@noYu8l-[N(/\-hAq6jPtr(kpODVcm-\?UJLcA*2-,2n='#)d3$Yim,+nVis`G91Tc%^eYKtD8!0uo67[X=Cf6T_)'?In%CfD*c9^B2BSPR6p0oZ5$0CdIJ)9pUa'"%gY!.jMf,olg_'$)+i%H2\-J"&DIDJX`o`t_C42O7%k440&>$=/Cr-E#IptgpI>K,UH5<%ZNS(H'Uiqk\#48Fllc/\cF\$^.Hm[l$]DXbCN%ddeUOQ@!WL]3jR)uT[2cM$DPGDH":=*\`W%\@-XfSNjjUlNqt27B*t@,O$l:s&OKO^/MQ?@XI]Iq1Y@YRV9nAHM'AEQ.L4$^Fao@"*u61inEZ`kE#:gkFM&!d/%?42%R&*mp"BL%e\9m#48I1=imrnUi^rY$_;e7.qsQCS=Q%#^#MY`:4)WrhZdFRmpTITcbbc2B(;b+;j3r2'b`X#?HCg]ESua"tpC5/*\C4^]ZFtAX%@V+ABE:>$\p#kKCQB9tfOPRSuhHme@]Tk^HHY6Q,$7jj;Vs4`\<s'_lr`0mrFA6\Rg'p3PlaQF4Vd"#G>'dNaY!*!WqU]-LC%Z<R%mQ[:Z/`/^KL+Pu=(;IpD/?U)-/Dnhfk#&Lr;>BHn(q$5PWnilRe?Rje>CdSQi@bErVmF!`CU^md]dZ,JG9/pCZFmE/N(]53FM,;p%.Fa)WhK`l>cAMYom9S3*k.NFmgDaK]jk<23rjK(\E;KQ0NT.ntLS22#\+(s#^9Ob'Y4!C'hUIU7]!3FI'Mbd;]X<$4o;U6h2GU@g%gj8ks.>`$"_2D(oCjYR1iHl.*?T*u?l+?UIMktT8],U'_#9U#*fBVo/,LM[,5kgH>hK\HOfJm)M<jj)4nX!.ZrPRLZ@X:fA=csEK%^3A)_>'fu2?#nBcrMhl'WM<3FH1CmLn)9TpX3]M?>%3i$M[dF*rOBTAj`qnsNRkkG4a<E&d7q?feP`&ZA&J>n4^?n5*q85ldoadJ%%B-D:9)!8VeOo;VH[e2']T]P"^#P;&s60'DF`ug!T3K+[H2gIMYQg^@H-`,X&&%c%raYur;Z<qR4\D;J=A2m:."'hN;4'9QR]gbH%&A3a)+53WlK06q-/@+pRbM,W?Dsdda+.?E\jFM"R?T/c:*I/UNkZ*5Tp&b3cU0)KT5B9Q$RO1;EXs(mrGMNh9Y\8c*#7O#"h5;n:%!4HX(-+t-0rDQ*0pNLAd3dghWMgO/?ZO4I:@6@;^dPNoDfibDKXM/jVY]&[Qp%"bol1F980%>uZr>,jh[g^oII0M#K_/4p8k,EPc%*h#qP?O\dBo91=SX:62nUWH/<8N*1\7b_YG=3D@_nrI7=O_b&X$Z8oMWskOMo7Q2d_9%":a(fc-9uk.^bg:TIfVJ6.<&]@=m>U]I%e',r4?5/HIWQDcD/Pl+`C)SJ3:31H]>!8q_.,e@Y*+iZ.aAuGd'^e$@@@>XCJ:$1H4o\KBk8,r9AekhfjKW+pcj\09c1A36>nXW%%XL'f@m`Ehj[:;DRl%`[aio.'O]rKuWon0_,lJ$)5ircFJ*s_$4,?h;:ZgsorrT3-JpU@?^?I>YfN%:^QIecdA\SRk>]t=:+,[^@p%\@,Buqf]juALVagFEU0D1MO8Wc9#O]BNqRiTJ;+;Sh/cFCfS7+B=Ik8cF=p2bIbL^p?#8;5OIlefR35KgI?KS)i*t[?@?m-D?"\C%88GH[[@6"-b8k(SgjeEc%j*?Pfl$H^HLHo!+12^W[^fDLHZ3mjh@5cLG,)flFKueAhKkXS<hLm)mmbF;TGI6F\<A](dRo0N9u48t%WnWMCX.BbCGgH%mbDgj%p\nJ(]!S?1[<;#u^DJ=99G>d;rhFIr_)+H[cZ//(%*b6b4gshBZc#0:X"1<M\-?jecVQiPs*V__Z,o*S%W32Ft@16kUVk3n$q-l_Je/d=*g3C=)nb0ug`D7ML%YL]V6foh7M\rmP,[[Wh55V@;ag>d*![\DTJ%bh\]r`%[ep#u`d-RoZVe+/,%OASK$S^0f(hKBjra[T:%Ho0RW_IB8>%h]fLCd'j`N:lmjr;`?+-2m(Gk=P9+UF<^[b$Xh9/W;A]*o++8k/mIKFmY3<qW+,Qg3^IG%XM).[Tr!'S44]U<`[;W%_2#A_q:!*^h:DcO*n'>'>1(5nd<gB'm,]7)M!Q1([mBG7@ISR&/9lCkq8"etGJ@C`HE^)hHYd6'Z2J(r%mhLUHD1DP,qtg"e]rQ?gYSbnWb?9&h]_=-[V8Dh`f=Php[.p]q$46,![CH54ec&dW[HWHj?Q%./j+aJW\jsA=Tt+'Ldb]gbI6HVn%m-FOMpUm`o=E8bjeN/,rn%X8EfQ=@_4^S'gem7,oNq1Lo\9FA\:H*NB_t3?2Bj^1/K9)YVUX^1(mY:oDD5FOUCpC+SCTTgm5Ma&%%lRpfKlCGA%m[!28FP>L+5.l%*'Lp6r*ZTU2YJ#:2kJmJL48Tb@pdJO!T;SLVJ-4iro&fPpm4XdG#!(i"eg&qtmGAsqflh9Vf5I#i%&H"5Gp+K(/NoP>%M@eFRg(\?Ck:>qW"L#]5a$&nef!g#K`XGms$LR.pqW+O0bI%-:U2$.PpVUcMkMO#Hf5>7"`F")I0&shcYKE?r%>'-*uDs7dLVa'l5o1uRE_e?T#mEpf6"Bb-G]8,Bpr8gD,oCR/!hF;X!cdt_^lUL8D=L:6*H4tb]3rHYc;%nG"D=-)tk9Y=]SN=L6%;HNk.W+R<##%u6'f$V/AQ!PKN8F2DWG/s3cE2#39p$QC4^\@*'/_'s3'lSNW3BG[$aXRRdj',`a45Sl\HmsBD`S\;Sl2oU$]>"!s%nXCJecYA`+)rg8^Q1`b<G>Hfa%dn#RilU2D:MSq60=TB0MEOcWhV3GOZ#CYHNBP`Y9BQQW_h\g6DZ%&[I<b_1?^o)^^,E"MT6E5d%0ATeeb)P0Q7[#f74OZD)rNU\HkPj_-::WPVpY&hqDTh)4nHNdZ4P]_Ep@cg-a7W]a971bSFpcuNRZk_,b&Yg(2m7MQ5!F7B.,=W5%4L?cV*Zs:CgjK&uX)rR;[l=>5H@+;kHJ43;$]D'X)B\u#fBDU=or>C1e(8+frd=%UpsJNE3a&S$h/.Q/[:C!NqS(V]oVC'KI1t=_%,mcBC7G$;j/9uMU'q*,5rKI/[r7f8?]ReIgf!UQBD>puA(O>CP8ioF?hMRo]GKkh1'*&oU"tP"L^6%pEp:$q12QI"D.)EELT<DVV%4Pp+daB/B9;eX2546uQ0cPj]G#hB0HDPp?H7PBhkq<L-:[pH/<DD]h22cB?WBs"c_F[7@XXfG7Z=.@7XQ[;pYim*Otq2E%rDBA"_%s79U`NROHQHH(9!`MlMmle`$=R]+9Q;I&eVTk)%X,W]/e3`oJ2Sl$F;2ih=TondKR"]G6iqK@>de&cc^m:>\MT+Cm5ld<DPp#/Wr%Dgu&>Hgn,HrEusqU..f8l[Q"lIi"`YL!A2BnOjAcU(+]gB!!m+m@Io1WE&P9Yrm8/I9F2R83M6uc^/Pl<r[1J`O);nC4i#T[H<LQ%2qHh,+*:Gk+3E^%c'?!5o%O%D?dDWm\c1n[riobTA*CmKf5Kt_]l)?ll.7`i2ll[Jj3M(GWahWlNi+tpc)72gmEN75gKP2+rOM\m%oAX-72JP=7`#uh-r^.c7B-0B;>4n5hSE#N2<BI_"H$mue`h%BZ9C9N-m8%)\/8egAZ.?Mc\[-S:BWV\OfLVX'-at5,o6rcNr0Seb%#ON=(%MUm3XbsObkPMFt0+_coRnk(W``g?;V"MQihL9-"[&_qSccY^l\GR:V`;@gS_.PG:\p"bhOJ4l(p<p'>ZrZ'uXm!mYoc8O7%Bf#YVg"M'Kc0OW-88=7c<5+]f7B_.6K7*<GDlnrZ(U$,$pk-8I7Y]:9gVL_Q1[0tf6@Gm[lFQ0?Q!6U&lfPe4J%;]5i31u0`qo5R%n6Yb2^Bd?'=OPoeGB3`F*MuW\K,`DtmF32c\*Gf,nX]:-lf_&j;#gR6^%mt37rcND"SWqZ?t6&`:<o7MYb[FmC^M+863s'c(lXFk%N(*cucec3^47^!b'"GWd=0GrR?<fpiF1sG@7RlasZ1Er*s4ocohLk)@fA"X?s&XR5ornDp&*Mk(r_<K"pH\TPpL!q0Ku8^!^@9[&%r4tV3noj`,o><M:1LC)s;Mcf4Fqkh5k<G3Gps,5pJ,.fJh4F7=#i_=\s4m;0Dgq<TT6r2@IlYMT=gihRp<Tnnrq=kJ5-EQ:LGs\R%dpK%'nS&_RXuF)d];P[Xl\kf@LS(20ks%DFh=[i7$bu8#\">n8J%.;&^\Y-XhO`X#qT"5J5CEDk:F+(iq;hjRq92Ugs.d>fL&OaK%nBL@*hgXKnmpGl4@Z%A%p\#F&q/=$P?f7"5s/4nkp<>`0^[]qQQf!)`F2.Y4Df3>ghWqBDk+0i3)M<P;@fQ"ckFJL>+!1IHmI_,.%PV7FOO$?`"S`BF0HDI`np=l3d?Q%!NIHf@Urpjh:d%5mHq=/C;e@1M*^Nk6Ts&X-R1&q66s/j`DrB$YMa8><gVKY9"j&^^"jj/=Y%TD:R@HhE`?p4j07,3>$gmeIY@op-]60n8oo?bN`ji,F28m@SiUa*PM4^@KGXJ+6kfGJ1cgr**NSjc!DPQpL?'Du(R(qNi4@s3!Lm%]`+rpaT(A>n,E7bIf+AP?J^>*J8al7o3U;DaD9[\j'TOqqYi+^qYY8=r=oP"gWpsjlGmheqhIrr+RC0h?@+^/m4[=ts7u8Yp[>fm%_sbk?GE6*\r:b^>q59HcIHpLW^0Q3[ei1>5g8Ai-ifB_?j0<fWqO+g"s2kl0h-oLAp(sn0`BQJ'0E6\)ghZ=2J,dN4Iad0NL_KdP%pL!s\kJ$tq\%_BnAInZ6^\Rakk>4t)r`_T(hu3)#^O>W2qoHg]^@ePX5P<_H5Q%utpTOPSo5F(Kkjs:KkI#N*@l3'?e'0`jT+lb@%O-*ChlSDoClKdJ/Do!IH2tFl,nLm-,h.o(js8?=)kl)m<q;n7Kr;!s3c9M:*\).&-IJWBhJ,]c2s6]e<s8D(Q1s^sTduStOiB':"%iJ7Fc[`.-e)r:PfMr1XaLfZh7V>VM721G@tqtKf>J+p9fr:Xd<qW#i0IH68Mardhl^;@/MaCW,qK@_2n\6n1kJ$[tb[m,99=-'W\%hY?NNj1?u%h>5ILs5RfXq$6A:"L?N]rlKM6M>I2Da#C0Qros0\@%t<82uiTZn%SJj?[q>9[4f8oNAoa^?i1.7mk_`8cb`r#"[mk)%c(C%1&`28(R!SB"NIUrIf2XI%ebaY'q'3B@m8*,gi>;OjQ(Peb]DpO:l^-K-O2#u'mIe(u^\sqrs80F_iS;3JB+Fr5J+oT8ofp=2%4MC?)J+;7]I."bao"2B'qrc\&hu)9mIQ`/W&)[A<1@^F#dGNgHr\ra1gHD),q?Lrr^H[5@Appl<^[h&IrM)%FlAb8HouGDQ5CDLh%J+qKa)h3#Y=0JH]rnd#lTE"2J00f@)It%'m+9)-8:VS[3DV$&6heULBJ*@U-gQ2C6qTnWfqM3rj^A"lYs2s6u[njd1fl+M`pNQGa%&&.hN=.]F:3-`2`L0lJ2CiB@?]5P0FT(+&?qu[*4?iN-:og),tYeX5&,F@`Z+2qL!r:Wp9nfM4dj0sO4=5S>e-_L?Gen"Qb\,Pp$%IX/W>]lWQ_s6)!5nBYJA:B0nZhu25WQ=%9<+lXPXi@Y'!qUPTA43[TWrdfQG's$e1rq$a$=4EtQIf+o/^\NSkBAFB<\ED4_s7l<Z%f=nsPp$QIAs4?Sm\,Z-)f<=&c3V'njY7$\HpsC&<rV,LTeij#)?b<T85"^f]$XrI)R=65j`kB2Q^\+(gSjq\BI$,fNE^SfHmLT1R%g0Rfb^K7kAKuEs7h=d`>?H-L2V*+5!cM+K`qXh*1TDdHH5'QbngD>[`rqE&<#3FZjGjFe@G9#b#]7.C'I.t^)V*D!i`XR;`+ma\>%mX)_JUZ=F"W[P=Us2B,YI@.eLJ*][Nj7hErq>ZY<LB#kP4_s40p,Dm,7Ju2&4dM`8bPC&j__5@Z^"f]V-iM+-_LLtu-,.\(;#C9!%q*tD`;\WC6(S<.:r;Z4YIAhYpr\*Z^rP./dq^N+fNHTN<>'jpaXo!geoA]?`maq-_Mq$lVd9b>s]fl!gb5UEB$4j8(]P[>8Q`Jub%ZG">n`&/XV\Ct4<lf"j8=1uVk\?9iG\51<ZCUJ8.5M!^jC#$g.l:bHsc)]b#BciT]k&nq\qc4bQlFPW^`2r"eIfF-DZ-UVZ@BP%R%I@1VRX`jI:,3ACBP&@>a<cqC,&(f0nlLg7A4b?UI%qX%7V5D)AL[r0[D6%787r7uep[Y[cF^MQCbLc:2e'.^-nrVSX(Zu[5/sRJm%?^Y,#3e-#gO5K93m7[,ZS\UL3d`D=FH2gIBC"7u9pC6GM^)q9c2Wo^!?Khu+L[P1I[?gbiqtB>,GB:O$Pm02"o"P%nMj8ElgXPt/%kC2XF*qJ%Jbl1GA<:huGD%F#2J(>+iHN1&8I.o-S>\3Q>FZiu(Y@gOYNnO-F>3;i%lpLN\m:6">bLtdaY'RSWFR?^!mTN9TY4&En%T(uW.<dfl(Y<86Xc$i/ok`EONWeSO8p'A@t-1!]Bqqe>Z?.Va)DrY/BD!'F>`r=_h_3/hfaSYSNi_`b)6Z2cVO"^21o<iCL95!X!%f],DdrS2bphL4k34tlT!Co_ir[]qKIHEh$#qH[J*R+Z:)-0[.qL>@g[9&FQeF2.VLVR6%-moS*63)<QKSbC)q6gq,ADgC*ggg=dg%]DZ=4CbkY]U3"%!gOiOdMKJ4d=bbcuhOji-dauAfokoiMCZOL4.W`Ah4j[*g*TcRSZ%"8eN)k&S^1Jh#hUVJL3]!u+0sL?jd$MnA%/:/G>FD8tL4`<0@[VbAX)<FULU.ej@J%jV0;1#gL=nMW?hsY5>YO+'4q7Za(=50@BCE-,Qp=Pibq&<#PK!^<tQ'hGY^R^\`nb21q%9l9X<5P1D5)LL3!IMG?Oe7Zo#Aa34_Heh&4%pge*".JEMP79Yt2I.i`IE*YWFKPKVqK@JfSN#tOO0Q?99/D"2OHoHH0Xgp'pKTBJ%EPCAFZe<bjGJC#CQ6qZiaOF[*250h.q^0LooUY`LH<=7r-e\Z+UHn7QB$K.rLPFHq\,G`@e]Z9QJ&_FQFlFGRfa`)LKX+*7)Z'k?%")s=4CHIZj:V,EG^!(p(?+K*5J+RN;k^D^#qK<JIa-HDrh&lDaqq^$$J+cV&iPaH>p9jY.kXY=XD0ng$J??1f:Ei$*Rp/RdD:t\.%@VMqRm]DPMM<?8;$f8>ZiV"JB_sQ;rG431S8^)NED]O3-XVj:Tj)8;2*U1$!60RL5q^l[.p*;dPfClq>]P;n`2.s[+ICX4L"5^K?%Mf)r6S"YOF>>!aiE=[bY_40;IS?"m/p/lb=]IS%2lIHl"$%%9UVO,'+]B5Jt8V9Oa>e`+2FaqRb`VrF"P.s$OCtmU#T5@a[_j31&%C`EAdIE%\%I!P5*<c,t%^U\2"l^7Adl;H[$G*H7&9\\mb)V<E&lFnc/Bg&/[J`a>63@qKi:$&2DN^qkHY%sSFgJ;IaWr%-Wbbjb@%R*g<VZBmeH[F`jP6/0!dIHKqcRc!;^(Xb.=b:D3CfH^&]S@AI@rn"m)Tf^n"PbNmmFJTuflr@0HJF7cFPP_nCP1k;T<\b-)m9VCs%WI(q[Z/=13Sr%dpY#tD';HVV04I9N:U;]hb9o4;a=BN,BV=s3Gp@KG/0)sT'h5!'/2&SWQ?`UH;HE_3YT3>!%Q$4bVg:k\)n6h4B%i<M_[gPVlG8:7VFaI2Gi1s;m]DbT^":$_(Q\RKm752tS49om7VbnimHMf58R[J3V--dXof^HpR<l\E=<mK(d_o:&C>#([u3>j^+r%co]Y7Xk<*1.*W.G*Y&qBVmfk'+P`Ts0"L*2+;oK_O'94&^NRQI#8*+c3B^Z).,nPlQO)WW-5U)q018K&@pi8&[#EJd::fZ0p=Tks%^%UmiVtapeWg2qlpUI;F8DD;u/]1B:qBW<!K/`6T_cF@0gLI[HXd)'IA8?NeKWX=Y[Q5ebN"Ao_B\Q->VOk((bPIC-PSt@md9jk5%<C_+s_BUX7HOa*dZi.*iaP$$#0+N=A-7mp/,V2"t=ghjrbPB@s"gjO"apJH_P[iE'1Z]AqM(D?7D:u0_`5/5G(A8<V-0auI=h[hA%]Y4:9NUH%MVtFa6H"OaC;40jucekm$<YW+.eorh-=DiVKm4oDfb6<%o_POS6mC<e/fcCkQCE=o?^Z<N1a59Nd-PkSl2)@Ac9K_kU%]_dsV6l9>>]_B_]?V);AQ5uSLIZKaa^R)=-kWTaQa=$>A,*#R.]Ao>#4m^qP@+_)bPfA'\cL^FAeFl8e.70O$D_eE!^Onl&XPeGd%Od.qB.b==Fe5W&-TjVIf%#l*OLV28_YgZopL[]YqXA%93b>dgk'rT5B2M1J[&ZT5dg5#'*m#8Bngd@S#-n/QXkH)6Zm$(R`mG?l;%^Mj(4S0O5A4/0F`hX.g^&&(`W_mJX='fep@WFb:hXteQ$f!PSH<CSKS@9.9tXsHkM7@LH,UbqkdgLFJJ7P00QkIAtb<*3V,UYEJ^%i`#8h'!WIk:=A/5rR+XneeM$5V+J:+;!IjWBmE=>F\>K5<JTOmpjb"WPd/CTSX=.><EYWg3U@O`OVKZcm3)Rp8XJ.cH<h+5kIoBf%&hu;1'W55n3-a0`EV:>U]uG?qN%Bj]mkrpF7Or\pD']^/qh8!\7XNBu4bCM`KONOG290N_Z*&>aX([f_^uddjjn_&_Y3Di#=hRXI%>4%OKA38d^ChR;.*S'FT?6h4O?L8`5l6Bp@r15Wka7&oaZsI!j`Ca291!I'@k.PSUM/Cq+=gtd$Poo+FTdS$,T02UlSS=XRAIg)H%P,5MgbPotTV><UmR*4U[JQZ`UNd^*EDdu9f$tk(JIDn@j/uLC)G#C\*jVuiN2Qo8%CNJW2Q8SCE?rbT0\ICRj/`fE?3nq#+bL/+H%8j8)MX-H@u'o#%g]1n#43+ai9g[hdAik-YI<]5LJIDnd;mno;b-_%QRg<S(rm><;flU,I%\K/&YrB&b`m"Kan>1Xh6gNR6"c*cGt%5',DKDNIEW[:feF3ba)P_Ed#IU!3It[X[V\mo,)'*p6]I=)6*XHf"4+T=9k.ZI1774aiJFZ(1?Q2<$H]Y7deMG1'M/?jl!#gHY.B%aYg6D[J%C>7&AY(8JNntkP]:ZGf"&JgcZ+9/DJ"<oA-`>nSPn@Z916mL;8(s"`'.eZfK,ia)DZe\kcK:'"`qu:-FqM_<N7Cj]_@K%hf!C4daYA="od0C]<!O2B1D'5"l3"r]iIkE>&;,V9[XrF-u*.plbcZ3fDU4":W"73g'b(g76-5"*a-\.q=]<R'75SjZW5sb#Jj6H%YTHXag;O$4[l6'gA`'<PgZL'UfYQFPa>3M2XDP^="c3s1<Kj2TI9MV$::@iVjh#i%!(D"abB6OIrH5@ZIuJe^Z\Q:#`)Fahs*)(:%I6%B6<O]YI9_L2fR!646?L193e(nHlSe^k":;?%?V&r8`W7$3Sa4lfLQc)"hM<EXZ7bcs/8+"8gDbg:!0LNG^4<jjjW[p)46PNiV%akIsWJApMVPjBiD<kM%pV8O#eN`@P<I*7U)f`+k9CS/A.7]gD%55M+;43d^^$NYtZUnNj_f^fiBSF0H1bP">*Ag,DkQiR]jC5IGr%Y+dE2OA4#%U&L9`OC8F%)OC\oOc[`44R;aMm/a2ag6Nb8@TaT[r].)`pH)4-c4%L.#6o>9V?DSa;6KklnRl!oh<diP6d\Sl,p3nq%%a>PWofs3bHf^S@"bbWpf1/M(=htH+Oat+l`EkPNY<3`Jq`X5;$P\M$CQI?>gj+DqPbL4"k^(GCXA(_E5'%4<\fH$XE^%5,j=#T6%lptT+ghJAt9?DFK\d[:@#.i)um^K_872[=H)VFl@MSV?A@23n9j4b>>m7M4J7a>O$/^iSuk\1IN]g?H".YlkuQ-lDH!VhlKT388h%#@^[F[_<998[624^rk>senpIK7IJJe%*c#eQ:W[t_Bq`\'($"VQ6)V4)c*nj`%&9VFAfr%j]!f%19j.IQmsKc+DEk6fVMun0\5s4%b>*!_e&F4af%X9/$j`(T)B>X@hs#^7P_j20`]XNA^bU$d0=L=\XZON7BPu]LJI=A_UM["gI^ZM7b6/.kcjue?>^9c>_U_W[pRPr^%0WqKR(T;18-cSL>CrEb3H'PuYV)b&<I=P75cdsCbR].<dc7<6/e.eit?*T(QA>rB)''j&P\Di0SkRg*;^6lW5#OiM;Rt_PNH#P&6%c@cq8-?+un&*2P60VlU!n.chD9TC5DUu_<Q#5g*d>[Y0]BdZRlhuSf2PH`s)MdO3.<8Q;H?n["hlsT*=4p[WN,U?VjR%1n3='rfn%;Ik8L)2=e?=U(.O4`T%VA96M-.=)(C&0adJgR8L#HK.U=YGHBKW[(E.mb=%a*O`(`AWUKd\Af<HnnB4WJ.5TOYH7d3["=I2.t4CR%UUdQ_XDosO)O,p;?33mi([/m#EC"h7D/$OATkVn'+D=@70(ibkQ]ue+kXBBlH]k4kKI,7(_bq_WT6\GQQ3Xa:J#3(ON<pNMJ?$&3%$rWBK].^l'@h)aP4!J#Q^Q9Z@^NTsATeY@PJ6cP1b"bS%o4EQp:Y9hoQ>H0*!QS#g+k&,=6E"tE@FLE8JYb+)fiBDtP.TCUVdHd:%ruM+n@./[3&rXcK\#RGq%0c,f])!XecXEQDXS8k9Ku,lRG0IQ8Lad_K@^FTJ@-::T=:%q8fY3cWV>hTW:+B`?f.dB1!o1Lkg,bZq%QBWMWcu*b^Yj?mDnD&J@UR`,G\ah)f,Fk>A,YU[8X+3cB\ct9piECKnfS8qeaV\VQ*1iG]!nOti,)3Fh3,SQD#-c13rFD^@.IEbu%D<':BBXIMAW"Y3V7"GIJP'LO+q<`8"G&=mG)=+'ULNIfM*A+l]f+cd:itY;&e`;KXS<lM2Q+P*n:np2H`ld9n\8SSom3#eC#"jRo%26(thaosj:9Ajq;N[#=)kuJf<nu,pNce?GKG)!9BM2o03q%!EOFZ!2W`gK_s8B`qk1TBr1>f>$)<GS'^OmU=LfV'aRg*=ceARWXY%;'DOa:1XYfh57lW9HZ(h(:e,hi2h%k_7aYs%GdOZ`>!X)?!bMgg-+f<[A4c`dqRMo,qX(<J;=MUCKNd[ZfTG5`$b]&(hXr':o;n\%_lD.dn#_?sA67MPoV;UB$(8?]YI=gl:iIgfWu=XcJR\dTX4IWeF_X*I)FED/,1K4QT$qYbU*QRJ/u).c:^Zdj")GGG69E1:!VoUB%gnllpG;-YEXCSqJm+JY?PKpS+REBQ@Mm]okP.q&6?bf]"9(HL`,h;d?&.eYtatfnNes##F="/:K*Y21bQgS:c9Qs,5r8uIoU=OGk%Bm@G6(CIk_)>>E+$DL_=6N2<c\*Y@RnTTu)-DX(K>;7NSZPKjS.*@kdZlNqt-bc\)J;PG+MnGCRdG3V`[d*3WjhO?c;<encQCq#K%,Cn`0Z?b4$c*m'>K&n4AV_KR;X3S4YQDE:@ZK:)1=1/1GUkSW!]BM:X<]Wb8o6g+4q?7%2f*\,rN*5hrAk/U/DFpum?>q"[lR,i2%U55`-.or!Ab:DGJ:C<XQa9.boNoW5DWAAM2/BcGrF`&c3bS@.1h+>1E*9A]nAll_kd%'bie[l;"/q4FO)b.AAN-iD*@>'\^DkH'9%!uZ-[%VR"gfEas)0e5&q<6;cfi8bZ]_ut$'a-Jib<H9WRXuEsZ#-E#b7DumC(8e-%^^]Sf-b39HNqD;M\.Z=r>d(;d;Ogu<!0ohZ%?REYW/FVQ?GoPoe'Od!l%;e3EjV:OcePDLlauiLV9BWEI8>C8T?+bJS4o/piUQQOlAUt,0c#$MpRkerGF7EI>(;7B1mn?F^MCL?'%T$OO%]^+uP6?[=*EIZfGC6iURXNYAo7n=?:(7&ise+!K"nMUlp?AZf?3Je=GU3BR3c!;4N@1sB<>8TN'@A`<LMRk4o!=4Bc@*Pf5%`F\Ra,Z<C7-1]oTDAB;@L9ljqVg45&M^.E1d>frd8n2\?FB-(QRH0,WNIHn&4ao@e520gWDW`1l7RA-9S?[D/R=+C5,spQJ8u2La%)(S@+/^2=R!b'\G>35655\2!>jf9ceU-S&1#rs)IjBSe(Ko?BI3#CglB)7<@<?88S+]!Qhe\NkR]$p(I?%@Ho6^/lq]B5&?"E'<\%=qdN!C2/,.Z0#-tjZ<Hop4oe%@,$k9_1=?a,)K;I1/W$@_*+8R=\IN4oqg=2Prhj=(stu6#eG+`d37QZq@uL\$s!::fFF)WQi3*@%H?G0M$ig?f%EkQY,T0DLgD)H]&Z_#N;<$GmVbgu'>20H<d<S9@j)uE,>YQ5nAqm6ZVq/KYm<SVLX4OY1A)#l"'R#HU$"%#:f\8P\%AQ4r4l,crN$`-07A+h[=Oi79VTX,NO?'0,ZG$Q6,qlBCdj[SjK?XZ"nK0ia]#IHqh6r5s2c32YCi``fYXdt7sG9Qr8Wl(i[YTnf,%h"GBU9RNHIib0oD'][UG-=At;#F\/eT_,*L`1ka5(iI+IHFLR-20qQ-\PO4dWZPb8NE5.(Q:;@OJbPqIGc9?G@aaW=WI.ps<ba?B%GB1Hn$Uo*-]N)IjQ":*$WM>;'pIuONfqtd&ETftpbd8NXZ#cH;WjL[HV-%[9RL2#_g,#baWD)TNf0i6`^Fnu@b5!_NKpb^?DTRIu%HW+H5>E"`9J<.;K()hqIC+"m?]8fT=CjY96;@E\^d-n$2bMnM<,tXdL."s4OmeOC'f0K);7oFKJ2o6Gi$>LVo6s"D#b+876ST<]4%)J,ls<mcl$MT5D?,WT`RcIhkJ#$SQtRhcZ'<1;quOA1%j653'8cs?,'&Y<VBgmUgH?YAeMm`E8tIcGSC+Nf8%mE[!61]g?.]KPVk%YQ,U/n!dN$!as:jfP>nnjXt18$@j$1TdUh"<9oOc2GR2mfurMScn_nPTNH6Z&3Hk]Z.b5O:^^O#cF45Cb*/mIg`TL0JB52LR@crb%Vd(nj#LP/DG[`5'i1P=JQ&(=eG'Br4'Kj(G$t,$2\e^E&0.rMKI:h?*aComtX[\7FCtXCq]/nh;j`Jlo`Q3&(8<K$r7Fa/.%Al#p%loo?kq3_hlOCtRmT1gWE(CQ.:MV1!,'0D.U=-%CE%M(#Z1o6D9_Xu!6!h$@L;/diXWZk]2pXa]5C')b8A.&<gr1H<Q$SiKQJCIcd%aTVID5pXAQ%OI'Q)QZuL[BL4-hh1)+^eI7'KBQ"9%M_!(e&o/0Z+>O1<E;t`+K7*WrLm7kn6!_1-_%$Z#KirJR[5i"CoZNNX?tu@%f^g@-8[)(WXtj@E,PIUCWWP_u9MSakm\?e94%KHL(1W.cX#-`H<%Wqpp>TN_\Ph?:2^t28_@qf35)MOC;:(c,aq!uAimkeSgZt5b%q\Il!cT!T5dfg5fFEObkP^cY!fC)!ZU.1@ID+b2^<-_@nKMeaU:?ime,*i+l'Sih/&.M0lQ:bZN.f"0Ojq8%(R*B<+i)Je2@]<i:%rZ!D7YKWKH<*Re?dCX.%fnm9!J9!D2)A[@kU`P*1'l\mE@Qal#2-#0QHpP!][nr2kWJMg>cVVd@qi-si?isX@b,L/mOH%m"Z*'rZ%#eLcQ6%Ip>#r@duW#fKP`\gFg<&&'X/5tlL.+Fj@i\)6b;W;`Ii+3=J6Bm6Bqr0[dfPKUC2K>GuUI0<+jjl;D1`"0@@ShX,.<A,^%<iI!"I=+>hae[T=m9$.hEd(7g'+EqIdRV4VMDt8Sb@6L(#54)O<`")hnK)83rRp9,MMpR^EDXd=@K7G2gHMeBj\nFjW_TV39%*s+%g^^DR0qL]!?V[N-WOSIuYq&LFguQk7nD@Hf&h0bUB/KiTlFaOk?&E%sBK+_0`j5G8qVeM%B'(KgkEs^$r[;Zc$F?'J6cH,U[0b=p%^B[>jK'mXgXAj7FT3-kB_j;s$.B#.6aWafbS.s=Cophd7U0Zrp4Xc5Kl8-CVAa0FpF)(/LN@i8*Ucf!!f_3YmG+h<69<tDfp<#,>%Ykcp[K<%3hQUEO,haZ.r29ud_A^f'hlhS*Up5FBl"HLn3SP??.!kpN%a[MLj?#f'kcF>Aq-U[5)@p@LYoOqlVBH0ln*A%g`7HAQA%m*Hu'RoEXSo,ASRY),'gdg9L/&8GU8$9$^&;oE5noGO'u(;a\PB%l@7A&4lm@u_LLCdI@uXk<7]346[Y$Iu)];g!!TE*@I%)3,Pu%r?QiA]9q$DVO;u._Pl#eh^Ro!-iDY[6)!kCFsB36C"G)&fb9FU_hP6V._p&eb,S+8">3a%_V_ch-!FsLcf`Mn)[Y>>RCNLP6=0nn%!HOr58dCH$271?qaAnid[R;7d\pK-='fi:2YuKc.4"FV>(%FX*09N,p.-nI%8!trg3tX]G2+"0L$uR#^_`/OMM73T]'$"ok,J_!a%B?5MtnZ/(FIS1S^*+rfe2<P5rD/N!]bmX@mVZK0:..2[_AXV#He@.-&c[bVH;bN/215o;&?@K`Ij(d2V[p3lQ`j&\"[ZPipaZ`rV%@Hf]3pf33Trmb%eVoijaMKdK>^3oktO1N$\4D0\DZ+6YZirjhl:?"b&2Y]$E>cNAT(SA7LeHmJEEgM,fN:J"^qE):rR%X1Yl\po,%,sZ;UiqAf*7SYVfOjZIO2RQ%+49p=&W'@+R`PT:O,rT`5*2O?$Lk9bf:ZP)`.R:cu)R\WoB4$;o"WgUR;[R-VR;-CC<k_Hnj%j\A%gD?!8p9S(:-"[6WBb34H<34tU4r2Eq\[XBDIo.C*/qT)4I,J+kkVu"c`gk(mmBrL4HQB&5c3n!jXr;G7&PfU!/o8U9@/"=]k$q4o%f,efWorH)(3rohA3H'tV<In"kJ+G?F?CEMKn5Bc'Crs&49K.&"j%gSfZT(hK:a=dG;A/qKU7^R]JV;s`=K!XBBZnbgfHcD0%Br:u%R]]#RX;47t98M[1k>K:YiK\NJ8t@1L"N%GoDFgl6HKQ#JYTC@QeAtULX"m/<7\f%WBQ!8LT\?_mAm/XjollCTX.2d.Ac0Rb9#mu8%Pfd(Weg]TRMFn)Opq!2I:Mh?Jr`%6%X]Wi3K1<Gi^<FUkVjP@HJn6+^gn>BF7CYEK0qM3oG.X'=mJUF7.MTJ^1PL!3ckd:D+$ZH5%9O"NSY#C%$#*/h1!t<F+T<dh)@;=F:>5*Jmb&?/B_.kEd^u/.t]&JMLe5=H['#[]+9n9G=Es`fZ^U@_-O,0d1@!&Ek*/?e8k=K(4%@>!2W.fUJSn,`1[;nSte.]X:LcpCOU]gqCW)#l4AC^\bS!0L:rSE.\(=#q(pV.tU>>-15"25tXmppR(oV8Q!A8kJ>2n75?8:2Y-T%N/$6r<0`QA*=E-fO2RfmM]lIO]uIko'l6t'H*o+,#c(\rjD0'0q6Y1ci%F"]D!-uj27d67T<QOgZc%-qS-4_TibBi-ANAKu5[^2,%<bF!/npsp+b!.-T9ohJjJIEFkp<+Lb\YS.D#";gk_.;qpM]"6O=\=mPZl008dM(hnh<%?b=p>d,SH1gJK0Z^XC$JC$Eq\&05R5M[%Ef7JlJ)u^D1laEJQJgrSHWO5O.1[)9:(+k[namq)jt+K/V.=oW4MPC6(e_7)^uc$q^&Aa8J\t2<$EsjX<]Q4k&#KV#NjA+=(oU(j%")%q-G:0]WGn,4M>c`/]6Pd)>Um3i5>qT*f;d_4VA5\Bs"+jXDDT=di#1^+_5u4&n8,mM7hZ:AtW[`e::TKs6@i/3\IsU'C]bH<H%f+Q8Q:?^a3#@$E]GP=IF]2WXFJ=Hc-1cHpSG,T$jaVDTT:V4MQ.t6:;j(Oo<KTe'YgkuFf0U`sLb/lF2L'8^IZ"M/J=roYF+sRVk%O40Q`WR=X7L+oLXQO+5)L8djW)Usd1_j%Ps>*QiD&Gl6O9V4B;$LA&NhQ;DbC?Ta3rL-d.O;%5KkAiYs+urZ>l"Dn*5nR9rVl=`k%;b^M!ms!qFr=qeaGj,""Wn^"_Wpn3+Zs*;2qIud"K>:kiUBdgV:(YfUc-+IZ9Bku"8str-6<_\B_^P*@f%$k@.^)lqe_4"X0(CYb%`MDWF0GiUSa"s4*]>L:2*5ZK7Oh/.pG*q]ng`s;n:=#I^c)?kr%lWLl>\&%C.L3Ls<&U',O4qBCiK>2__(m(S:[/r`"e3$s>SJH"%lbL(=S!8lZlC<VOi+i,@$D;FI%`B)3)<0e^C`>Sam/#9=S@(2(AlHd4V9uK0BECgbOY25/7GP<fNK.R"aea"$Xk*"@0DCWh+S$j(%:,4CAAhp^,1o(d>_Serf^N*#@dlG^MQEbm`_N<Wm`$usRM&bNY>f?)UKJ$`"7<F[6i-$?QRME?^gV6OX[6d&LO61VlH%p?A;)8>i%;'Vun!2!K^7P2So5FCS.p#%E8Hk(kTZ;a/9Kf`@Y'E1M#0VSR[hMiG!Q1u4=fJZMlk.=HIDZ!5([I8\EV\_8Np17JSUpuQ.`Y7-@%9QAE2jic&=LlpA3"WV.g5#1jWb.0X-[,HX_0"8F\NMn>,)Z;90.MC(9deV/C7jP`bq^/b2*-25qOlJbn6B?WY"[-!ViS>=9m^&Ot%qu1r@k^6&dVa>XWU-MjtJ%cG0,G(?jII\&[#*_5'o.mPsL*MT`KqH#DLeT%rds;Lq7LRb%%ph(XM<Mr)P\A2neLu?sK+?FV7[/!u%GdccONPu'4KbVdL?qnhM#1WZso]W+jaTSJES]PT9/E2fYGh2d_/4*J4JK^/,Gf,g,1sg@7?qG_2"QUS6785:SSO_-qjJ_@lbYGU'%,3gkg=U*3Z;VajSf?1le12Uqd74AatW0?sT&]e!%1hO3`O)(pFFf:hXc(j,3U@P*e-D4=d/+77RK`Er'[n<?oMRi$'q<h!8'p)B2%9Yp9OPR+Q+H96SEnGVmFOO;/=p_O-kY[FSUHEk'QlZ<o@AOO2K$4;NSR)CAu08b@/VM26EEV@SeU.(SA5K2qL#h#AcHtNM7_J_W?%BnBs>MJU:I0.N7N-MCmPO/fg<U40Kjp%BH/?UL7a23l7MW=.u8n%Xt36]K[&apM*J?C426X.-&'\j>jc*qe+44;_@pmS?j+>B6YF%7Q70N;cQqA.].6<TZdb4RW&p(2GBD',S0#\?Cfe;FPM&@`MP+-ja6m7H.'s?n1ndlL_<+uTUuc7;BpT%K6AE<'JGr=49KdGrecFe%eLY0]LXNYMQ@fN1*JU)]UctNpC/S;52+E^K]:r[?1T`+1cX>b"-s5,X><KnQXqu5%dBkcuRT^rk%B6cXjd/]kV'np8QJPo6.L2&8%2hMCp1@9`Al8qS3._6OC)?VIg[<(4t!Y-m(\.hHs7nW59Q)$L9d5U%*4Ls8!P_-Ee8Kk4kMb;es*P;W&&='e_j<IF/_RLW*ktY9@%Q^">I`8MYd1+kn5oa=W>:I4CWij:<"*-9RG7#'6G;"!$Rb2>qsU2CoAV0*+=#Zd>3%<8MA<0T8.c=OsnUKGQO2HntVj[:g2VY]*r%*W#eOd@M[>(8T"E^s*3,5JUm/WL9E@nHk[H10)FpQ]!C1XAQZ,D4;"*XJSf57Uc#6E+bqaRDiDH2[1dm<M?B@YeaNT(DNKC*K]+k%;c#dp$c;02;PiT2'A]_)ikC1#(4t=r!)SPGRFK?(o3BI8YbkO67bB>D#,0+IT#hamP5P,PA[rtCUKQ#S!GfVtE=<lUO"@t^@1^e0%FhOq.jNh"Qpo4iGY;BCZl'^Ydfpk*$R;WOp:3"==,*GE=_&@Bcr4.YclK:_CNASL!#a#+&YlpNVB5!ElbX+X7LQSR5=RK+0e>C)-%ToaLE)K]-#X^YS&83o'M]>h+ic5tY"l4Tn)Ba?QTg7HS_\M@V+''>D$.acj9Os0Rqac&X31_/<694u8tQ$emB#Kn>f4L$4q$\\e]%)sSD[6:2N\DRm;HB;qS#b?#47?PAct<s#t&'uN^ARX<HeaLDtENp;7o*k/9slR-Bo0pWRNJ,qH?3di-..pNDG]^NP4M`,+2VejHb%Ke2F4BQOLq;!9'=%Q18&,*FK`G%K&KOi?1=;$E(K2L71PF-Q<>E=9&9VH!,e.N'FmUIVTSS8>&OpZSp2D-EW!Dc8Vb<=V:`UMjP:%52"_J-*8Vid^#Mo-k!Zl=k:gr\l@f6j0aE,9?9L5EYSms\Mm,2?X7ss.;!QDZoeebWp^5!f7g5/dh#DNq?Yhue#/3MSpl1VJVL@:%4mY#IY<ut>rZPrIQ@7N=MF"k9;/k!JBr/gpFsLXD[?2cH=l`'E#,%9V$!GJ6G\$SKRP:P6+:R07S+._cAGYeWRLh_`Je9si97nsl%ouhGifrdZ:hW;-@M:XGDSteMANVHu\dc5odK*&b%oljP@H(R+Ch>'&D<=Rr:+`!u2n8LdfBbES2Ge/YM6qg.[@#Ol3oH;4En73K:%-+<-98^TLE*]o0JpL7TiQmYOBoPtIdk<F!Y3JF2KLeZuH0lt;5<BZLbQ)Y@X\t9Cj6&Q]iYm#cGic,IVM$A=dT^J)PZ>OG[l&b-a%UN?Li=giXI&tA.OW:`9r,%-PIG6tTPHRH5;iBSN/]U()(;H0^&FRs/'"5D_3W^T%H5pWk9.dh)]0U(;<a:UtC@8Wb!qnYaBb(F`_%KEGPS8<E*F!tD]LTJ"Z[r[<]:a0u6.^FHo=FAk'F.hmht?tM6TAgoe.CC.A@$mDtf/tQfeRdMlo1_d?Z.EA-5ZGIcb/[TG,,N^?J%`p:&`P![8ROHaKoe&o:@60f>e=^&SYBWj@'$E]u$HI[=Jc*kF$<4'DlI3>4TQ!fl/H0@o2:837RM@@asboTMLfeh@ck9W=N?IoZp%QJ=9uoO=\2`f($Z%J-qAUHnr\=u(>1<WAk5U$Tm\>/N*Ic_N@,"l;Xe7p41'_sL\;7.MI#5!b?"]%#&;ERUt>,4Z0$fk:ME=KVQV%ngngn@`HJ6WRm`R'qjbgV5gQ9%XRT;EQ^\!7fR[bKqaNi^)U-q,r6p$g]!E[0="6i[S_qKYg\l$>0^0d?2B7TV'P)*idVY_;AMhA%Jlc*N78`*s&<&'tpsY*D'$XCU.2J6eOosMIS])ReNoU?oQT7Es8rt_VI6+64LQT"tiWIW`l'h?c^ocK%TO1r'I>pi`*u,EX(h8/s%?!]Z`R1P#\P?c9GSH:],$_jR@A4_Opif8E8''V1m$Ms=UGunSK:cB46Y1qQG;S>QIrcCHoTqPX:n1,mHBj)s_=fhcNP\QVfp.D*D%VMWE@nH>N@3jV?G-_k@dZLh\dQXrLG9ZAPj6MNZOa4>Uf)C-f7;C)GA%5GP5;$(Hj0\sAiSZLu5A;GQ#LJa7L>/M*@W*R=meJ>]J%c>6C)\oD+Gqj!X0V-*PD:#fmfe!k3(WYY8J,7:DoXjZ9@bWl?C.YY<FifK`@gp!)K1P>PXFPBg&^qRsB%!L9X]0WV,Oj=f@MO6[5%'cAO@?0^D<(ch_lPr@gkTG"*T`Qd=5.$!+Y6p<8[/T:nN^VrH](K36q-e>7tL_\&k)PJgb1YmX<<K]Xb*BO#cH71D6fs*[Xo;ut7%AdINETA!Z"d%N6p?9FMZ96BOn?/E?nAI(B4jAqE<S7*<>EhCnq;dH6@,M8fLLIU5fpk`%kG#QtRTe%](M-/!"j="<KKc$mc@`ML]%Z-7*LaV0WE8kS8#iC&dB?N,Q3]83aD]pMKUW-j$9kWQur@"TMH19"qf)m/YnW9Un$VqXRp.3U's[T\^O&=D#-)`T`o%0/pq'PN*U%\?me:XObm>hdm'i;a,]V"^.$8fKIAOI%H2.qSIs?L&qIX\LB76UQQf7kIuc@l?C%NXr0P^AR5k>Y+S.t\t+fd.N2i/;U\mA-PsF`%S?s/j]bqd#EA8oLXso47$BeY\qS\q,#6.C=;k+Pi/A*5g.eWQcf0i7=<Y^.FJScbD1/_><BiHmq0)(7HeEhhQAc,>[;*3-n!&G3_%Pm6u)Khfo'W]NH_o#0,I$G@lG$=lu:C]R@8H3)q<qcO8I6G]B00f:Je56A5QI=[$Q!/$1]lg>(:aF_EX[)Jn-H?H*Z/E=8b"bCS?%=>jS=Ka=<1]q:HCTS8Bt/7X?^nH@?aNHU3*.]CKhm.mjHb$3&En0XPe,LE`Uka5]%nH:\%qDV9+B^4RjR)5R5S-H>eUM7<%i/tpB%YqKlA$n(j+!A_:4XE7>e7i3^4!uO1BWg0-^WbWr5(Uasi%$\`"(%-\@J3`S;'7E[*VjarC7[N%A>tf7G)Ci!P=@Y59Jo6>_B+!*[%4r*H[E(dGVKOc9B7N%\7rt0M)@)SLGbB'C'Lo$c<Yb.hHl_"U0/Fg0jY3nlN(c*BrcR7DtOJ,`Zi$P)96`+#^J%1W-.lAQE,R1ma%<o#"I/lX9h]-UYp/$P9Wn;qSsVDTj41JlL.+[]pB/m@X1ePb"*P@t9laK0RN9ah3flO8nJTjPc04H)HYnJeP8,rIJ<%ZPl_W7$TR%5gOW&P%CFI9D_InOi.-D88o<[B]?a)?qZ91#QRr#$jTNNONnnoKK;mR"R3(n^]>.Z2kiJ_T(n=hJ:&7),_9^6P5(@'qdN^iB/%CP%m0^i1L_'ZUNY9JF`Q2gcBm8kg4bMC5Z\%$S$HU(HO9HE./?\gT](P^\+]@ZI*""l[`2kGg8o*8"ZFH-::<j2Pp1,9r\p^e+r@4p'%7G,>?"(gG%Hl9)93R=GBnOZRR84k`OX:g5<>2586_$`P`d:ZgUX$/;X4pA/O()Ei1Ne&isYI^6F2(7i9N]-+J-]C?/:PjM$)u;\G%MMOmJc+m7H<7&5md1`HRpN'/2$6d<Vk(AW?>9jFPo()+(+?G@=NjX%^Y$+M,I0=!ZE&#+7S3&<t,mn/,h*JpQ>W90\N)*WZqW2_(%J$O7LC-N5VQ$\bK9'QWh)\2=pFX6^ZFK*oNlbsfEWQYmLRP!`cWa!$)*egcd<F@H2]shO`HC-nl;,u4EOX=c0>!O@"ZG3f)IZEM\%i\dg&glf2mF<Gs&2m^DkFn_%<m@m[`Iqm_9/P2i'4d.<05=aLLM3"TTP0P)JA$6?ZLmP*8&@*&A8PI)R%U)N9#B1SM:U*ZPZ(pg\%2>Pu5(M]WtN+ADDT'k$[NT09GjB=\nH$rA#KaF?M#,b#\,G[OI[]1D%9rAY_:3a:'E5\MD1R=La"Y?bH2X.PK+;dhemc.GYZB2#*%#\2&5iIYMD>%?@/3l2qQ.b,):Q9J-/iu0oZ7[>)@Q[qNd't?5<,&1ckF*!n?B#rt.1IW[=:1dGH@XXA,_iOdY<&8*r&?M/EV*0d+%(GZFU>B2R&o;/P8,h$Mr;@TUS/!u-cTt(n9XG@M?#mT_R=U,i0#=)&Sj=o8d;5AMEL*/fWRE,Vt#raL<QU>+1]qbpc;-gRZX`adZ%D'Q[QEu^tW.YlajQ'!TjO_ISV0+[Z*W51N1JGN+`/gaZQpsGhu)+D#skY%F3S>&5(8X[2(/](_Mjn])6WiI!/$,:LWZ1rcXmI3/(%mDY?tXBIIHOc"ceY-+lLRZKln>--&I*iuJ,TD^V#@EiS120l1MET%fU!eGl>=qP]$2WHR9c:'bi):`]WjfmI$4rD@n%KZW/.4%S?%_'9X@";=-98_oT1<3WpWkRP$9Dn,=(^$_p4?;sQ^WD?39`en"V1@cY..i$mMZ:+D/SJVX'$\]^bgD).TINFVYMsB=(]\p-X:i-BM%0-*T_Lpo-kg,YA_ThWdJCbNY)JtCZB*/5B2pT0KR%VKEdq^j"7!n`oH)ft!@*T-F.9+b`qV0YTML;oIeG(?4Rqb5K1BmMQhXTN/R%8hXOZ]s9@C0[GjUd96.hg6u6#PYF2GQ'@i+NtcF:Vh*as%Cn1djU_Eb29Pl_U)fB[>VR_XTFgW=C=LE3dB(k.?_0ej$?.)rjB.gD%J!=eqN,'FX,`m[IiWi,p8YRH.rtpYL<]1Ys/!UQm1P*6VJ$.k2H5S6n*ggTG$o:4RGX""uR\.opBX5],s+tt,?7NB$JX3>A/,&NX%?O'!L`H*iEU'AAmAs/VXIVrs8ITs[Q(q6(-QL2c*!5Z!eP7iHm:De:@WIW._LrW.(U*gBT%ZjC(9$!J&I%uNJZqV>)4+q&d00r@c%r46J!DnC#Jf?p+d.WF'-&&BLPE9)ZtFNCIU8ku'O$:uH+[$uTDl?+Q0\O3\q/E@gtFj`&BOVPA5RJ]o$@r$cgT3#7hPf'<8A297p%`sM7^Dp!XMokpB?!M9,rkQPTHO=N(cYY1B.#eI[LN6b2,6rmWI7rj-S7Y+f<adI.\boi\Br62&PV(Q_MAoWCc6lEF<-+"WIPqQ>A%Q3nljK+k/I5kBsNcS-^3jb<JO6ZP?<H5(:.\ag.]HBaiil(AuG)mBP.)C7uI%MX02jRS.H#UIP%`#OJ]l(lM@-1c[1ndGD7lsO9k%H,X"Y_n\96!&buGWHgiV%GJ]TV<LIi"L8MR@`Ho'?KJfXDMP.E8]T8oj$VG86\\%$'9lVq01IS%hKRQr1p5ZB/RdF(@D@0"pMnnT%K`W[$"(JscV`JNe2AY\A-I_'OC8i;5bXJ<B5G4/OZ%\..7+SDX$$fjnVSjn&*`4&E'q#9f2%c]:nN`em-0'9ZkIDIA$H90tXkb4#%oXegAMk4[R)GLc7I9NblX[MWjN%43ZOaO:pn)tO^[kX+7<E`:&09b@?iI_[TPdVSPO)M,`T%tF^[b=JM@3ei*b=RJ`X\?!`?A^=>%'PEI_44E:;Sl;EA:#1*QZAq.,Y-!O'>@^0k3at4m1p1%uRE@ceG#pjZE$g&_UmS(YLDDk;6If>!=)hV4dY_opMM-Gjf<rJ0d(UN=%pH#uk41+O5:7aCZ=!ET)1>supp!W/G;_<U!Q9dNX%Cla0eJ18V$HI$91npJbTpT6\BF-tc9uGb>/7_q*O9;Rc+I1N'U\2-H-$F1R%1brVLrQo+6a%a41#UY.OQKHY9,5+m.FLpU;d"R?jUo]YrMrhRhFs'Uk[="J>.XI$2,M$Th`@GJGbp2VV>GmXHTL@Nj>?+X6mI.rg%1=K!`:?aL=U6>UNHAZ\53h4OHd.oFj@MDR#FlY-lil>6Hl4q\J`=#gX])pZunJ-q)SJsLa/VCE7r^<8d+7BjLC:nVO%+7)cHU=Bn%?X$SAVRO%IUG7(_NRO<%/(iYR/e37sUfjR2,>KXDSn:7<-!+p?.LU_=I_p2loN!Oq`Xa<t2VF>#&&X>r),Y164/>-?mke96a+"PJ%@J!H:"f*b[VQ3Ei;qGCnUMba/(ao(0-;m`n@+MM&$uPW+@&ZZ.C/T:S!]Hu-a1,aMX=&s@*-=2^DDNFW92cH+j:mT'Td(.G_PklY%#g5f:g29'B*C!OKEahNSP8ONaPj>EHh%]&me30f6Eq.jJof=+;FLT8Xh@C_tHZZ)[qRC&m!I+_tD8B.o>uf"4V,u)e.qs]I:h/Gd%n)G\p`QGR1#Z;,5B+eN/g8qMbDd*dO;\IPPj<IO1Z8%+K#c7FP`sl:14Zt6mKbV=FUo.dG]'oT!3ep-[^<"u,0X\HU'g/NUr%p@G%\jcVbI&pL\ZgSZp?r7J/JR8fDKHKbYc#MErM@uu!g[bH3i9?LpaY=,_,5;BB6u[&m6d-[aX).%O8t"2S<8"[e+!?dgr$m&)ei8l,%GH4i4?9;^"XD'1EW[O,Al7=E]L:!t>&i,\#$;[\.8hrnj=_j[?8oD%%kU=_eV[9B9?J8rlP+iducV]rmRA+[,O+`NCV.It(IR1"F%+rBDgi>D3^-"-[QmPe;Dc&\lJ1(g9Tj5mrXh+jJtHu9eC*#6]F";>@4)Qtgs\#htso'L0NK6#f\ploOcJIIIA:kM(L,)YAt%EQ2^%q,`3&W8rh?W?R8NpbWrnf:+lVU>lU+R8+K1:nh$LD=>D33"I)MqhVFpA4!ka=!B@iLi#SI"8Z'X5I>UFYh2l?/;_r=.NK\-W"\.\%):LsqHt$BK:R"OW(<J)!_OKZUHtnP0?5"DPN#ATmUa(!A]nYH9\n`i=KuAkEW7s)5@2*]Q+tON$9q)L+3,t?Pn5&Uj]&b.&4TqN+%g*Ilam@+jCFsGmL_-L'dH6(]L"g4:i.t`1TjANhoCg[C%IC"r/=:Lcqll.JD$iV4dm4o9rA#_0]e:Y*;-(0b=6jns2!%g7;<)[I0%Kp[Ub'bd'"TmDD:4_R@bSi&EW&NqQGi9GI-Kld>1=<_SQWQCiEBX,L3Trps7U>'FVLdVHN1Xcg2mRI"[^Wj)`9i4!^9\jRGa?g&o%mQ.WTm-5u/Q^Z&KQrT*1_OIk3@Ys('1SY>k'^LZeZH?/?4r*S"9EW^DiGP5"`Qlp'hAKR4$:SuNJ7XASmrP!,0%/G=Uq"sLprQ!7%/t$TtKr27_2b@sgKse'H]1&fa1/]UQ\qXrA1K##6$rOMo8$$KbZ,>WqEH_\.@Ij+Z@QK?Gp,sL1-AqH@<9D%#>oI]=EQEO8.n%%5%QNc'nZ*D8.2eO%n(pK>YJPaE0`):^566uAdOo/<pr@g]SJ#/2Y7M\/WrX',h=`PfX<isd],S4%o6l%L98po7+r_kkh.Y:m$jFXAN%YW"'I998(7p3*M5KsR]oDbR6:M[6BgWS8sj)j[Dm'mn-X-8,T#0Q'pgDY@N3?K&pMK&_ZAU78D!/9>S.LP46F<=YROr=bXs"1(uK%S7d[J`,T`%Thog-ZBjI,HC`Gc\>$7PNLqD`VJ*l7;+2&je%P7na)_ed>GSXeL>>WseOC?QPU/[>a2u'SOgfu4VEb@QKS=u"Q>2G3%5J9sN-C!?!=OJF.EW@Z0arV`QE+2D%aC<<UN:H>*o]E%!]-5]`aQ8a49!aAWh$>4!C%6#DU=\ec)DS`1*c+HL$-rbtL2X\T[#"N/%?efouCq9)a:u(^7kd.5PY36hA1*_.?]8E3c/OMhZ)t*5AOl2<Zo!B*Q[IHXX,qO,O[.sAhX&/ZC/q5j6csm#IO%pt,aD&u%pX6qh%QG]:E@+F5uJdUTeI`s)eRn2DQ<j1!HZiZQfKMR'*At`;[VR'2pp>!S^3dV5lG:\tKoe*$:dngCT>EBg(9gaQ%,"C@qX3p9Q@mWDM%l&P#VFrrTW@Yi3J5"6o3Cj$O'M(51FC.4&$lm1]P1/I$p_^WYer@2ejlVW3U1W5:7.&Dl;6Z#,A_'dnL*Jt5)*W/p,Sjbn5ZFFg>%+PKL>>bCb]7gaU1\*X'*"X9p?QSrG69,b]YCbP2mPc.OPP/W!?;RO=r>9e;..*HUs7!:2]jTm1QV2c12F@@2+e2SC6GU*V>i.`al%P4:4uN7NT\GJlX4#SL<)2#cS<Zm7/1Z`:$U,EoKfHMep5=0qZnHla<[0t!7(WM$;"dWnEFjqf4D5WuJ/$sk>,Uc0'\80tdkA%6lG%Af_l4/KNEEo)26T7'mN6]f]sb;*Gufh=j#uTVP_VN*RnTBu'cV5!'"4NK>Wt^p;nL;S82iM-3j$`QY#RVP8c4`"bL0mBJ/o%47Mh%'s\64V[nFfVKOB$&/C>P3ts12,8F(*1_-E-6"L<&'e(FDbMG[@;`=3X]SJ\t0B9%4es*UTTGo"`g9gaG:j-Hh&>FiF3cXjjd\cNU%S/B'u!#28uE[_PI_/:pFLpHe5[t_'MJqgKO2o/-K<_JRj6uN4(.O^oY?,SS`WM(j>];nU1:I#85$o<#OcT"HE!kie6Fqu_]HMuF<%Mjm*h"(FH/I57IR/OT9jPSPBfN?t._l"u=tB6jC8;4ftjf5`ZB$'N4?a=)%\?k@>Ngnf./F;kre9TWT5'T.ie"mns$(^]]PkS-t2%X+5LbVjL&8MC2EK&o_K,-sG!F.@-a&Z\1a''/l&r76+mc>':dGIhR/tGVIP\T[G-dot"0a0*9+Jdq_IH,$lJ4#?du[.iX3KUS<W)%0<F#um$UL,7&H[<1qqA:Y&4N@`Y"q@DJ/=dI5<ZYR*Z?hHBnMC`>*a$.=jOR#OTR^q=$M?[_.,OA=m8/5QG[,O.,#tk_qut>%8<a%Mti06"GCj-o<LHN;8"!+;*[BTaOY=&/P8\tXi/5Z,/R!u^Tq^9ek4;\b>SdhOL0\"XfJr4%#&<=Ed*tA/C+6^6Iu(I;T<D3`h.%O%fi`qJJ"SL+,CNs!*G/,+<WGrVnomYZ.J'T2322t+"(U_\qV6]q;M50(dg"O3d=:l^_E_=LNtnmGfP$fmU$5V:1MSt0iZq<c6Gj]c%`"%3,@keh*'sfHm1g9aO@4?iZncaVKaVC;sbSmWkSHNcDU?rG*0ck"p.Xds?IST_/ZjjtU/.Afr!Xr1m`g80Q2q.JGfj*(Q9jQ.f%4[L((Q55chcJ*sm+rgE_ET>WQm%O"-A"RHoPpl^u8&R^#QoWH=lA)?:[3$KV&mQ(%41n5MQKUQ)q_i@u+d`<QX_T!+m%EKQ&-i[,%oJ$s9K@Wl4PZWEH1YramAJ9$Jc)"?<Yt&hUR'n4s)=35YN#(h>Dq-jJdTGBoDe5>WAL,R7r^bm[or)Q2OnK/md,lNo4dou<#TTW`%).Ob\'`18?e@k>;j\6T!7XM0?OH+cb%&=&$4b_82Hh.a*.7cb^j1'-#+.uV:-4:o'U1'q];aO,nNYB1c;+NbL=pk[^eg)t7bnc\@%4FPYPD2Jfa<R\:$)=-8I\AURH>`T>#WKZ>rAa3%^eaCd:LKSM?Acm9l<r%&=3_clI)(%-e">J(7Q5R@Llso\S1Xi>i,>uZO6kMXf%s-'pVB,!=5eAPR8_QNZY`N'BtD@.s"^2uDq*VB=pF)!P5a=(^sK-Z[UcZ,?A:c92)'@NB51!0l610hhY'OT)ojd<,.Wpq!ZIsR!h%337[/V6^7d?""u=%ah-DI)rcm"6kGm0?Y;MPdj46+'F(f&T;$T8N:YtcoS%m,o%Q7I>kIN\=F`U8@.*JVcs<kbSp.0ejF(O?AA0[%Q4`2\kt)`ZZr@'>b,(b&NWkT?cjCM33=i,alm1Z@gru[Vf+rBn(G2.lAu3,2SHMMlRWescoQd*:_tsqd:u[jSO4JnM2k#:Y=.;6K%\t_<q;6^EI6q`RR32J?WL_5!#5!rG]cBdMq[0W10?Cg,\T`s7W-NA::X@I?W8_<U@l#J2sQ7Z43\ITE2YOV0#fBV0jWK%$SCksD$%Z`3si?ft4<`"6*`],H6,KYepN&h,<qnnOi,PGVik()d=%L%':dk'$)fh0Gn:Z#L81acpA:9PC;bZ7YA-3UhO?2qM^D0I3N=LJ^t!%f3KM_,)k.U%5fc%=!;47LJDqd:IMp:H@T<:HsGm+e7]lj!N<kG"T(Ic`+j'3g7mW'&4-]9a@k@j7J^X'<p!7i;kDRrkG*9f\YeYS%.[Z29ApWZZBJ)RlKd_iF^,H=sTjQ#5nffU6'm.J34(=&k$93PsNcuFUo])8$XB2Am<*B+p"tQM*WTb^N4&eNWW?[PR]+oVL;RU-k%!q^#29;)"268uucE3abg;Q3HVn7LJl8#I&qA=6R/,WUb4XX04+*.eetFW3p[2?je]WJA_CO*48d/7_+V;IQZ6NF\D6KY[>>eBKi<%+\0Ffje;]A*nb#+6nDB9<5CNj4JQ%BeGO]cPn9%fX044O6`:lTEJVf\'gA\7C_Q)QV%F\]LEX6;j_e012SktQ=Jj-uiPU(q\1L9>%FO6s*.R_d-I:+"@Pt42+5h?Z-(W6S3fA/q-\nGu`!TOf0daMmajWMr&jo"$B5UaqSa:5'm81W50i@%"XOM[]MYr@frV.n2B=p"6`%(-'bnAE`4"7#I`4PL<s?B!lmUW>:6K\DGO(]HrHEe4IBGgQQ1edjo-/N-'R63nIjh-Q@CmpZDj5E=k$^nsN4hP&73X'8l#kkIEfl%9"^I8/d?XqaZ&nf8ZBkZNVnH=V5W3fCXdNk+7S/gYK5;U?a.Q;*jR18$;*$%ZH2_o[oW2R-**&r>)=gKZa+!3(!;GeCh*_->#HI$%;B\'/NQ$k*-Rd]8Q"*d"G&o<p=U*fk-C!Pd'cMpPs%uNofgq[>p#oQ[D:KI<Fq]4,Ap^Oj1]:!H;<oMfROSo%9c"OR?3)jm[%"I#%B=-0I!,o3P)qB7BY0"Z=#@0hM4WCe>`K8!ZMb<B<3dPFP5ZO&_1r]$FJO,Z^Ua>N,K2[Y:o#+[=/4$@6'(W@kM4td6">mLAB-;=U%mE::rc/q!C;^nqBI+T?h-LA3E<1HrW"H=.k5tJ$JP6q'V((t_\]7`LEkr62Q;?:lTg+,S+\-g5@]M+HS!H8sE`B$$%PKO:;I^cF=%DM"aTJV0iofb:2DqsM(s>gI#2ZYl$@PV#aX]g%KMTJ02pJZa#$qDMUr75F/Nl=aV'l(kQ.<R3MGZM'MN6OMucP>[91>%>):ehi/&%l@!aoqlOM3?G#HRd$V"*2GU^cKTXI_[TXBQcOaATRBG?cB:>0WB.-LuPXp:"(8\IfPPaW-%rFV??2d&'(PJ&^V_F&XHk=;cO3t#Y%a,UiuT09IMc(p)W:L<K)\Q`M;M#Qs.TM'Y4T>>BaV8TgR&e?^8\Nm8'RYcH:BeT2cXPWAS&(MXt>:mhF;+4nR<Cn>DQA+]<Tfp;V%Ed-lpaQs-"P6o<8,"iul>24uk*jlMU-8%G"]];rF6<a4s:G4-@>!W=KA>e,P<$r'j-3ff6'#IPKXEFVipm?4FBs<!(`=QaF'D<']%Ct9;O@Xa<(i8@V,D'l#n$F2g`U1+[RAg#HfJmc&V(-s?)`(Oko:_`G17+YB\XB4/NT0pPBpH@b&!O=aA51$DK9^6\n2pYF8TDjPN%2bn?_kn,L(8YO5CMH(,_^DKpVL2WL?,]:TT=sZoi:m0'TfWSJOXi`oZ?P^*IFE[aJVJU-eM1<BU.H?$2U6d\'Y`O5X!oc(r%T6l^%en=_ei%"ffF1*tVfkr7J#*^%<-cgs:o'KPeXJe"W/N7-`A##4#[i`:*-uYF,bs/MWnpAM#/8.*>4(OTWUYUh7[U%_[KRH>S!"&iM%&W(WE&`CtL2*0ep>k$%dKu&AN4%A.n,0V?#A4:A9J>K'gk-36Ep]@[bS/m=XL1(`f%$l#a1lRb5C(_9of'8!QQdm>iB?Ng`%MN^&%3:3bKB)r4&ST]u.U(qp\N"J>@QecpbY0^gddH/P<`I*@."M/,4KET45oGh1Q&Y<C^-!l0NR7d;7NU]o%J%*GU7^:%4<c@,1r<P>:%'K4Ucc/)P%SSmI_Kp#n:_99'D()=`c=_7P7XPi%%=]R:q.;c1WAl<;*;Uj*-2qBWm[@jSN8()HP`6?djh-^$p5cU?J]$lk&F=cKu%'=r6-\VcAkb:m,3O<1ts_MCT;7Zn2uUMhealQA\ucU^him7GqaRI-AS4n,Q0JUMd7Cb+`$@V+GuEk54U,rD2FR$\r-aZA]'EH@Hi%$'m>-q(qC^l3^EtX'=X=MR\]uN7Q(5EPETfl7I$e!d;P9:5;LX`6Pe(Q[AP)"38X,Y$^4$jI7;nOhB,V@N%+QQE<>hVoFeio>?pF%,%P3:@?hTk&(C*qNl["K!Z:np>q7N4N?X=``1#RZ\3Lo)aU$mr3c7FG3$1<V(-qqhphHM%;F1T+TlN4JAYAEDj1+)ZK=`"I^,d0)%%:qDb#b(_&:ZTsKm.E=]C0,7?,(LS@hI&DU;B8Q**d$eNb*&1o1l0Je<GoOP-[d_N<UY7eaD8Rm8\jGW>L>Bl"i8T`;*n),pQ0E?%HsrM+!ZC6^iF8B<!`J\$op^^-ZJ":;?6L#C&I"C'fpA,%E2DKKAcSqg?.S/f@kDkFbJLG8Ugur*]GZjbjbGcP<2SHP8u$*[43[hK%J;a'VlmTYtLi8=q=[mVSl:IG]\A&G\3LlYLYZ8h+/'jYNmmII04fn5?Q5(VL*W6-3L4,?%;DQW4lh)MR=DS'6U^9;s;PrD9at7u.%]1]Lhda;t:<>rnF`8leCW)ssn[!YJN/3D5__Y6iLlZ9T/4JOf/1JVtY&/-UnQ[L_H>mR2Ub_qgM9Up>qP`*6RHtTQb\A7IugnJkJ%^)_g^/FY>ro&_tU9<Ld7!#['DjVclN)LTJ56XNhe`<tLkm\(6g0SgZ/clNTA]!32H;%+<^AbD**\]9Zs;7B#NbL'Jh=X$LIniIKI%Gt"4u'eLr(rL\BA;Ub6-dHX4mH:3RR`-9^RID<t-H><7RY1h6ZA4%!@\[8U))Fej_b8R9Ub*4n(!Hk"?Y!^*:Fi2R79Kp.:-hh+E%2rg0t7>rFYqRRAXTpe\V0@TXY/_[pk7(]0bjse/n_]QaJkNPJI:;!%2Oom?pTR-c1p4/pY.u+JNb,,u*\QE-H-/-D2A"sNiW/K:V%e<F5d'+I\L>6=Va>AWKpVA-kLE-[=HRB$#RE/@mJA7h)'(j=K\k]hQPfMLD?WLe$FD%3,S:f$`#"9'FKTAXK'Jl;O)XqCV5c\H!B%;O'c6)Vi3E^pC=B8\9t?FKeDK^V.I7N$J.EmALW!i.K]r2O06u$%NCr%4"H`Q.SSI<g%f'KPf+R[S>/0]L%_:oSjjC(0`%I_V\Jp%6J7iD4CN<&Tl3TjX1U7P_eNZLdI?K$:'k$Xg8ng/@b>JP)=@QdmGS6<dEn_]?$A&>Eg.t0q.&J9G]_kXoM];33NN$m:%$*n0%oRk%E=hApbDMLWo.)kr)_+dBT/J]Va<FTDFADLA"N>un0i6u6Fp%07)UUpY9e*H9d&#S^^%&2Z<>$B]IE!a8`4^sj;_\h/3,Um*=rXn3%Jh15\`>7dD\j7stRDb5`&<h0iZtp)>`D3^\G-o2V@:sjfJW/1qRa<?AARqSQd/A+jhoPB)]#c+eQVk)LDRcH3QV4Qa:k_YH>0sW)%'C%Lkp33s<(",AT\rBQI'RF[QAZijOJ;rTU;F=R2'TWN&CC\Qd1A05X<Wu\((fZs()HU]5P-qM%hAmQ21`257X(m>TTh+ZI+C=DX%&4QL72>2ts/0)h#?1&-+;O!CaQK'`#jAJ2'FL7<hP1V"dU=I5=J8R21V#'ZE6H(5g(\(5pbZ#TqTX_?2A6"L?,ZP"#nI9dmM`fI0%28,*XN>GKrk&0<&4WK8cH]@Et?d'b;f_-Rn)iKO%09[[d'f<L1:o[U,f<!99dLV^=mu='iOL]3oX&Y,E#$BTbMDL]9\>I!a<M4i`%!PtOA+sFH?15qYpRZEmJ62+4mMA%9"_&$u@>L?BK-&"6.&0J4Qhj3F=^5"6b.BP=:<'pX`7$3dRqD2gDo1`b5KoCqE"I,8a]QHXj%FB1t4+W-Y)_a0AdpW6l&(4qg.(M*.d7qC6LltC9=^0UnCSRXucN0MC?"(DH[@(%P@Q1,V.I#>bNPBc7NQ7u,`%I+s*:%iP;/6<Z[%bq0RS=(HX+3Psl-"T^>ST1l?rCL,L)/[6ruo5WV;P2K]lZ"-#u<Z-%pFA=]8P,U6LT5&UX-5bm&beXKHF,'AJ,a(jmLus_uXn"WR%J2*UbrAFeB1mMH>q*`CJCQbJ5WB($K7R,XPkUsNAT18j:??afu4p)-gJ-!V!KR?GmSPKkQ@^!Ai]Z_ZW2fHO,1a9uAZ#3mYcIc3L%<(W=hZ"nj3%?Y]3i:2I;d=hT4KOV2[1R5b,Y*bR3Je;$H`T(_=5bOg`>Y-/19e@W$<YU2.AVIr;pYmX"$ekNfV\eo'k^Tas)Bj\*%<l[,\lr.V<H2<m?Sc<2)JR*Me,><Q+b>-H/li_W;A0m<u,>aQ'W\k>NG0grSP3.%2J^K9je5h*+#?qfmePdV[*Ei_EG(-'Y[6)9P%V3[93_,@-F)@_(D5/foFKFnj98+-P6-&*j;(_[LGU[U=t0\^M62GcI15$Z_pHL$OSh3)Rm2cHA5Q;4Z`hZ0EQY1IG/QZ"5?L_@Z.%T3BD=F"T]/HjQ,S[q(5355:eG3?Z#?_N"$s`P51,=KD[iiU=FL--_p>F;*L'+UiC(app.^,Fb#l63'.5^I@KqT]@N_8/3@_VCEHN%gGWtM,9rG:7S&aQH=g-HH:VBYFppU89($m7?:mP?RuZ<*Wd-G:j6!kXZ#qH7p#p2pI9gLjp"4X^(bI-:-=T!'8i)dV50>13,D*7n%;,gY3?]31SfOYXgg0>G^"p`DJrkP((hsiH<isDKKhBc<<dH_>+UAJ2C_e"-iRc#d<4(1oE!V<PPHo],q0u>3@dH0nmXnlf(O+7m]%;lGmFA"m^F&u#FjejgDq=c/?VAbS1!GZAA'_9)f,DD*O$DFN5:W[>9Ja%3,4P[aqLRCr4*.N5@1CJ.qci`#WFA;-1KEcHbl8gu[G%3*&XB(&5_*cG[S#F.2IkMN*I(6>5&MN[W]`M"t"gIAY._o#SHbU?kfF%[YHc=)KL;o82CQe<.cH%+hVke.!%GEVXg*0U?6i+]Dg>%E.+-ZaC^Y'Gq*SV.BBIEKZVI^+]E,\6i(S7<oFsc^OfXj>\d4^CM(K$_oPnRc4Z-$BW.r$(HZ:3l+$=PgVZS2%(SF;bu>!;)+=hJ%E1'Q)Npa`7.)P?YWM1&4]bkjDX3d4Lq[6\B)^bYpj0f2Yq9:Z1pHfjQhT&WSIp+I*5;5ItG=Dni7bUukEAZ_<fOqO^p_Ql-cb?2P%b#m6cr]o%N_iue>0h#r`-$r6sMnonMNc1Hk[>'9g9U8:IY".EE=%V;l,G`Xc-uXr`.t37I%bkO2/^SYA6p[ZW)_BBc6M3#[:t%cN%G(q<mB<R+H$iA&7.kD]CeBJAohmB8;qu/&!ZCR&fmf738!d5=mCn60ZBYu;h5@HC:=%6Au_ru@uA*f4E(?6$GpXO-)flc@nWi&Nk%-BO);WT;VCg'&W'GPl3.B[]sr5Pp,*9c8kt&2-k<B5D?0'AHIMeDX_\-3aAB1:[`9'.%+UMHsR@*hSL`C,)e6R^dk,CdatB#HZ0I%[-A?Ol:_EJLLd65G4lH6C8n0B*pq3E:SjMo\S&[Q@(S89Fi`*Dqi0f\Pf_=LI+'LO`]u7i5r$/+*fAWFFN'_i@6oLCS05_/K&.39%!8]&t'BVMg@L!t.DJGEZC\%bHj(t^3oqlrXMSa-8SP32j?"bhkqEDMmd)->S'Z5DiF?h]27%-pc_$-0GVLC)o\'D8se(3TC$NMkN%lRXAK!H*t([&$>BTRujqS2X:sM_/0g\Um>pQ9VrserCg>n+2qcY:un`ZZ%L7^nG)$o9l[6/[1;[K=fa8N'oDJ]q7(PcH^$%]F5M5%jCoWZkr"?;i#VDiR.,(7FNZZ$al8uF$$]tn%hp_M]BBhMcP3bn1l&^rC7Re%goE\sD,rof@glq$]?e:@DS_SMR^q?lA,S0F+2&2^%4i-5^U+_bPHRP$""Fn36F"8lL93cKdFSR==0U4m?,C::CG/p[b=Z*j0P8F/O5.`c6!R8s4cM+JPbgNbOK%E6_XkZZ(P$$`2;5ocd%-lZ;L.[lb$oO`q1[e7EAI^u?1YKd#R;UURIG>-3CZa[\3^WBbr6s)1NOBW2&a*S>-9HJ16G)tQ-j_7]Nbuc_uT`T`Lc,J2fcCcmt%O3,7deuc`^atU/3T$q.sRQ$rNS-pV@MWJo-';uPhe+;X]f,Oc9G*]F.6%gS/F9h,g!bF7qaIA!fUm9&J3CV\i:&`.P:YFhjGo1TP%q/2nseO$0aJNsI=<7K(d!U9`r3mTW/4'+SNAF=Z)OV[`EfPgPc:Tk`.c%\YuJeNrV(``q$\3Vju!_*TefoF?-B4koM#Hs1?LrP/$%r,UP'odD'eB*Amp%<d,]DS,HBG@%RUkLaY%h)NEO`=-4OJcC%m:'b<SgS9I)JZ(m`F2b-E(qi58I_r07M/sT'%Y7h47GUZP1<,3%%^;)QGI@*ouiqM-P)\tUgUM6ka)cuO"eRQUjCg'B#J#O$@hJ%ZP*oL+m,$mfS8g>ij[Di]7a`O9(SUgb+3(F;kaeVuV;gTM)/odQW%#T5/Y,<g)t4ja<-id+jqdu[<ic+#=.E0t%$;'KtK4A9'SW/S'NY4&0tL,"9A,qq;LLfUjG.1fZ;?7t.'MYAXW$)]SR=L#h,qC07u%K'2l%^UHk*5"lF_bFD#9[2cgO\g'lq(;3XBT!.:heu9_R5nVpZ*nX5Q1SUk.NkZW'0AoqE'@6RL9th.^S+GTkdB$,P*[h7c(]1<?%$jNb6da!$XcUN^Rmf`bLDa>*=c5"Pb3eCa]A%H?:,rK_YG?)+m_kV=2L1pm?Irb):$,[K_7eB%E5q#hfjSTNd&2(tOSJG@e%Ns;E%?Of;ZNMcJQ5sVL%T71rhd30c5U_2^5Rqe@mZQnG#5ZFcR$.m3+jS3G)ltZY)$04P:r0N!I!c2J%0]P^Nab\^#UiA%->W'oCE-dP:%iAZu7b6E6^dW9Ou>VmPdm>RFG]n_;:!XJ,L?W(!*&Ik8$d2EDt<B.=uV-3Fo#*\?m$H>du6+K8[>mUKM,A"7"Ps;Os5`.VC=Mnmf%=+E(n"fkHc4fDBG!#VmZA\2F<Y^$dDLHL=cV6+>E;(k=3?`"j+L5%BDD@$2OH:GR^_'QU-2+k!uCnT3pb#V40^/6B;TK2;f1UbMm%/@<mhHl,i[?f&>4`i_0W9i$0%bUmW_.b(WtA!/'cT+U7WrbPPj87h*$2hI&8lTaZZR'+g\.'O+47UJB;Keo*m8/dG/NYsIj.Hk`I%FFrobICc"?O8Z2CAE3o"`N(2P1gfcr_>QLt>MO[DQuaMHkZ,SC$M%9_499C->L0E]]%Ze:"\qaFB[9l-`Wj`giUa)T;tOc3T?8G2%nNOSH=BR$sRT0>(V306U0`me8dBDDQ!MkO&M7c0PZP.[Hg^!rPM>c/Y*9+iIlL!s(+XLsgkog"Bhh:&NMSZ_-kXhJjCQj;85Oi-`%k&[pE)k@u&@8$,[]MToNHFE@MHj;c*,k309Kn,F^GT(qP&iG[i@\h(L?</$+o@RiK*"d3<&Va7^C6'ag3?:8LF.RSC4K9?&"Em)g%B^s_6<T#)7L6:;F6p(q<j&%*;a2=ZH-Ad>FnXU1\o]eSO`f-N4B9L@Wd5IP7fh;k0(,M2SC<Jg0HVDfU4M8#D!]]AbVu7Y3C_XZQ%8rZOeEtF$".V!^kTXW_k<5lW=ZBNS9jd(q.G;(,'MG&Hdai7Ln-sSc9Kq&1tPhgral;<kWU)HEs;am_JhF(4;`f1Frh014MTU(1s%b!K^8g$$r*Q@,Hjs)QbbQ1fFWAW>[d7<,)MrV"DN>9/b>qi[m%2cF"U#CdtSY3%_DW3`P?G;qbG-m)>@'^BNlcno0"+l1m>3T,H4%\mdbl(6V=p6p$C_/`<_S&p[\7]Hd8p5%TZu*1cREFA9g/dofWQbI+A$7hVo?/(<cDPk4^b.e\ar=j\;&UGr^8e:$7*Gb2:%3"$-q%O6YHir]&gd%\ksW(/&#5*)8B\dIKiEr#@<,O:I=NU3,'M1kF[p64E;0g?uoJ0!<O,e%@DRN9TV9D!/SHJt-;_;$E(:V.RP`3/B3G%9Aj(58\5Jk[&;*'699fYp$ZE,La0#*EBo\/Iti\#L'"K#-J3&rE`86^d1nW.\477Tj;"E-ed3YVBQ32d8"X0;NHbLr#Hk@,:lS@/%/-3[<gcq[Gb^5^M@`$NOZ5J1DH7Ml#.[JANgLlAL":NhQ6VYG%VZu.@_HNm0"?D0""K=s\@&.,FjbQe?X(a^0fM;:O[@c-JcqN1;%YnsZJ38Ns8mRE-Hm:[uR40cK%)OI9^/NStd1_=`8_rWZUC'if[_bcLtUiO8M-qas)<=b=H+>m5#8!M^nfHH]^`9d4-8V==Nar0:.%iX[abfO[-7p)4VF"D-_C-$pAJemT^`3O7YKEF@$=MPVS\Bm[RQq+gXY&[R@C0nA?`g8*1uXACDn,\F6k2V@2d*^VoXNFE,LOJ^2F%3-958j9+?nAoSe')Jm<d!gC*jB@@7J$t12T&[fqABV/:,eD%AAFq"VlY3:$ei`if8GceGL6V&NBNrsR1X"U=WYjG4n@9egu&m_f\%]+PdTV.&.HE>[f_S=6p7M1s2IQ?F<=oh0ihmGsuM,!:jO1GM4Mf+;C,h8#p<UMnuC*_1FOn]+afI8G(&.jAQAV(5c5K:nSqF>4r,%m">Yk"N3YSfeBfj;^dncX_r)<Up.6;5q@sgka[0b3JYA&*4,=>="p/t-"@+DdqL$g^S5>"k,*@-(5<(BS'EVn:G9?kV+I:22K#-3%p6er:<<F=N\mqa+<Kj'LB#?,9X;7uq81J,liL-koGqUVmjmOjN2sR[-Za'k2(R!$7/`,B:/NPFd/6Oq#:PNJ;)s*E/Y(T0\*g*<t%&)^VAn#t@e./<J$#PW@,HIEJ9(LWgG0U-RFP.M_**SWV5:lV5nN?o[iX69:Kh)gU9<&:q''W>SrVeKX-f`5^<bs6*4P(IREL5HfT%G9W6Opu:u$q5I^D'ISR="4(`s06%\7Tpp(fiZaaToH;$uMh];der""bjbdT+3MG9(LXC54@[<-rmj#W?LhKV-XCdq,<O6#:?heb)%Eom6lD#GfBpDaVHUjRR@0Z@q>,Qc8rWuB#f,F<NS,V9Jl';LWQ+ImI$*OG@!=R,H!+":(!@O+I9cmKV%hS7bG-[6_L`q(:AHg\<9%LoIW.ZMBJ$HND5V1G5UD!a.;+_>HhgY=\PsWb>*l!g2;A1=CbjNhQ]G`)s/4f/sY-otrMmG(^ng*$f$Q@e(ZfS7EV9*dPlsJQhEg%El8_eB;tA^f/XIuC:Lge"Wj(q(BO4'6c0X/I\,T$ALrV'E\K-)9cK-!MR9`gB7TQDD(66AdW#D(g0?X]O'L`'VIk4Th-,Xo4-Z,"%)bs<I9@4;k"="[]5)?Q;IU[k+UY#gm#XHuQ"TWC$^M+uG79=S,Z*t#V/D13=dNG6m+tOr[Hk%q,3*G5j;/@'p(Fq]9La"c)p/)5*%5pSZf@8i"7:f;BXmMh%C;V"E[q\Z4W4\!&6J48Ok6^J7l^_gC`I$8i"5ujfQSdtOYL6\bK[%eOaZW,Mc[;K<mWO97+`_/cdI2rV/%!5$GIFp&cog8o<5iFIo667jcs;;00go\bpu4PZ!9$CcQ53\a?7O!<PJUZJ2i<b0"2;)*mlKYc!mPX$]=l%#S6hWHDk]<kt`'Sr&`%n"f$-]dmtEKo&Spr+>q31L$$S=<j2C1ZB%$YsAsh`_u7V=:KjGAp$hE#I6J*fp$4EjZ;eW-tcKto1\C@##>u2k&uV0`H!4[_B(bI%V5P\=Ph`XD)X%L^`ONuEbk^t32$NFVcF42dI79Df!KXBJ$G8BEPWY^-9L"Ys:6(ss=(he-Nb0cLYAmE(Zo+TU_`C-cO-5u#(hhp8%b/a=F6)$seF7^h7/Y8]B#ANpWUlnHW;)3)Y]EQl-r92O+:j4:W)9*`54,qV=;(&b4_.DRPhsTSmM6m[i?;]nfAXDQ:5XqJ9b?dJ"%dL!.$bOtV2c(mC8FmPCss!kuE95HX;_@4M>a&"H,Wf+^#Dtpro.(a_U,2e!+ar,S(daJsY(OM]s6\:[V,i8EtbLLa!\aA4[J%/->%.ShCoY^7@CVAdCFK0bq5Q9@1^X!/4H,Ou04$I0=scQi&/>[A:`b)ldci,\p%65O[aZpjfe&]%<4!6gi2(@>/e;W9Q#H/!@GHp\Pb%l09s\$pj.GjpWVN'P^W)=*j7u:u"N6O,/bu@893\q+ih!?0Kb/UX[m@V+FlL-.lp$M^0pVPmktP/ZKS/$u3U0:\ANY:/uUCqP0Vk%`(C@#GaZ4X*O7WFT%"@`pIq('OVQcs[cF"IfVka;7h[t,^X$>c?6`1,/=mS[C8#%/m"q9qF-r$iQ-"Bsql"ZnnJ7X[OP?&B47;>#%aH'p'L/C'6Jj1f]'jW9YUN<01R0a&YF8u76XHmb,AI]b,q>W,Pilkie*BU3a4AM#GIBT?$&Ju!eYe`kleGA[C9]nSlZY,m26q1OW%SH6,$aY#&"Eg]aB/b2M./;45fUB_eYCWS#(b,(@OC=US:/R""07&K7+p?58G@Vqi[2Oh:PGtS<]BR7#u1!nSg^q@1_@P*mCmnK+0%]MZY<afh8.W3aQe<$>sB\dfIC@U`K\Gpi'7-Ar&+$9RBP<L[m3(6rF!klJ.b;,k(?JLP`;]:=AZL3Q+)^Wf\FB.nN:=/DjhHgcVC%^"fU,>0E&m\!TCc*V)8.fdL7%`h<oJ`Y%Rb,4>M:UtXq9Dmo.G7<HE>F-ZW%N>FhRC/JaldX8K<QPGle<s!)6+1hPFFjt_5JPSO]%7L&J[GY6i26MgbX`<]kh;hfrh("MHhSmCG;90F[i-M:4+JqC.5JlVlXm>&B?9^[cfB7oP`oY[2&^`W%o3b:KVr7rr:TeqSje\5*8%WS&MPBaTAgpCKTZL>(bJd/qFVl,]*h$)grC-3UZH0F#K(qRQj/Ab=GdN0Ad%)o2nj8[-Gks"ZpdZdC8[.+M#U32mY<97c_UX7puI%f-LVd&._Ep5XnrrVAL#@fqNH.YBU3&TGc%iT"S--4E$#F+cCQ(;M`:EI2]3'YYF.Is"1\s7;W7'Id9u!7i'gU/4Fus\](`,N]';!%U;r"2dC`nqXC^Uga\1MaPOk:3dJrdIk'!*<PL;B(''NaQE-kif"@>(_UD;bNM,i;eD.Gt$*E05#Z]Jq6I.l^GhJP%b0PYH7eaB]'%)CDKZca8^YHQ!3=!>4lpm-ka=??S32eUReeMXqbjRgq1Q0@J\t>EW2p[VS8'JK;ff*.L61lB^lUPZ+I%p6XMj6R6U?#kdIsbf,Cj%&ajUGII&100ErZb6CM#-':',FS_j61U/h\`lL3QB3oSMb-0rK_kE#Z64T?LZ2Tdgn)(m??)\MfD+rJn+Jf?F;=jH,\T&S/%I-E2U%ctr;mrfD=E-1&sd,CBFU8!10Y-,sKaUgTV\6Bfc!eX7XT4qH>2;)'hPhq<?k17a@h(??+kZ%I/N2<e+OG^uaTT1eXiJN(JCXg7tj%c(/LtqG["aP4A`30LQA<I^ia]`m:)3&:0PmJ!N0?JUN3@[5B'0G@#B3ANFQhB@XIJ]EgfEf*;6B?a:-c`H\,8o(<)2Cq%#q+*q9@%[>/qIIC$Wm2V,ibP\E,(!Hm(]G[J&QqbE9Ib3ej0g*&*YGE/=?!t>g7_Wj[\ft;h2O1!H::k%sfc9HQt9N$l-jf]bX75r[:j'9"<%c.nn*-jL2bdW&Fi:q`m]2iIm_Yl0=Wr*J"$6f@DT.Q;:>$7/;-)(0E5)JN8Nc#15')PY%!&&m\42tfG.MY%h00%NpaVsW7FCdcD1%3\r;,q9\jHNU=C2A0ZcgicDj^oU,CMrVZihG.WGS=Ml$dH-/>!\+?4>;KMb?S@/f=dc=/_\$<,;V9%ZMmcG6i:]s29q`VP#TY0[U%)lQ*0(72TSap:u+qh'X&Omh%nl12Irg<K@V@`%-jCT1b#ap+%%S!P[Y"lBQ23%]LGq72InBp!'>_S;Z.l%C!"6m"dd/hC!)9CQru%:lK5VqZe738Z[2JNG#nQ?WTbYc&dVbg33CNLs<P8B0<!NdtHt6H*6oZ?Bk;`H6QWKi9rLRV.!<$/R!1jKDbmr9s*`A*^?@Aa6nc>%TL>iRWLm;RWFM[3)QY6C4Eg&jZ@?K\I<XKH^OhilVMnh2lAS7Eo*RjF=E0C;3ik]+9h_%nidEV%k$L>"XdaZP$$W-hc!EJH*2re&%jauk3.0j[f=Cj9hgH`=H/>!ZBbX<&<:=U\\i7&H&,_%WHob*_uRB+<(fo"@(oNml>^:XpA$A,J:!(@Bu:2i1P"XgU;_\%p"?U'p6%ZI`cRJ,cYml]HZA,c#&pHWr)u8H5>4JW?W6+p-]dd/X3tKOE0P1:nj'33iNq^@*"TXZ'[ie1R.FVjLMe&>tsKZX7O$45Vt'6qaAh%dt'kfJVAf^SNc1VY8[HcI7MOf[nkc!6al[8mSd%jl2QX0(6Jc6JG(`m(f<<CI9dpeLEpm3@or4;+q"F^FeM'HmQ$ih[0:I5O6Vs5%dsa%.#:a[6+ZEPh-aug;'l`dm815MRVdpU:*d\uAbustSL"&k=IV8Zl11nG3BRV.>5&cArViFuWl>&]<d.?I?6f&b8S6N67QiodU%kr&ARY_>dV3kKqPlnQDpYPN'U"+3P.UT3tqb"TDWV95KB@lHDK<%Q$QQQ'+'"%q@q5=*t7HDMf7Th1[GX7Pg4eErdY/8N"8hDNJ3%<_X@GPfc4%G6cMt\P`G5Tq<2s!YQp";KOiW$KY9(*t3!gb\YqLEqcW&5]?KB#,9r%o!c>i!@8oq_s!RaZ&C%rVJup6Q'DYSd_Y)"%5VbdAQNYdj(4^!t#FgK*/9P>S%X*>4F=H]l7O2:N$$:2mSDBXda(ANO/Xjb")2+53X@icJa_67U]dq:WfjsP4Q1V3$aE5@Gl9pt+%RAsIn^m*`99+_OO[2"l9Krie[,a2.jmfY8[DFB,6OKUM1Mt\1\BsoSASho$Nb5^2)6)<hi]oRZC%;JLhSkVO>l9Z"%lgX#f9g:\+%JtH850J0X2\*L6[cG?\+E<*0P1=*l>4;CsUaWCJ#VSo]C8N125mEm)BTEZ_"/4c6b;DQNu&ps[\_@8]LM_o8/LD6C8I\b?1l8`Xe%IY_+T>u`Q+P`aRWfaGIMk+D>iL%)VYY6JT86.2[/_+JG3:$%"`55"Gm;)$?\p:74nEab[/gF=r1NB@o(fl\SOk29/D]b=Hsg8>X2%*jTU!`Z>-?lan!$CA0rX`s8s.-QmB@!X\N8Z&#,Ka02Mj,Wu7j[6Li_a'r^d[8Sc)]67A_9?Ta*H$!`^&mr1rl6m)YMQ;k"MXXVn%-&fX7[LsX^6Hr=C>f`@@Kn*S'OgKdgG`=>Np@?gPQ6W1VUMHT#"LtfOPVB),$`'tngoP^cX/r*ZrV`dHi"s\A;g\@u\:m<<ef9.m%,XfJmqF"4^_ZK:>K*aBO(Eu>Oih0K^]a7p%X_ImJF@sFG:%0mg<P;YmVW9?MUjS6/fR4pF3sC<Zd-E=LC73?3d-N\Z,8RcRdVc;U%O["HE'L@o^dahDJl[`PDk?9a#oo+d,K&-JXm!Cn_&uBJN;.8MI;CG`EMMsFj9d69@<!9V.oF%mY<ToRo,C\\'JbOW"X]7,?a7.]*%J+ppqC60\FB//>>qmLYu7$h(^is<Mp@1[#Bo$*6DR]:JYIY>+f<[1U11Q#)Sa&=G/KBTrlV$]XW<(5Htr5\+!oOqoh8l3UPCECYh%.IpFge5dBgH=s]!'nBO7h\:r7MD2g1'.W'O$T%R<L:2[l"4GZADHM3!Xq=ptC*T>/VLk@G^3Cl?%?O6PePunN3^Nh>'m_[LmeQVt%IKW;bJ\qu9[Y1WHV:+ENXPX>=VL&5JS+fb<g'mE*phXqlX0o]D2Oh+F37,\N=/gTDk]]0kZJI!P'j):if4a?qZ$cS-r7[4Z$\Ae<%9#<HHVP8#D>YVK0RPC4#"->h["j2V*TnC(#_:BR,V+-F''ZuaqgF041>"]d6)gn^?@,li/dJ:/N,o5,l_/O)k)WoA#n\[7TiMY&7%V&lhk[[=+pTC_K8;-&r\Zm+sKRVe'7?i?PSQ*24Qph<lu76b!Tg9$sm/h8WPGO'WTeSRf4[t-Ge;!G#<8i8JPDseKW=&tc)Dj>p(%HZ9$jldlY`XPH&iAp\t+3$l(%g^d4*<=*+]:J^S6R)uDI*qDq>WS>RBffVtrO+o18UKWH-D)m%0HVHH9F8&tu$kO=,jhBqa$i?^R%W';XS*Pk($2X;GP5/B_tL='oR[r-u#cZON%3ugq)X=&7[JjVaN^7`Qn#j@ER6Q5-+:9!Mke/TXqEkE^H^5?1oq!tNpGXSf<36S_4%Z7Y5[fG4L0SpCQqh\-",Yd['K!VGPeX:LCUhQGpi12k3D!WGfl!kMBH33gn.m!!NSOKT7CJut(9es[q]]B-OW;H@T7#u]>ilQjHH%T<nY+HX5Cn8j@4ar?Ki_j'h)n\dKtV_"6WV[F+E64/PB9eKur.2=m<gBu,^[3$i_hUX+i+FmZQZ)_Bh'ncpEKn&!>r*f=(F"\W[4%=/JZ@(u_9+\*8UTRa!p"D=L\NYYsfpiWWIV'Y(CmUKh(l9I$N+5qdN,eC8V*[V*&"]Kd*%de_dIXbFB*i<<"RQ/oZ@&TUIN`-8s/%DWi&af^jP;ZA>(oWYT.Ddhim7;.)>VGAY%`4Ot#Bdef2Y#W/Wo9,tL.!3K0:""_3N;*>F]*]S;S22,@>omA455dgMaIQ?%kkY_n+%ee/$bJc=lT:RPAtla@)kad@naqB:<FR1qX:4S2Z,m;cDu8o(;L?D-'q)@:^>k$b,!4_I4i9O<EBdu'Z-d6:XR>RVBA5bXKe,\A0a%Rmu27o);@9Beo"d.LsDF)1)E^RZW!'P*fVlH;qo^cu^-q5`hrga$PDUO3MuD)CFe6Tm(r@'*@bsk79*q<=4O:<O[m<kD@Bm:9bEk%(S%_5+)D0U1Ta"<rBi7'T&OO/]hW%VOJu0]$ST8,9.6($pA/i=a%oIo0A^;>-&'>\3;f&W_XN@!qs&#5Fqf)EVo?CKaXXrfnBIOr%k@=Oh-qYrj:g@PGCpPVQfFA&F!2_BM"E[<XWFmT1U5=u++6/JngBKcN<b;as?^8>X.rgA]k(361q6mt3(np\#?o>Ru*%EpKn0$D!%1q:6SCe\:0U?7I@TFi,o<R\ug^G6S;=:TJ_F`9UYnH<=2YHCYiNEq(?2N<WW4KW1JMYf++B"3gdS+'csHppFPeF'C$+=*8EWU[7F%;3P8BnD?CpX-3m1fXml(H<]3A2-`IOe5ZJHXeJd^>,o-8HM?._0Kt("2gTY6.pG#]W,,!7dF1L86EIn=DI'Zr3U_<b6#.7<:*,?X%BC1a!BWss`"2L,RWr&5n&ZlOF5`Hp'NbfT/1s0Kk]hjK/NPnG%0:!r!"6m!+/Tg<H2H#??H9'7BpYf.`4ZQcVKsu8FpDh&+(AVl4%VL>EMP`N!c%R(mkbPn0dH1DTI1I_,roGVC^?h]6LgikZc+%C8aBppnXR7=KhkMmu;eZUFid3d,ib'5uAitP9pM[?$82FE0>Q5TUs%20/Dm=HA,A2=[YX/59Kc]rr***jkVd"gl@Q\hEAT(aAdDJD#]PJ^mYD5*:_o]j0Qso0bj_h+=PJKM]_Gl_sli8rCF:d_X\/\`u&+%jS6S4M"rs04l=ihXQ74"?2bRpGK8:F^IKtYkKE2j:!bNM9##9S%1,t,G4fpAm0fJ97sS3ENr]!MV0HG5MK\hB#<S*Q&!k4Yn4c)O%!L7R3O-ad*6m:KfQOq`8f;SV'=c]#M6<#Cu`>GWj'eZh!i[=ZHDh=V8$\0*^m8i[CVEkT4O]B."]mMrgJ!s)EGX1)?dc%c@#d%JW%</b,8]NdLcAPpXQbPiOTpm]M"+T\Z[:Jb^Ar3*qg#$M_+:[!qb79koAX%_@9b_[@J%6'q9OcQN2Xo%)j?klT2>5q[c[k82Gl44ii%M&iZF#]K9R&RJ@#`@o^HJSj-VCAE>;@Sj_m5<+c8WBQ-gU3OHLKq`e#4-ghe3!nU6;E0;A'MPA.gV5fmK]_94>3ga\JVC%7JMV4@%?kS105kMUc3($(*S+]?/`NGPP_I)CC5T^0bhRSJ9#7IfS33Z?ifOAaC<GDPZbUp5oeJ#uiJn><Bg<9f:=@hqTM#k37Jm78l\d_Gi%(@!A*i\N!QnKd$Nj9/)%`0Lg5Y_u1[c:9fg)@\a'^\#%iNtK<j&d$V!ed@W7fmN7ER_7bA5C*[ljm5[c)ti3!\l`'D]+_--]QamH%X.H"op,m'2W4T;XfgIBC^<jWUA:/Dp^Q$/I469h,]uB&(.^G2Zck*?>>@H%4YMsT7SoZ)a77"bXO456MA)45$eG=^e+!C.gBi3Iu%8u[Q)c7Ybar(JDSS235,&4!n6M7to@i!u;WCAsK=3<M=b#>Rh+<oFeaMd4cRTHpJC_2XYY:D(CO6A516@^QXV9E7"UL$DmA@6*ch%<^;`2I'1ns1hAP&@\E^JSFCcNL&1:+;la!c7=CQBi:3#R"tS<iHAcU7I["u5KIN5LL\=eFB&tQN8TS2?)298h)I<5U]AeAPoQ7I>%C1)Lk(n%_4HE&m/Am6at/@6bCf?Sq!l'YsJGW`N<]sDC'K*B8K,/s!"McG2^pGM+s*rbB<1jN].CUBbkLBDTjSmls(.-E,q8s]'J%,fHLh:dOYl##:'C!9iXi\*6Jj7I!a6<UM$#Re8a0+K&]IBV/ILP4js9%#5/@pCE(l<!mC#k`E5pbtM<BN)ar#'?1)k/I'%uPIVOU%lFS!AjbV&s4g?g[L`?mBT%t&j,nL%+mm,]/.CYOYX>#Sl-JSZr%U.&_%dFMC0U@6+m`:Jn)&V&.dD/cr0fki[$gC^E,/S!,/,ri\%ij!Bjqcni%JPqI)RT=mfUSJT`6$*LE&ue$;d>mB"\0nCG,nI6?#^I-]'PjKus4g/QOVaP+[!"FrEW0\$gPh0hkH%([(":;=qpRf3%kWOE+;)NIGU+XcIRjGYhnX6>.`42&"6W^21Agr?)f`!S:oX,R#3Zh.G)+5DA7RB9Y0FdM5hpY'`eFV/B?jKXN[2$#e]%n]c8/Ou?%9"p_f+n`4$(G/EFr8-A?n8\R$:@Y=mr^l-uAf.\qp\<_l"C<*:Hq\0o2X)6;E8()Q^>/E^rpgZh;6o>D3g1;9%(@8Xm3`6Lbm6/'%ADS_FT>g_]+;8K1m"E3a['#Sf]X;(#pIL2\0mS`(RE"D<$aC[88/m;Rj]]&B"Q%a_P&?sVFk6cKB:e*iY`+)6Y@0iE11oU*H-e#,%`Hu19.r@RaZ>IWtq+hX&W1s^X,7qPc:poj:+BPih)O>hb_D47Pfb`#Bj(YDf2-3)^HXRq_Bj#bC$N`8cTWdad4NsPr->6C4Y%B&Z%Rhl&+:\K4Ws6u;on?),EcfNc%3]c%`YcPar*/$kjHrZ%i5ZdE)R97eH!=d*RhCYF-cFHlZEq2tbeJNF'Y[R<T=5Oq+Y(RuGXPiuC%<sPc>:/Q(Z0ZK'J)/E6i6_;IrADNVEWIA\q1fpki*%$]je#qt'8H!5fpF@*MM]fRI9.=DDfdeUim#N<'h/+(6o53jdMVfa(.tXpc%Z3_CO\uPR.IV\/-i/E^=Obba;@n[hkeOri*[XIRJ,Ai8ob/q-!BBtMKPs]g/+>?#bZX5g9\Y(QeT^rk/a%t;*(Qh34cU60*a6,r,%p[WQ"=G+K1N;M70M,NDIERbJh*d_MV$YnrVm4!^_$]bD]>_N5HH`JJP:^KJ9.l?]qrWG`[6;dO0J7)/;2WuDkJ7.>3*#kXj7C`/m%gC58mGuA@uYf-=WA'0eFDbu(tR)8;HCc9<HFmch]OVjU-en!TY.n4M&:![55(!osEH$ttk73\X;Ffc9b0of%mg4K8W^OAQYpD7uA%>ET[*%4"k<pc(FhXrC@_7<+XQI^C*.&cS)aVQMtqF8(1c"J(`*A2kUMmlVH\#5??A<Nfjn!U;:r%L5b585+G]d2k%![CSUd38:f)%IV\4e'T,+(OiJa%66tW&lDeSGR,eb*jUP+L";$2PhNSe)O6i&Sk>F=FOP^l;#J%/c"0rfB7H>J9YYCT=@d`[pW.'saDsm^MmW273%C=-cZW.u(qDDdkSIA"\R#"FLES_/O^8uaWKgH<2nMk.4%1D(]n?95fC/3E%[.ZgTdNSnR!:*taAcKF6N8TFa\UIj(*MGVp.Q7n/N%0*a`sMn&_`IZ@$YA2oD^cAcJ.F0#TacEff^eUp(D?DEtje[oNTKl6jF,!KS16Bbim0)]k;kAqq?eZr,n=6c=p+jDYdfMWs\5feP^%7:orY<S%R#KrOZB"%4P?`/k8*$EIWs[N[bHDXk0VOK^E1rPX!dWRsCk83brJoMu)h_L&05/c\Y::S879bnJ_"^2Hjs'N'_#^ije)%^g?*sn*s'pFKIC(V@)glQ@'Y\C5#o$Wc"9<nO0Lad1jY44Wf,s#fMHkj`6:1#rZOhE6P#U?GKO`l_).]O0('Re_UIEWL_g,TL=M_%=l;_7\jEuA2N1P4qWl93AB%c'Vqs\mUcCTB8cb)[Mi$''*u3tRm*q:#H37'f12<Cd(-H]Ol6?p=E/8W;>-2>.\(6)col,^3VZiH%%;D0)M#e;d%EDgTYoj/nG6,Sa*]cjLir2[^7Db^Jn=tYs<)*9;">+T:4DGHl;oH^iZ,+_83pb7kY%<t3A4u><_jfWNXW5Ii]YnEao%iFBg3.1O&WiJqdHV/9)ROHBC?R7Mn7Gdjno(BDL?)G+/iI""L0mO4VT06d<$IJp[):UD_7A9:Aj5)'=2`BD!7%bdi)>ke/7Z!j!G%%]ZKHRk[DobM>)fdQEFOo*VItF!;A'RT;<<G6X-Ae8]Jeh\s7H>Qo-S]^&W?#bSJt[Y7Q'\6f4P^TFEo>l@E?F7;PF,Bc*]^PG)K%8RK`$UW#ERNYSnT3_[LWmDIrM<iM4_eZpJe[n8RAl>OikAWt1SNc`rNr7?2S\K*QU"@a`)nU92adHnjE(h)4U_G$5<[G&BEm.=`2%:)EF9)1NSjV;8=!b_d&[Aj)e&JeQa%U=rdfPN>Y]2u9!L8&1,2DMdrcej>h'[EHr3(f%;%`.C^En!?P=@H20\YqoMfmX>92PuON3%Xue3K9r$oeUeJ*O^)_8n33dlX&<T!c@nZ3[;+'CdLWoQ=e#(:u%X)Jo`N;GhB2=S&\9k;+n4ZoMs%O+)^p[oe)/s$Y]"+jWL<=O7%QSM#u#\61MIh:)BjZb('^2@m.ZI8kd,VP:sW65@m`nDTe!Um9_Rj^T=_csBBrUW'[J0r^544e%Q45m.SIZ^-g".uTr[l#lC,ipo<%fn'>124hUcfP+$men4)[oC7oX6hrk`Das`,D>![LDO5m1?*lPpmQ0O<aR:>.U3umGg\SpDE[3)\Y5&N9(8i#rlci9do^cc)$;,)O%S79+lUHfH*8FVR+NeeDTiUc*C(QhIASO'HHGqG(+;`70B!*mmZFLe5Y%U&SH::]3Z?VSSe9W/1h.)B[@#c+.fG(_8!L-g\^qMAns%(bq]'*2Zg_WEA;nG7)C\c5Q%mM05g\nj&h81^n(8*a^E&LaZQ6]@O;ef2\qM<Mnr[p*:!$hMLl7=H9\''ArN6j!2fL%i@%&RDYGA%1h+07Z$C0/!Z9/QGK$Ms&]H61Fu8>,Y][@"0R`s&_%aYWokA5pCiCV):YindVr[!2R>,r<GB(F.&;o,l7H]spXHg&B`J8783:Yc4%UB,!\Re\f3GSn82d.>"A)oG[qKPk/rLfDf,^^7A%8u=DWqNm:=dks3fEUUl8Od\\,8V@f.Uh<+g^`YLW@?#V3$VZ>i,3=IP&T^li%#hLJ`,lsme(/Qc*,2oPtF7ca&n<?Aa7s<hSAgBY$rIC.E*<BbpSNs3U@N\jnNT2ND!d!<]:f)EkUUDnnEotM5Yf)G\ZC2A]H><rp%ooC7+Nbe<^aep;L(61P<M6nCb3+pmLL/8b$Fl^1Ea';(lVMh,(eGp)PGB>!;;5:"._if<9#^MGocYFr($Ng9/0<A?V9.hkBA)U,T%(DpYb68>Y_]fPJH'k>_CT:$!bqjB*OKQF)mDm.l":$I)hR3Veq7P/jG49kj[-65B0Z2f&^bI/+bGXp+)q:[YF!/HpO!5NJu%uLtT%'E0=^d@O8I@q+-_Q<UN'lL.&9ESbbll$o>g2Yf2iFZjrkh-H,1H*;p8Eh:F=Qq*6P4d!LQ>[qD1^_foG:qu]h]`'/LQV)E);Q(2U%610Ro#Fd#a])c&adO?`lc*ChJ,Q`=u8QgI&3^!o7:9dK!K\0g5U/8e^3b:;oQhams2O<G"9Jb5RD-W99RkqY344hC`"$G-Q2.4\g%#<`TLE_X##8q_\B9nG$gc=G4SFWsO*bj,5l/<!#-8_a6[8B[mHeG8_uetM&_7%uI"H2f&i@:H5@EB)b<:oWAcV.;:PV(*bY;C.%U%q9]*hMH&CpUbR-,Mo:DeZX^N32"ADg[+m8fHE)ZsgT(9Yh!fZZ%G%ZSU>!N3KUNHKU[h8K`H^Up+6G_q9$G[#<@*L)(?M1opj=o7%)@/n,DoufrmDbEa)EId1`QO*E[hC8,J0RZ%5qEY%:C3N/.78qd"9S]%fI?HoRQdklr&c[p\1cQ"niS&%ki6uT?UAmS#H*lYf9*^D%(q\<OAKMr\$5l`8W$0'SdX/>O=6Os2#FtH2MHRn%T;m%m),Kca8&uARHO/"ZmHAm:;L89(&&mOMWL1M)$6HuEC_np;lDMioigF,h%7kIF<(E6p7(fSlo%OE<-L:Q(mdWZ.rV/f>pqq>-j*"<Tjq:]#*kaB/cJ()mS_>tqd%0Pp/-82H!He]e13Jcl;\JLB/s1=TU-..[=%<h.n;'VfYSY@>U1$W:iP=DcgTc]'tYc?Hm-d7^rpn2eSCq46s\</n+Pn<u7_8(hEaXK<%q:*[Jh[*<eF(E$i9W]G\X5"T6L)X%>H%g_Q"6kjG"klb-'R>VrA4me7a,;(@epQ]3s69"%9LA_a>1(,_:NZTO/m,3kIdPHOJW1r_J87%L:g[Etn*!iTAHijk,0>1D%'[S$la%N/;aEW/\F1Z.R"0A<a;l><ktPG5?Yc&hOEY4A(06%Z"]RMEr@nVN@bOSJ4X*Wj_bIE1+::/._."SK%+6Qf4XW\gIE\E#hI(%K'Wu%";RFb2co=Km[i@B4uN;SVrs*hodctN>mTK&.6)u[3?d$[DF-h[?8I=7h7`1J#u/U49n+cW;m=kB;QJ`FM,^5hd0>,53^Ot]J^L7@%#Mp9E:_Qh,"BPG.243W;WnN-$flaA=%=-oh4n+%%>`i<.<:]//0:3Bbb]]h:$O*=BZPN3Mlud>8qptKI!(*tA>#jYs[u?7ZGkW#C%8].)@%*l53Hc59mqlO(q^:XVu!%ruD4@=Rk-&0@J@Uq1Bi\4:<-GI1LHAA--j,>N=lgbP8UQOIMWTgcQoM*qU>$22$n5`o&=J=j4%H78>F&3U]I/ZpfP#&/@6<iG!P0/'kU]fJEukZh%78L/mo_rPnienCe31<D1Om2=?qX$^Hn6CFd2A^ipO%<pGoF7L,f"iI+Yq#n_D%CQK!S=t3;>qW^Y9YUS$<;08m4KN'AP$go/iP=l`&]W,4JJnF3lg+bYj.-RQ"2r37#gtiYE8u;?pbF,\d-Q$_*n$qP"eOg?#^f(Y)%G;]G%;aKI"0<"_=1PFE-p!>"79TUMjiX&cF^lE"%V?6.8QBo+;kLiu^+>lD`!'TolM&MY2BC?d]EMVcp_,b*#c22Ym;(ZdrgQP_0%&6TX]hCL(DF]AAJIO.ki+_?7;?E(;Gi%ArPn'r\Jbgnj`FjUQ&aYF(SYq;TIp2aY1dP&d6ZqX$3$4W.-EOd8KTqKpLe4c3pM>)<3%[tn1[,IA?##H6"HpV<BaBD_$\Ksco2X69U0a(5)d*McLucks"RQ@>8JhY"6g\]DfWS`nLSL$"h3al=<V+iG%-^M^:C>4bks`UG![%*In.6)ZHdOUqa`_kT`cH38_Ef=p&/,?ep#WG+hk^bT7lE-pa^2jrc`c,-WMD$nuni:'IeV#@-*4M%Q4OV'cqDN[eZ(I86*(/n9\l%#eL_7/+q6=U;`O$!G6R+:15L8F6G`80hu>*`b,DD'+hWR7t<FrQO:/9\ZFd/ZGn%^0dOa!Ca!^c8(:')P?-dI-1=g>jH(JG[pWci%HMD-1,dCrd5AGY>?qNa6F'SGeMT74!L9FNq47hdYa7tJC"8h.I\kaL=+,J!sB&+PLqS-%+g@Q*8YQkL?Q59=@'E<S3qalHnNJhFi%L6RHI/7Yj@VrbGJ'D(b</FHFhc-`h<4;WeM#mHItH/JU[D9cdSWg1u1)9@SIB*P6.a&#JrS-NuNh=H)lhJlHp6Ma`+$)mI+gP*^a%Ua6Wj:!is6c>q`lL#@@oV:1Ie#g_!<DXj'O_%Rbeo'QPZ*mPKpU9lS0\iL]2S3SO<IU!OE$V!im[+2=[-OL)f`H%cQOhWN&1BRdh%=Pb>VAFD8\CjW3`ZZF^ais'q,:A*\DJ=DL$W*e%[Bn1Oc3j2k7-*Hi'2q"Z$XjSf*Q[g)5`MbK@H1D5=(hesif@;7<G>PhZ@5;OX%C`fAPk04EikqW**h)a"PV^8t;9Qo"FTMer#1hs:fmFkEN+88HA?o/O]?$.DQ_7\Q-5tjj2YTF?[#c250dPT*Y^JGm9Qrb!UL+!Fe%\A:,9d=h+$8ZmM[,=.btS_Z#.T)&WY6d-[XjN>Hp%;?PI%CN#[O2VO%>m=X9`1j`A)U0d6jV8*?\l,(!JsAga-1sZBFXn,h5+1/P%6Iu%de@hh+=V@;!DntEmEFOG`.&:-_,\^IaZdRjhj*61m/FRP#7=he`\TF>O[5`G]63#0#eO/N:]>^_dh_.N72'?97Yk0$1NMp^e%fp:J1m7PGWTPU4"%'.]n&R=%sGgEI)k*VO8LZ#^=';u9E$T!N$N#hEWSGQp?We(A_;8;l9cS7#3BV"#r_RO,$8'08mC&mhf%u`?d%,o+m2ep<J+<[u*#.ihnsVHn.9XbJk(!56bZ&W=JmBl"Bi$-VH[nJ0tB5;a+&nG0H^IJCWd<UQumA?G@0/->K'*I5gaM2NLXg&0&b%HP?JCh;immDCWei4U!!sGs?E=%gjfoE.3`JK/"i^/b<T[N.]WiZpmY^/\t*pooXB4L-<sdIt'P*IMfkBg:?:mjHB;S8j@hs]V3qu%+[!WfBiDj:4eR-4URhk_<`-,!,a.enT3nRJ;(-4,1sg/Hkr+6sA#>Vg5Ck`!Hm<+"WPKq`TT*O'HEct9R_OH-VMG8C1I$cr3.J.m%b^$n%B/hm)>A!\!(.++[jZsum7l^omHer]?Y3#2i"mJV.Ne%o:%"SG5F6$?!-0WiDd;Tp]L)!r/j4!Oc\&Y$0Z16\]7KI0.MsJ'_%W<c4n)G)sU]R1Q\TP)oP>.q:]<9KQ/R0H(TD_BSDrrZ!XJ]kp"hIuLq0W%j=G<%2Rm.:aIX8derO.Af_2hU6\'bsKj\DT:6!#"Ha%Vno;WX^fRkqD?``7>)Q&j*.LF$7/%-KMM`;!i1JPZ1XKGglRK2W+)+F@%MpNT:&uVFQW@N26`,I6fJBWUUXuc*K31(fu2L9,OtT(%mKN.pS](>Cp30k@dfp_kV'V<a-3:D4%duiH>@9dD^nNfHWSmb[KK%4Wjf>q3p(!4.W08[TJsq`<FktS3!pBA>1ih4&FLkKnlU)%Q%_[._5HCK)"TgF!C%0TUG4?:k+#LVb[")O+Hd;'a`5]ej]aZ,pLi1&tVS.C"7m`<bKq<mg';l'6U)<-WSj_K[Mh,7U<;W1CY>a?=9%'n&#Pd(;;i+PGX:I]NGsW(n//hV=ToAVUV%eIY%J)K57,m$Xir24Z`Bh+:#+F@kAZi=PFE5@rn\Y'f4;3_MEUEs+lfORlc6?+,5I%/AM1&oll<8-O/i3_afL]?[S>B?Di)+/0nJ(:dQ?6l_5J*^_>_2BJ\'<2bCKPn&QUe852X<,#*#s2>nNR!=abmbt"StA\(=%W;BsD%9ulRD\kutt7eVR"Xr:tD<_knad:R;?"_(MeTQ/IKM3%_I;:DL:'MK1>Um<4#o8B%X2%f*Mo0$@5Rt$1=R4W@mZk5Z4d;O!)L#E7k%<ORdPf8-]Fri8:BSV`S?V*QrO*:kE^ST?8[bY!Xp(7Sl%hmKmL@lI#'g0E(J<8pG56'H^'.j2.<`sX)a])IVjZNh6Q<\%>%ao6+D%V!AMZ0<H@?AIcT@p!u/8cm%,AC(][t<naTqjE5S<9$A(k8`Ql-edHq-h:Gbc<4RJqD-R5t+\LKC_UShN,K7'4RGf]Y\^e>BhTd$E%i$D'YN!Z.5*GM%[[.Pq[<0'B0`d+^u.=7'o-qk78H1#[FNi<4[51TJ5]s#GJh;S,U9LN=Yf";K:5K6"u"T*&M?f':r[j!j?jU,!4%^76*Y9I:X]i=:&---TRq5R/.-(Pk7sr&[!Pf#;\22tH6fBDTfHg!-_9Tm<%hiTY8&nK?DA\Bpr0<Qu/6!_UhGd4qXq8o9KX!)h6C%B*,fLaKQl1M>8n]\=;Bs3ZtE)Us\3?@:)<i@k9/`[9r(p9<Vj(^'pJ%:QctdS]3g1AEo7S6Xff]/>MsR"a7#-eY1ft=R3*0_h`(D%"J*(mM?&#+;b'$&i?D3Cj7@<el00XDkhUfl4AG[i?pAeg.Sml0@<?Q<"lN6j$lqeQ)7\LL12*4@`D*(0IK/s[F9#q4;0nWe05G#t%]O;VDLlh"8KJ5-\@l5uernS".1dDY2]fsjO>^g:r\!h5%`K+DN;GYLbEQ?iiFA(,GaiET2S%i0^1L:;gau+i@`;U^G6'AP'RA&1Y%obJ.U&0r5LmoO(J([Pt[G=DI>a5t='NEj`?5:!oF3eol6XEfdpP=VPGH4Jj"FVA@<i^S%Icp[nYmB%nmXDF!rE+QOGA>o<S9K>;]%`+X4S1"dF(al.;g4f1M(a9%?DPN:9M9Q2eXPG"dm0X@:9)pcIZD'Sj6"3b\KmaeJX@LfNM)Mr<"YUMq`kTl(?4S5J5d)Kpm81%uL%]/4q?%\,9hEo7NklCq(\:Bim?'ckq?Q!\CkS:n\V))mHLSDrJ]f&t+kDZ%ieYk`<8DaV"jRIlBehn,$V%8r.mc)<smN%9NSU6O'.%Ne_FTq,5@%8JpP*$fh>j0=Onk.r0W,j2?FV;*-JcYmnn&6(?SWnK[<=Dsc^mVY<b?`b!#%63M4=#[%[gHfU$1;bn?K8aM]dOfVUV%I5];FJ@<7je*2tk?3i`Wpo9gfY,AlU<&.fu$d>EeZqAr6DO_mV1i[<R9sc/0?VP5V)GQ*!`"LZ:EGGNHNT^;gka@Qa8G0oGoUH?U%P(XQ9:I,W=V<'Q7288]jU>PI[Q:kBJ+O%J&>s&CN2<pp.OKh%6+91qT/Y8Pe8-"@/idMLa_eNWK%[IC<_%IECEBOp(eSqA5Hb@]:%r2,1@ZKG>$>k<SP#r1OQ(eZB2cpIomUX:H5"+uhiLtpt#(*B[_eILutWmHdB.e>j%6gZ[)n!is_Tk7;gE^e[=csomm8eZbR>m-=3%ZG+i<)^:K.264!>,2?",;c4-_!mmoqNou]3N65ad0;ID4m:#;#'(I0\Q0mWAp0b1Zq=P@5>]<V4C`B%\U$DPKDr$`BI=i[\qfRPC%4glHj%j2WRom=n\j/_['V6>L^MLNH^W*12(^XPqY!)@qsgbr+4U2TT=P&dL[%#/n<aC+,-57DKF7IPO%W[/*SHLiHmL@@H*PEj@\%JS;C%$&QdGoCF9EQF6W;9EJojZP5+=FX,%`S@T>I.$9(d2i+=0/m%/bc%2'jIZ5EGW9n>_c^),g]4H<*W0./aJUTfP6sNbb3XDjo%N4&-tf*t<]4?NLCRo:bj#(\N=J,t;Hq]PiHM1u$AOTlOsAn=qF`,68",:hCeJX*0,MYm,Z^Q@k.$^dfCC*8MQ3(57F@1r??Tc$T.%3EX#,dlbUbPUMT!D@C'cqX6;7eR<@1:6M;WiZmnHV3.i1,UPs3RE!djOVj`rY8-bq'd?CG$]^UG.Z"pc8YJ#UMNq7dp*+6HFB0rb%Xr-d(DoGED@l$9(@."VHR1U)e0pK[L5UVWT<s[`/S$m:.lAatEkB[h"$)YV:#YRmL'-h,i3%N'1DuQ#h$!EdO3B<NW_\1R2-]F(]%k,+crOiHZQ#n,M(cA4B1`iTrGS6R(C+p!_YXS5`AD#@u?&B^@nhoL*r)qdEnqMIhaBI^ZCfP(!k/:^s3SN<2;[s]MCL'JD^5*#o4%Au[658.;)>leXj-k)A5Sq%F<G+q4j^mbq#0S:JK*g1HCRV#$]Fi,u9,"J&dZptXdk:VIq:fXc&<#%p(KP7r-Y?oaA7!-5+=@Drc\%=SaE&cmgm;Y9L*K90u@-)?]Z-6I;>,`iZt=(T=$5l.M*4+[rTp\[UMVOsKb[`+7_kXcV*=;G)c!mf9r/_9,"P`O2QoM\',kNSLi^%(<"q,"?tI3HZW0&VFG`3?]N#s(s;T/g&>,l"'0F%3Ic?s)>)LtB)=Ze*^e]]m3`6\3f*B)<kG)3_8q_*7<ei?QBFo:<9qQ)6gr:/%ImgGRJSZ\BgZgS6\8/c$1QSTEiHuFC_J25WN!eQR9%0[0g`*Y>E*C&f866+i25>(@hWA[6N]qJle^kf4DqkiSmD[KRGG7O(h0CIV%6Z4\Q,#OWR)!MmVOO>7^%DH;Mke6%D`u0ZV,[]t8IVbZ[&KZ,D-gpu5%A?su;1`&YQ68i!AVV$Y+^bsj[M8fs^k)P>fe-HAB[ih,%m(Z<uc3Tu"X#L[mrU:W.o]0(]];f*iSl1[NI7Kug--m.ppMgjCF[&]PS_;/mMeA0i8(234nt9erI.4Q]1MLT(HCETah`1#u2mc[D%W&opJ!CpM_+,F9aU,sF3^knso+B2T]C)Usl8HrN\6!BhR>r!=Q2[o0\o1n*m2>(8-K_+=ImZZc037Te:cDiK"f/a3>LNO/R:Fpm>%rW]T!V!FY#*)$*/&:!rM=Q;\Qh=W&3`)In`_<3b9CYb^WF-"Gc(F#"?Tr#EPU2b4O&2<icXJ@d2-oZ&nEMGh'A6c$;6=<D#@UnmO%[*GP$rP!1*f3p9mDJe""7.,7G\\KZH@*q/%\X6ogZnGj0_F57FekPOWG:s[<1Y/?Xr_Z9#qoAkPG?M%@pSK[CnEO<9CK)srqFBZp%gTLX"1nYb*?V'\SjK1P$H/mq/esIcWl#OU#n!Z,kJ_MeJn29p-DVZcOa7$(e0L8m"GYIe>2aV80JK+@<<kh=g/^lA*..DsX1b%R9%(5L&=5$28*Qce"/#Lh3mHM1)"NsY/4/pVV[c:=V.?].+&I.R1G\[<]C^,G^Mf`k6K_gCBkY0_6o=]6gA"Sug*,U(K6HGD/O8B/#R%H`EqR_rFLcLA\"XO^SO,@\bCmiVVSF<,="cmi1#['$qmg<H-!nH(!Ju\0P`coZ1IOZI.$N&VnhVdJ*?5nn1*=(f1&^'XHPh6H4Fg%L>re[Q7p<TKn(o;>)oR71-f"Q;Z_7P\[eY=PF`B&iLWbs.MuQGo[Ol(SZ*Kc%.*,YJ>OGi<NKnXnggs'L!T+jIu\0@BroWb)jK)S%9ap.\K([NTAt*3XF*R;=i'P@KqPA1Ga/9Zljb8lCIbt7&n($/]2uD<qf1=?+O]GNNWWgFK!BKk@5cYIOY/C<b-jWPr6"A1h`(H]E%n;oD7AsTK=!m**=dErqc*1'qqURZ+dXYbQ/'Jp/p^j(,HF%4aLDG0V9=sP.Kb9=>d<M_b6l^,4]SQQRL96NY1f?*@"fhp4;Kbd'*%H7WXi76AXXXdDrKi93+81Rs+@13O96B_V++P`loTPY&6k^Q@V5oS;?7gfdC/F`UqJ"\:c!cH!c^+@0Q[pN]c9>GHY!&AFn'm:udo%)a0nn\XZu:<LnZ0Acj)*pjg\[NQE3kcjXQh0iQ;,CcsdJBfV?8o1j1LN27\5Ys]H,REO../ERZ&-Ie`UlK*a"O`WeFD%H!OXrpHM%'Fi[;]Q<-6`SZi7l\h(iamVnb9=Os(oCNFGPYtPb>#^W=V&M"I?:%*H_$\P%n4t,[>KPNh@J#G"AG#BS*nYUi*MT[Zm0](FA/6N2%qNKd%ZrbN3Ddgg1SRsjQro+a`TWkg^E<D+piG@?lVsDBM18^7Cjm1'uQ+>/==#0)Hs%^,#F+u_4rt0:jPl^Q7K@VtIFEn0nCL<Vp%d)$eW:KI^4<L&RHqT&DjqNPB3V0@><oP%?`'+l%Q&ACch4NKhbO=SH5T]48hpt74uk&hq@r*%oMO'$hO`Rc;CIlT78N/ZRM(@jci%j=`L1QC*&,<XuJ@M!iPOQ7Q@6]1DOG1)In]h.qs2$/m>KOuRH'Rk]k1jcjG?]kb0'I16O]1*bTTAu2YGm>eQ;Ae*b!\Ob7"H\n)e%N[tu-g,ldU&1Yo?;^d(LbIX2g7*G\.XkFpV*D[_9X_QqKG><bWILQ@:c[DP8jn.`t@?MthrB0[gfHIC/I.a!2[`Z>\S^/E=<0;a2%2>2&HkD5D:kW&Gj#k>r`M=`fMNkckPRCLa__OQaeaA#_jnQp>s`8#]O+/B!0[(!].Q=@[hGG\qa`&OW3R;2q9pfmNa5$L>!:+ae\%p0TksW#b#i9`KD8\(s?fN(W6]D^)C_>n&5fhD4_ketk]8%tHm<$A$qK<&aEuD`Tu"Ma!u[<MiAITHb_6l-[SV#Z8s4[r\sTHQu-^%]Dl+mEm>Ead-Y@m+p,gI$a_<t6/XHjFF[bh[-COiU*A&pgfs/:99e!g/O"g&M*^\tGFF#6cT)g-0Yk@a;78LAY#R!om.8sd+&%OU%)gHg`?J&bBJ+8^Yr61joFhd,/GRp1XIAbB^kJkrJmU#hfc,E7W1ZSV#nqEqmgkZ4R[24f98.^!L8:a+G4oT#rDI:cYrdE9\:6_'s%6Vrut=2LALe<nJWJp)$b2SWfc">6&__5Im;:%P`N4W*&I^7<,43DOHnCG;8R>Z%//0SM^467pNs3@FHcd>-3uh6U=Dh"<&a$YimT%"#LUU,JZ7gqGhs(9SKs)5TZF&22;2I/H'3c^N@tqCt`NRnRjC(4j;k&E4!^eAXq($C.#A!^G`3>rjQ7p6-hH8;N;[Ugo<goI@o96%_UHAV60F:,8fTU0o]isnFCA%N9$n3\;\AuDd50HQZD>Pi-27?4a4[4a.g'1nhZkf:l\BeG#cUFSNOpBP.]X:%_UuD_,kW!s5kCi?%+HhK*5'O--fd&RChIf9,19F9#S(L/@/q_^HUUT-]O`PZ$!\r$(LE%[@<5ggEOaX9ELN'D:Q/-u\JS5jka7H1qrE\JWV!'dN"LXM`%opKM:c(KJtXH_Au'[r;Cgf_R\:30Kqnr`le$eE'JU^)Oe""=363W;>1M%L..m,&q$4>V7?HGBST37CpS8aMEA>.(i=$7/jWbM?7+%)+c7O`Va8P.OjNq]i60pdE<E`GV'%,#LW+1*lldpGn.+I*Z*"70QX:Y,QFkh(iqE7X^6qYd"DtgH1,j,+=\TaA5$jLS;Lp-Ve2`N%=\L'?pD!6dlc^c"PN]#-RNi9cNdbE[gBO,b.AG+G3<QGQ4%Gol*G?I2:]FdT(#_e&0SnI@5</$2bJlC*%L!''eMZ?X.a/8JcF76u%XAt2]'tZuffH#P\rnSc@)-43fcQ^u3eGE6/l<Pd@=Wc6h:Grp)^#E8+$hk,F,HDIj_iPWO%gmT]Fk.0j'FWQIl#V`eNUD0>&L=@6%XR-Y]:BUsd0_gMeb4ouq?FC;.d)0kk940bG6Th7O%$.!?5\S3bqeZr_P4gh$K,7f_O#Rk!9*F0rEM_DL,X'/Jk#EOZ`Ni`!Y6ePI%;Y:KeX,gAgZ2MiqXDBL)EW[\cYHR>jN52[e+5TjH-:6C:_j7PbJoh/VKg,((04;f9Tlo>-P*JO?6K_min2hDU:>B8/=u2N74`omi%&t.=E;dqW/X9`;*%!)bA%PeMT,LiV%J/>:4/I!>QS.=EpHd7PPAOJjuXVrH:UXd<F-an!`>sX)Xl[0]mli4Jr$KFEJl%-NW@eD=&%%83i1)Mpr)2fR7*VBX)_2k#ijWkh\er+..c';;Ie&Q1J1qD&$4b8s8YSW>4nBGUiQ/Ci*2@Sq+t4P7)(QqES`=Jef]e<D;.#D2c1%($Fk1_2-'F^a0*h_mRNAaS2epK&E4oTZ#<PN=BHpXFA@`@D)+99#t:kH='1@IPBU;8K&pT5<C(=("EQ+D.*=:OH=hS("k(@UBkME%B_;um2HCAEP<)KJ@I#R/e#L>[/.IZ17L?%uL++D*(Ini*g$XpqFd&gp(1li[^C9rK.qkB&D'V)W#sUi#IuG6ulf=<>+<@8GB"[1W%([Gsm&s/2<#kiDQhD;G`Klcm(X_&hMggkFa"SC$DUHQ82&>8cqm^p0fKMH&QDW(b_+3$HB'XTe=608,?R&K9a,0<b3rJS;f?c<:o%V3S@Cj0'@F_K;-c_=oVW"Rus%<NtrXQlM.@,uU[E^e/j\54aOid#fE$#Mh,?N.d"VEh,S;qV"g\_=ge1&:ees>YlHdIn]K:ef<V4%D:R+BOceoJX8ro`UgClR\i0sdQ>+J?n-q8="Gk.8DJpBIRb8@]#pNe@EH5kj^.3S*"C_FUc?KS+$DNF'/kc^)GjpgR4idQ7I]$V9%-#1Rj:ur<L%<5g3>,DHRmP_i;)70p:+Qp=U-NBYRrtjhR^F4;kd?#_"h',@=3Tre8_+&aQi+aD&(k95CK+NaB*.!mjrg/\0_cd=q%ifI)VK%F!gp=Bggguj=;QBElG#L8r`5)L1,qPpt$[79.W.k7VpFEG!M\iMMYT24]Q#e^rs!gcaC9Vt*YQRY6dnmi=JWs;_V%DP,W%+965Pe*tEdKi'arMa`ofmj/eC9-]#d=D!_iXVi.b]SruFfp.B`D;.5<5b*?&&0Whl5NAQs5<<C9'7qj:%YdT5KeeF-K+3X3PD`B0%>#fH,B/SOo`+9>n#n)MZPGg5+5bQsFIf.=Ek?TWJ-LX0GMdm)4\r1&bbra*Z+SY1Q:T-@?'2h/3*a20^=G;=/,iHa&e8;e!X&Mer%iU`qXU'R$qGH6k;\:kC6P8ZIcB^,7@4b6\&;)-bAV1As&Q4)%c7=`HXTDo>uadXAZGNMnDP(cqJJb`-;Z7:RK#Oa*uXoSBK^N)%6%\0LpSht:4^*?i=":0uIBb<Ihum0SI`XWT+;8dYZIQjS'6Gm^2;KHBXKLK*DPmJ9]=OQ]\f9^.D4QBtUGI>IcCd/Nkb?d6/_'J7*0%f<&pKXC>25'(qObQ7mM^HKi\SY)bMsH9>pf<<0k*V*^@0b"2(R$7mJlhYU?U9r?QH3(n],=90f$Hjj`ao*<]bKs*&KZZnYKRL==4%*E+gKs8IRXY>8aV#C:@Uc)Yu>W8o&.?U82Dgk:2\i?\"X1aS4pGAY/Rni1$6>rCs@\(G\?Hf*OA)k.#O,cK95Vub.Ze@3nN21L?%%[=upV*9%@q3*`j'%hHZ`)OFJ%L/*VJk+(nR&oYZn7KqIbFffUH&LLIb:"`R9]g#mP]Qm[DOlusq:<Q,-ZsRM3N6rJs.LnbDJ)?s?%eC&41C-4lPK7se\bP,"opHDZIrs&$Km;FGU!#t+#d"at7!kJD/jeMC*)]s*GUVnfjS(X;Q'MYLZg:1s!hiVaL^7pS0%-S_N%_Rml%R2jD>cG,F)s(`COp==<iB>>=5&[YLZ.BO6_#5KJs_\NCRO3knYhs'%WY,Si_!%7WI2GLNY<o$"p!Qus9jkRlGOX1Y7hIg?)a=JL+%:k_T[mesJ-1dI:QS4Ogr0&b30i;YE-]6nkdVC^kX_5qlSer6U,L2X$jX_L=g'C:j76I.s4*RB?j]*RfA%:r(FW)c.d@cT6@2sY#i%E"7Een!r9.S*5Y8]sd,OgccpY#,(U:ksZ4O9i,R"k&ii0LqO;mqQO3Y,u3A@GN$pA"&[W<##RlZ+kmHLj_/tS=p]lQh=Zf5i;1;d%n?qVkgjAk1%e$.B75UIi(+3+'U3]sPhcD#nK16&cWV0U0.U2Wgj^pQpNU@%r=er$6V5b$"<%@1T]GO']J.F[\nnA^D5'6BG-;#[M%;ndGt,!Mm"P,/%Aa2Nl`de)5Y1F+HsOtosVXg?$rA=n/9V3^C\]PrF%PC6'*0s\X`rFuER@bmRp5ADQR0Fd5M+e%M=CTJ?ne/1Ju%?\J<#%KqLNb"3PKd#-E'M#%`I]8HRbNfY8-VZ^*rHW-lYiRU!pF.$,l1gC`B&(Bqho1B7Y)%`=*T+c%LIQUr#$Ef?';28o-6e3!d%S:gG.1ZoJjf"Bc1=B2>5@m'D0pA8?]hDr.,0Q<g#]53!AjEn]Q69uBa:N`hI."O9D35tLQ\g!,DM6#Z0./BV*F\k@M=7n5-'9e5k%fSgg=29k!Z9T<o"^&9>^%VK'XLb)-"'6,@!OZjY)DnV@VB6?ha^/h3A=p3K&[M2?urJV,KW-H6@.FT%t*`9&Gc9keH!WUFtBkCl;%'RWU#QC;pEafKL,MPsi[ZD3Lm#.8S-A,Jd\1()o+'4WoT'agqE"C.pfT+coTU\j&Q[IQ].]F?:n$Nc*s\ETPdA_RrngD2=#9\]mW%+br*S8>EN2=j95_8h6S=-)Zj\l[+U25:He%k)PK/e;t"XS:3bX\#M]n-2dk$JLDtR!DF<<KO0kJ1>CK)+Z0B'Od9sh^bg5/Npa`<%XpMuR]hrumA:#Ys<5N4_FAfcjT2`"S$6:Wid/"K$@<sp[o&J97gta,Qg+!`8'H.;r+]Zonop8TRpRdnLh[oNhN%G]M'lo;2I+)V#%r[Jk@*VB,M/cW9!,l3Ib0"lk.0;@.pH(gLQ#`<rIH]cQ"oH"SZEliai66<<s\+032*\r-WZp>T\=E:92Ae4/P*NB!8#haf0Tjbra%m2mO!6(ZDpf-4e0>=/HnOclHlH[UR37,'f'@j?Y\9'u:pQun]'Z!%=Q"T#;5F63g;F@M@TMHX@51;c4!C>W%lfbUku=X*g$ee$0E%nkE+[T_br9>81%&]7B<`WR>C^PagH-brH;rql8Tk'>@e*[]GGA\Z*_PP`7/']UTUpGW%$b;O"Jmnh0l*pbYI>?#G__2q8Z_>ISsc%AI;<>_Am$me4fLgOjCMRLrPPQ=Z1Z)Kf>=4Yg,PA<,uuYWfAj`&HVI*X&P(+@U+cgYV,c^V,6=;/;Y!T,2n[rI+&N]IpK#,(a6.,%9Vi@pBOs&TMcX@OWFbk]JF<Ed/]b0LRisU5=0#u<HJD.'34(u9Uh'W;pu8EP)MCAd6$Gef`e.qA-jGr?dNU:[R1A^Vn*CiCW#]0%%<AIac"A)IU9P^,D4p,1ldBp;PYFqfY!=l4PmS/GICHd+LZk3KD+Ti]K8YUa)JYA*\E5UQ9/WM_A=uF+r&0p6!+MCVWeY#tl=<64,%+Y4W`M3Rsck<=0(g>**FcY/&e-*"BC3roC^@il]p6Xb81qbuR)kS.trHrdWTU)5<T<4b8Lo#Z]0kakF;B&[03WO>GCf)`bYrEQd;%Cnf8hIkF)oV$TZl;a\PlohZeJgYr2N78$-[(bht`,p2RoC5d,<dD9H5WotqZqNT8V_m2\q<q`Cqe`jnXAG6!uojU6Z^S,!k7d&a>%s*idG$eZ]jLXbR8h7&jEY;AJ'<jhIN^qnS-T.,1#:dDPhRF89;E?81c1W!U_]_#P\^hd:@Y`*n[.7R\+hA9)(0A[VCKJj&rN3%sK%Id3V8:d5eTE+`/l:2<E$!n_5fi6HU#Y.X(Z=!mu%&5VsQs''nA>LeNDc6.[=Um\]T]:gONL-[60)krso#a8"/1i[[!&\t/W"/JI8%7'jQ)oTlhC+'&Q)I$;/+r,oBi;7ZuRTMDdZ#N;6tGGC.2SaCmNT+6!3A\/ZXe[^e>!qsQ.%>]g^qn9X!s2h68"=$_dI15-bl'BP2%l9-?t%P%,Y7LYZ8W@Geb#c.WU=g]8ZS_V9Ad`jn9@d:dc90Et!A#*.6q(VYA4siGD$u0]N>AlZE6I`!NObWllcu(^JkV_@7m68"j%:rS-m8d/b3FTs#?NJFq'LXpW1"N0L<0s<Q=&M)FXg&>AI?fuKJO/9Heo)J!oI"bjeUuo5G%']YZ&`c0)<U!Jj.hQS/#E>q^aTU]u%-Adgs?b(#1C[p0F#+$'gi"[a+?53uh1JMg3JRaf<f]oTdIo/UtC-4>.!Q'HSe&<)+b2!V/r^s`*$8hF1Jl7T*p/l*\3?Of:s%OmK%aq<iJg?pbK0B<Yt31,WOO.*L:Ds0IQ^a[VCr^S1=36.elqV9ZN4Dt#*WH?*oN_/7<H/g"m@%*\dqNRqhnDJccemsU5'/YK/PWR&W%Ch*r@A5@lI8Y=^X!1@&D9rqMLpj>j`[f$+M[O[+)Sl;)-M=p3Xooh%1.DNK_g`%57+Bm^p]OkK,*N=Wf:9[QREZt`#+7o>@j2F1!%A(0IM3L8-=`@A6298%0=Z68"V(^Gr,83:L>#n9RKS#neMc)\=[[QOZEOYOkFd9X_^O8(@=KR0=!HfQ^dUP,B>R#JY5)2*H#G)X9k%:,*HOotheNX8Vq5oJl,PqlTTg`MF`PEYgiMYAG*tD%H5o*HQBaq(SmlDs!,pX!-Ut6p2M,KCnu<\7t77Xb_<<O+fV<&"7+ul/<g5%^l,Q>)PD7+0m`1iGr"f2+oHlV=m;@'T:fhi*LB&%']b;Cdk(FA>NeIR;"&f"c;EUpUk@LZ5h_RiRULFG[TW`H@+W,[=LeTrC7;S*%Kaa;H#RV)`XU!J^VAXOGepbXj8n0,IM//6MkN0OrFRo7OlBNC)3A!D-'=>+n0AsAjh&4D?[1%9)#@lllgi!oN.dpoRVZris5R@a@%=jM.BV3De*)i:p-l]!>(e"+^D=(jRXaVH$J'3.Y9Y!E@D&I6ALjL\8,.5^M&rVXo_+[PsB](b(b,B'EO[0dX*osqu9<3@_KR&?.B%VOmE\5ILjQOfokp\$cEZ\#Uko?7Z?,EG/Zk!]En_bhO2kWA2Ycs05V0DNU#&s5hq^;m!EM@@Gj'B1V!_g!0#(Fq(X]nm%*A&?kYl%R%ec[]\/fQ[Hrl9XGD26`tPSbHI^ea+[+NZ'Jb_QNMbn/V^[ZEWRemMHkU=kVA[<N=&F$_e#_$VVuSA=3\\fB%gq%5<c*+#jOJ4s%kslSiKo/KaSMR.N"8(0*\>H(1r#8CS+cIG/:BH"#kruB\W[&u75CdfFV=f/Wa@oA3)0Jd9s!L`^Dd[=o[cOrt$=WT0KYe`Xi1FG]%8VQ$i3uk8DO&-qn4fGfAoS=4Hp=`ID0iVNd;.IFW;6Xfl\utQ'/QoIoFI8>Uf--2H96t,VNO#S@.I=q]2Nn:p>m1G^C@a)P@2+Yt%k)$i"?2/=;PA3BKk*.P.g.?)IMk5Ace.pIf6CZlHmKuhUb0bc\Je7-d*7XO]+R)L8((\?I]nn+]cO;;M?1S?=CobQlI95ku];6as%@A0eP#05(k>gfW2s7l10WV0'5E^_s,oQ#Se]+bquNsM`;'*h)QL.'tp8LgTFo!>7J<K3+%Y%@H4\KVC2KZF8f<j[C%@&kS@)5Q0n%U+He(G/Z/qDNd5uX'Rn<Y&;tka[Y\f9MM;tOd\O*KPaX*EObm>X/58L4LVb:/dd*J&W]@?]DID1CV*t=WL5QQ?6:l%c9D!iO&<#[%#IS'N*oT%@4q>Hcf;&=IDH=[Al('('b8Z#kje79kg&T'17HV*0NIo/,3WqUF\k9[H%oBNBlm$+@SjpB'D"4ugl(ub?6KhGJidK`E%hdGu=Q,\Mh09lVI'!%*7,W+jV_9c\NAC<X:!?lZ)`MTJqc0!ga?,<\dDmb!6Ze`n!cquJQ(M2"lQQq.\E1X-!.EJ/?YeLI\89*W?%<($ghrM2.;Um2#Q8`&4hRAuo[q3C"B]:cB$D-H:ifRA`6b*JWSQ'0dfO$MWY_RW+GY;7bAaBlatmal>IDljVpU=9p27)O8&JlE7J%$t*K3LNe6Dg+XW7L)04SFe>-\Lpj(i>ojoH^Eee)*WoMF)c92"`MS+%A,Ve\g!aV?dT_+=7J*SN&L!WVhq(#7?NM_9/5d3\/Q_"N%_DY:Gr,;8^[?[cr1JQaV&J8"K7Z)O>)E=c;=u"Aldp3AKKb-:8h+cY+,5;q@.]S'6nR7N[i+p\TV`t<\Bj<$'>6i[)H.\D<W4I9u%mos'sO@$an50F+I%sRHjUMb=.hBnNQ\L(cV)Ld5I[9?JPdW`&"\460ham-?XUBuMK<WY8EJ#Y-2@P?81fIn$Aep6K$NNg'4:FPVc%aZk:5]?N&9V-SL2N,-VeBWP/SeV6c[a03heIt\FJbmYSRpEa9@*CkV.F&YY1^=ke]o+,(&?;39a5(&"/<QKQ>F'-7S&X.<&UYU(s%30D8r#/_YtK[&:d0rVnk9gQQ&pY`;=+C5#X#f3$iJcJ%a\ZWOk1B6sn*uufh&42c>^6-FQ!![:RTB$'A=E)r<,3qb7;rh*s/@KjH%;-sSS=@)Y&1JGV/Wl8EbKL#:rYdu@@$r/`foCFGtU*>p2S5'fI)"Y*HSO-V;*`6)!gG2(8%&6oS5nE^D>*Z/`7V2@QmZ.f-#F:53%,[_42+^^gdT<$)8d&DRs-qgk?WJLDN9k:D:.8cXdDNIMoMZkj[^okRaV>Ys[RsH8(e'Suf).1Y8BQKdfGNEhTc"bnD;f'CDjhSnd%FHt7nk9O@cj*bJ/FJG*pN%kudd]q91=82>'3R0<GZ!1m:M4f!QX\bsiO.a7gk0JT`Fi&r\J\S2V#PDM+c1u#Z3ap1BD&5C!FViEr%g+dM3Dbt_.`IQnRktW-.8n;0SYmDl(1)/`JNs+mqQ1$TZ)=eaS+H+Z^kF:iaq3ZVS2"o++k-s4/1(j05p"m5`.Ga'BGL7/9i:'S,%4cP1`2=m+"DUE/a%1_l:7Tn3jNJ!Q:3M!Z?#fbc<)AkfSoPOuPN"WdTED3U+>NT-O7S,#PW#MmBRq[d<:CPg]ek?]!2p4`pXG'fQ%[@qtCG.?*?:nL68-#/i3%.!R8d@AU?b6Msm_HajekMMIAp(^>oc>G$[^H?$[+7Wqd!#_@mQcmQKU%Vl_8KuT/;p`t!"u%*Zc<CFP%@g6(eJBmXK/@>U-eMom@4U?k?nSDGD(=[WSFcBqN5g#a*T>*t;\Le/V?;=O(+,<Zd-T18abYul/9L<Q2#NEWBP'sa624*?A)?a2u%)mGn[#P`h0K\kE=IeCWb""$88/p2i<>MFsdG#^PE+>KtdT@?sE+MKKcH^@**+A%2#hISbh/8@U("PaI!miLD=8'\;emC38d22ANr%"6sn!j(+8VU:MVC.sbOp>_p>*OfnR"i)t@q.tiER/$sL.87uQk@gdVbk?5Ns.(SHg38YEjd0Z[YYB(Lu=Vpr8ISH^Gg38("B'/73%n4UlWVu8>6P7G]<12g0BNsE6@Y+nEPCQORiLgX8?ecTTj)7=e?#1c.V'+'XRjC65@gOe1=&9,UtWd&YL`X4:r5q#NVY>gPdghC(h%V>-c9jh+leXHR_kM$%fNqdAJ[<&h#B[YIrch6"krKcYQ,lH8k-`uK"LmLUl,@pWJF*gd:=>-S@rj+,_j9/l]4eK=rYKu2:@p#NSs%W4r2\SVAI8b^Sldd3g_mQh^FKNAQ6rNp@7]%<fX8MJ:8o>_hcK!i)stjQd!uV-+[K[tmmCKLE;^`kF;YIO3)'k_d,>2!bmSHO@GN%-"K[^k!+-^`Ao(one5QNiIQZB#IUu3Wb7ecf.89-RgPeCXOE=c(QV\Kau+BccYM\4\0IiNAO@KWCgPA)%II9%SPauj\1SPcao:Zh%Qu<e3(*IXP2=!)0Vh(:^5O?j5XESJ*#ba_]SArh/f'3_Ym0D)ZMfEY&;RCdd[XemVI]_BCCo<OIA7J[n\'e9U_8tlMd)hE>6b+l1%>,kX@nCrc)atG^OVE6Ba/LhAKlgKg])ro75=5O4;'?Drbnl^\jOs04Yf>4NjY'\S8TbjkUrpKQ_hjnde*sqc<<[3*l*Q(J=75GE0%ScicIS_L"aF?DZnNp+hVb7>;-5F9BbhKhU%jaK(pc@g#jpQ:uSS#JBZPe>:W!INRbVj(X[;j(eVU>`?U"kl"1An4N7q+?kf8*#IF%[Pp#aJF`1s24=Q8l!"MU+5HrR:Lo)9]*CL+A&c&C;Ap0Z!"'H1_^an'T1`33qpEd7:h-!1FCRmCWa8`!-5$Ykp1qbas4J3QGIo#1%-W'kj-W%YPSD-[Nr`&qQKlS<]W%E>fFc#G7P:95kX9T5"**+,Sp<V)%Ks7UZK'IlN)MpKO5R@ppC3c+-I'H>=??VYHb)<EYqBO##%h*"OWWtBD%8+Rg^Q1OI;r^:!SA=_,`r0Ls"*C8On:/*InQlu/UrVGSB4D\b`Pj@PXid*_A/hN-Hn>/HdX0B%P&EGm3j]&jpp*&%!%&us65ANa6CG8^HLe#S49g):hN2klZeYF/g?/rBR#HTqBGF'OhTU&S&/Y=luCV4ZDe<p*NXFQ4;QXPINo93&fJc.#323fK=`:=8G#%pQa9tL"n@R4)Tlmp".7)DFIm!2?hU@MhN\k]@\HIJ%<QgB2OG1;c##2gD)Z_>Sg>eg-TgMT3I:2CNr03hp2HBe1@i_7\HXS_nAjN%m0a_J?4t?@YB_VDD9>e[L1lK$STb1\OB\.eEHs;c81cOM6u'iC#B&JB4U#N%[bEsNrd]dR6@F*aW`'[$$Gc$A.1C)I*L(h41IFB-%YN6(L+rt\b2c_6YT6A>hfcc:VL;%uiea2TG8S\'EZ^"9j)X50Xs/qGlRqb+JR5o8O2ZI=mHf,5/n!um\eE)r@FK'-A:Bh3\Id`n*%Ml:hXmaXp+X5%t$o![b8]^B%Ej:%A_0Td6McIb-P!&'SiNTIJsbYu4B.=qgT!jRK-T$,Y^.%?BO0mn8`&1>EK*c5$cNeC$]9(U/7%i:I<^HI>2S\`W?IPLETQ>/9#qL@[WWA(,&rC1NMeZSCu^a<19%[a%j.g)5\CRTG'Lb*VAg0'N9_if/VQf'WM,ZKO22c&upsU2o%j%ZDCA#T/F2X8&g$e[/3RbNr'b+X-#V\C,d&W+b&qQB\cnuFjlgmk2Qd^l1D?.S*o\ofBgF4TQ@"BKYYDSFFn'fQHN<f,MN32$`sHn%F9>E,9q+#"Y;Bdo:_6#p+`#p`V"EOd`rOW*@D7M_@ogs\[\m2?c^TLH.sJNkJmh6e?cLglRa2(L#Bll5CF@Z*Elj2VVnE+FlrO`Y%GH!ijddt@]a_D$+[.TMt$R-BKdeI6m2CE(u:>W>F.J3Tg<)5I_a`(![oaIil[]c\)9Ih1@T;O">RUEg&492hV<rF81eh(X6Xi[(e%6Js?D5t-'Mcghg&aH%`.'%b98B]_d@1nrWmX<s`QlK9mWJ:,[kCMUu8>jd>(Y2NcgCLnBQPI&6t_&;<BoV9,@oL?$W#%%[?A;=R_%-`0Mc@V1!6CkgJ32)WN)V;9E+apWU1AmetP2iRpo#*A@L![14QjBuhp9VE0a=,^S#+=`*EXfM>[hT(msU>:jVqLn]b<ao3S0'CsN%&eA2[rY@c\d+jaO7:6OCRn%7m$+:V*17+UXJ`Zu6n)oO`+%%764jiGk<_\H"`,jn/$uWl?\WHm*Gl!BFTU?G5UD_F1S<3"XCV>6J%_upH%*`-S/k<5$PE_]?KPa#,\:1mVp5JHg&AB@D:g([eS'URtfN.uWi[($s#'27.M_$UQ/)Uh10l@0FelY4DceXs='K02oP^)>h)%D^Bqnl,H"Ah`Hb$OHt'&/bC6H=rYFqf1mV5+6u6"9Il3)CUIjlRK9M$iTb5gDXMEoJ+m*jL6aP3q+LA")buTmA^\k$a%=0WqFggl%)-HR=#SB@?R6p,3=CMM_o9-+nYbEs`^R.Q=ElQ]_!4Q$OWYM7&Y#&q_Ws_b;1CZYi$o`PMR>nft,a_BZTN9<d$\fh5Vs<^-A+a2[%8j;;'l0Ue`=4B@bk`I.O4928<c$ssNo[KF1_\>I)^#+#PI<F*ebNNkpEB&JYDWn>*"8h^_YhJK.T][bUZ]/^9TXB2j$paekUtt'b%BCV;AiuZH+#lQ"9R0IWnX@oS?Mrt"diW"='^Aks[`j8_P.ecjK=GYB'`NEdp,3lb;=b-\^#:Y#e`eh+Y#Q-#&NepjNfMFI63>._r%UT#_F\">iM47BP]R-^t%@A$PYjC/-ch#X:&OSXgF(NWY,8<]H"Ha2h]76a2YJ<ocW5Z&PH(,:[!lqb$%"n0eem3[Ymf3OFc2'S%Y%H1h,'nJ6dlRI0%d=<b`d28A@WR/&M5c=TJB2:JF62FR>C9eSdbcpXApfTU1rk:h0Y_9,d!r`s*e??(_M.AeJXmZ%9]lpP<pM;HDI%%,AF18*_-4SukLU:/;_&/NnqXgZb.=mbe].O'BXAjtD7:N.-Fd1:B\/X5sVOm6:\geB^M/9"CI\^O,gt/GGa.T_6esCSflb&3HpT%f<hr!i]pE=PAV0=L]/Cd&Rj:SmLj8f&5i@[/nc1iOfiu%-2/c;N,#oST`9LN"4g/FP^3Bt),cZN7'2P.j9d^EFmV$VVMctPYVX.6%XMJch&I&A0lVRj=R^4pF\V4/f6riq=+Ab5VOs-TP`h[A5-IS\WRQ*U[_l?G)Sgi\b6Ef8(EuCuIU_\+L<q57Q8seQI%K#8cD2p3r%7?rJiN)7h)TdAi_S"!g$'fh?P6V+()'<MoD.FfONIc;<pGH+\V0I=An&Qo?1p_cglIH)Uh"3i?"7Kk*YK.rPJkib]#LcI:X3dQ,D%Tm\5+J0)h<j)%QtFUCGuYk8a`:tbX**HGVTEnN/>]RS<9.O+7af=eSb++L"lp)I!<8/uW;k[]#>g*$F!78h&e*AC%A`G36Z^S'uN%hhF#;0S^@-H*+B;OW7lMpT/<cS4BV[s*WJ,SrI_3Q4I:2Ce[!'EGcF2YrE`BpAo.8@mDn*$L1--*cU)dV530*G6hl%TW7hVGXf[a%Rl-opM^gE_/j'1Mb45T8MaX%e[+J"[@gM<9"r6H0r._kl_`7\/'6XF"j#<046e,@J)W?H[Qb,L2!r,b',Yj1u50jgK,V<_?fiYpS%FF8@NO^OIqFGp\V/<,%j!BH]!lfbM09Vk(U7)QQ[a6W.tdOEcgD@c&R)!e2U0Uoh[ega79_:Wtfp*P-E`!W+MBTC(hATcIf^F7rt%0@D=_o)PtHeCV<HldcR3b4nDj;q&<Hf%&COL75eB`Y0-H]9Q(#^s`J8E+\s7(Km,VT<)juC3:RJ0J_2Z4DsQ>4f#U8^X<2%WT9tZ%c6.p;pN(gVs3T[iq;/nf6CtH[e6E3Tr%'bf/<hsdTd90mlt3Rl!H67;\1@W=!L&f%[\*Pk=Q*r*V@[5',JctpH`iBrn,C8c`msF\%O=:D?bTfG6gW7*JXcV=%YL=L.4eIfp4>dos0(=_SLTFn+5:C1$V'P0(rZr`3*'RCWHoJPmpn=Juh'2Uf':5&O%F4;_4@4F`FsbGe%iRl0J=)$h2N6I1&6PaW,9eA*(%go^>#E9RST7ZM=^+V<2dhX1#GM<?o_$^07DShU(9lD9d&8msIOh+n1jQ;4S'9Xc)[6nrL=/eJQ%iLS7u@5N>M@W2,WUX&u8p[J^f.>_6;Pa+OB4G7-1X#3["0V"a=XEqIn1fKZdUb?!%<`*3$GeBj%<UWk-<@q)P$lV2ulkreoa&%o=%d^@e2CbV\4'eS0\10ci_DOF$H62EUb#JG3A"_1U30%aJl]P,h:.p+fue'oc%laH=b5=N_GA>g0&BCFdV`uh'is/E-(eIQ%eoC&;5%N#+pEDuZeRDWcF)"-qe?&&4pBMmE2:&d#X@i"$!8QQnKdJ99UK=HU=^IR^,X3?`eeG@5l7]Wp!MW0cs2W\%'G^?A%EXoU/\fF.0r%!)V5)3;<L-0Z_%:F+ef_g;W$[*.BP('rZ"3'fZ(:UboTKGVA%Ik80PUUB[)(2*aeN6:gW'np*S`Y78$FQVg6f23h],FXV8Y+`SZ\%B1B,2R=W*V!VRs$)cN4tTJ0#h7@12U4IF1p)n3fla"9gQ)!.Ud1uiAnJq$D<7aA(%C<HGWVE-Ni6OQ-oQ.ndi$":M*K,c`r[<DW=%YJ)I3%/ignbUUL"e!$_-m2]fWen!0/[saMQO6)PS/(p\ba]81^$[rc,J%5X+e!DJ#?N29<>RAXP)](8`//HHn%/idQcf#SEo"!Jh%i!4!FGn.CVL?^t/'-4MBVhORPAmZ.GYS9B&eBR+G<.EJeN#+aUGHRl:9a**@;S2*_^YBn)T,X*ipD@8n$UDHL@!bl+f[2H1d5n*(%<qTO/eB:[s/Co]\#e=[hHe7RCIAPR"bk8<=W`%YF1Uf(QFFXCWgk[NM6>:4mT1(0,Lb1%,gt^jG$q,cTl_E>2q,R=#5L:?<n^hi,%e^<-+/Y_G(Rcpo)O1`7i1;(neJ`_fW6V8*O\%+JO;l_P!r90oHB[+e\o8,.M<l_5(E^=fAQXEO:rS'qTP675'\NBXtc/>9gQ;F[!%;VE9j_CDbJ:I6XX.s7LA-=ji+d&dIMH"[fRPa]eXhhkN)n`",pBI$ES/(Pi#Nf;$@`P76J?'M^pCU&g2gcajtW?Y*0.cRYskYq[f%3<YHA'&2FHY&8[pon+)[^of:#;9:s\,[U#B;!9gT't$)[AQ:=J92?2mc]"'EIf'I)8n9+u>!`$U=YErrF'F\qn=YN.keq"a^K'94%[=2o#i#+gB7$CY2Jknd*(B.p+=DCGMd&X-qi_Jf/WiM"3'J(eHf*g1(9F*$uYs%R!W/qb#JNTUgUJsR*H*dDW<$K%m25MB33HWPH%]th"0QBEh67hi#mBK<<\I^aj)7m&hM]/=#/W5iX><R9FL-H7?)XN;O+QSiS[%'_;Rs6XDr3C-&oaRc?9gT'paH0BC^lZk2A93'i+%A%f/$G1BilD)^e60T?cUbG)FSLsX?Y6p<$*$L7MGq4S-#pu<hdJGoYdW(:U0dU@dQW>H1E@JJ!uq';6,iiA3=YJ?A3jTN*(ij>S;%f0_V&Q2'D=NBP20?OI9FMCglLQ?p!a$>cRL9#4>fE8aqb:ImS;i;,q08SkI-n4el+(GTFOqp"-N0NDI<0eueKB%f].h*a;KIGU>3%O2P81:M?TT<?02H<>a+R3L$+0Y^BnAdC@V@A/fH&Q+[&t;:EdG[ocbNnB+1!NIIGr90.Z;,C[t-!L^D`2ipLs]R(bWCZ)P,-1,TK%",LUd(#lA&-t<su20.74cuMTND.uj=f.mBPl'(_Z(ib^]'&-?dAF'b%a:3+%BYS]lklq].\p\'Vd%#)$De!_#&\mcd>Q!GqDZ;`F%INiS)PDjBYj;=&?=mu'^,DhK>)j49[a>+mBEdt"#<f[<PSROQ##;<@rC=H18:FGo3WAE'OPb?Y:hn7Sf$]Qtu+[fW.=KAa^<%6qH%q@MNbMQ-Nb1u_Jm[S!1[-c8FHGa.ip-%\@s<L@r*Q#We-Kdt!+p.g\QLW6Jkk`0&:L'^p(?\LQ*h2^B2=j[BmY0*iOVofsl.u["W%9fiNHP8)G3_.f1q!fg?<FBp%g>ZD+toD2)BR!Mt5MKdnB!NE",N"h7s0GUBg:_9Ok"G*//$hq0I-_C^h?bp0Z$[lg+^CL*H'dF%W%qZ^>>,5TIif\'B0L)1UW%h`7iN,do%=cp$a$QT+774^m-OU\EQ?)jJD<5g]tKj(\@'!@@sKEsm"_,+^3AYS*=DDsjON^A@&+""1q%pD"lJ/Pa7)IB-RIr9rp[1']AOfkl5"eLBB%Aln\SVr`JC_l*gc06Mb0hL.F3lF8d3ok?[oXq?Atm#A&j_"IQqrKK*03BI''#e?kg%-cp;7+V4"f![W(cE02t!kYKbHLJ0GoE+D6PGc`+kqp'E:kNi\ILo_-uZC5,O/;5FN>RL.56G(fqVZe[bT\d>!Q4$ueBb]&,g,2cO%,4s_,13p.gA:l$K=<(n8rC+`MPNQ)44@X"@-tH1ER>a60eMBDj)m.I!g/-\qKQ&.,&6r*`>#:K%ipcNc-F'6PWPSAjpf6XAh*p^'%6c7XNP#jRVorJ,@;.j:<m$pAW]32B<r8h%!hEWLdM-u`ki^Hl;\^OGR1M6MpgD:.S=1KCIa![]qptpSi<s6!3KYSY*"XF2D^Ds!N%L`[j$-:M)>$m?]g`/0^]5JdZS]q[c(oFXW.O.F6d>0m>K]bCK=WgDjd^jaC\]6,CCTC1mW^82O$9"oeok3a4%<.?3k?%VW)T4f=u%F%dqNUbbBtM@qj$675ee103]I_a9LQ]'f;?]+=1/pLdt`p@%JB-QiFQTt,t`B9g5GTg,7ggV^S-6]+!WcC5naUTKZ^>'dosKs^ZO%RJ0"2qUaX%giH=qBq=J(H@I#DV#fcIIK8U<<Laq=o7P2g?Pu*(_28`.%bes1hN*,l+A[@4R4)T^V']k<Q%FtN*4.5)6,D,OT,*bS%HK<SRQ2*ZqmZ:4=V0RNP3)PI$YQ'N9g4tddZY\nSQD;Eb`>QpD>-_n2%hGU]XS^b_(V=o4MLB=!@W?0*Z,;@jH12I'K$;6cH!heS%Ret.!JU_sIf2,(p$N`58X4<%eK[^PX[,!Bqc(%-O9kl`@q5]S&3L'csYBt3Tnc=T8OFMjHX]d^F.mJ1Q]^=.";C(kPLYqIA7Uo1V%l8RP1D_r%CkMhZVfr"r(1s$t`X*dkQDmHK1XYd%>Kg5\)4!>s[nRkI5hdch?<!V;DIlgd"43\rM,-G/S3>I6A^FN)NZ`GhR,ncrm%l5JZ"Dn":Je2AmqgMgO>-P-B3ZQ)4i+a_3W9_T4QLaM*g*2H>,&"47N?8Xl^&:hMd7c37k3/9n380`kdqf2`]<MJ6=15"BPZPBC3%T3rYVf6km\8)RR4<i[O>5W.:5@97S!!=^i3/N*b,$)Y7gIEF[58Fbp:%^Jl(ZR[N/40P[/jAs3VM*1IR6K8+5f].8[:>/Kod&A:,%ZUr)0&)NYFlmh`'-V\Xpr(/Bo%c39BF0;Tec%jE?Lf*K@6k-d-VgBG?<EJYDXJDq%r%*`GR^O1R\^Y%1n'^[OdV,6&<b*D#7PR7?%j7%Ljc&,J$s!KH=:X:N"T9aR9l'OJ*2R+)J,<m2'f[0sF#dAoHU-[JKA"?A1S=6jN/7mCda5oK-#X51,3`u,@JqT4[;M^:R+f9/B%2]o*_MEUM).Qsr@GTD3//c)?"8eF,%)Wcd%m5KWnf<&hhNP#TLek#Y<#^A+?cAh]+WA'gUTKg)+*iV\Y:qi]oJ"GOqj>1RVBgshi%^l(dESX^5S[tFHYU34tm1<d(&9<tjJG*lQeNK+bXCID_Z;H;0I3J#EB(jVlJ%hNK2>%?Ofk&*K8YjDfQH[F*_\dGM/M;kC3EjVkt%@T^jW7[k6-;rNi,qWWd^][7=imUc5AU'Td6[#=/[M*W(ZCd!gCnXGQH7d#PZhKUHeota=a%gsO<g8,3Z)D4,@.<VDI$X=j=_[a\*%Fr^[OJ&1fZ#SSfPE.:tS>PCIUZH23;?*N+o!HS!I0*Il+("\:g1NU<L=`9bXNfQ@>"iMBIpAu"i@?EZF_<=N8BJ7:FbdiF[F;49m%^rV3Q[3_..P$M\dT[D[mkIDEpqL`qf?$Pt6#=Ti7aKh[LjU>35B.#`<eNG<;7u2Br5Miu.YaH/]gms]\#i-i)'oN#m"AbU0I'ioY%?T6Q2lK=#"TZ%p?&66]`hZu%7D=H?24;/(S;Hd3;8C/8mkI.L%c289f0-A50oXjI?*C(ElmCtm3\1Lm"H\8HB,qtA]oB#UXC";Ze%rE<PACr>pF!AO#nbu7lF"1Is[o=&sH2]>g<6G#p!V]_.`d\B-^KLsq>j,"Nqi7cd/*n?;T(O[oNpR/'/1>EVfV$n).*@Of,^P9(Y%BtOPcZY]iLHim:GFE<Fk$T+I6i>3*+=o&!Jl%YJ0glr_ZAPp7(@Rg+[1VRk[+oiXAP).,[c".ECKZL=D[9t9Dr5DF3gTbX)`n&:'%"k>.`j/s,.B2?;"dMSucVtVkr^c:8)M'@PTJ=p..4obKn=d:i+KSUhH:(&aLJB41hd-!F8ome=-->+KMrS'r)HXCK5oamS<KW""b%8I\"Sq>Q3$7;bE'4eUa0O\2tZhGpi8>]VJsCjT!7W@'c@Z2EE-fj\o3pr.WXTIqnR7\uJ3mk>;NX'SRBF.2B6!X&^gLg3kmkg7_Z%&Oq4\Geb+#4N3+B6=RuFX;YL<l;eSnrpa4c&qe@E)qA=Z^ht#N^1_tSh]nV/li)GCPu'7W;5"df",[j!W$QO')eo6+^/31P#6HB"%GndL&I9e]N$5lMeVt\6FJ)rA,H`C^VnXr8)&p?;s4Y)J9bT8JnC)3ljW,lot1TT$eEG/(rLMG1dlZTEihP)N_^7rj8E@MX4bT%'J%=(FGE1%KA7=7Qlf@4d;U96n=&@-#?/O&^iV&!>s`#tM,<o/ja'$pl-2kScuK7M539VK[01-E7WnV<^=T.a"J+J3fo[RAJ?f2Q]`r%&]XsD/F?%pT:%rE)ZhG9p8j\EQ'63mJ_A9`6-PPuA$QkoU4$:Krj6as9Z+n3h[$7Y7@$bZI4Po,3S7Jj+]RGQ`o/'K_dZp1`mn'9%GLS.j*Y+</_i!aG;A-k7N3k*F+HST+VpL*aC9):C'+SBf'UG_S2#4,`'L=!1)k?O*L]DNV@$KAn?VC,%mM:qR$?>A6*3"B/"0T;?%VHILe;'Je/fBVs!`Odh\-=?RqJT]W`D'e.'q^T')P4i%3?kc36KkdCc4-=s^it*,-ACY_X<mgtp%su'PNJGs?r`iCpW5UAU^h9u?%T<EpFVBY<8s%e)8bIKG-%1mD"JDf_`*^OL,@j]C.Y*A0J`t5-/!oh;T=IX7K'Y<ma.Yf)#SH%Z,Gb&W!__b%/jPrZAqar[5q!1i\%'.Gpa5m=i><tgEoL)Y@97;PQpUuDZq"9hPLo\B=e-CMRt,`hhE-=-(8jsC%D9qn][lS_7S-VbSKJ/&b0:m-Wh4Kr4R:Gp*T\!3'N%A<9EE;iO9k1U+YNp?bHjEMo^#gP6tro@E`po1:;,l1Ao?bkp7P^mu$?.@:]V`HY;C.[$^>fPC&E@6\EhMhjW%FKXN12V"+L<E+)X%4FXT4I(YeYi(Q`c+KoTd/-GOZMpX6fXaaJ"S[t1^le"4PVuGk%r%[LV8s[!]rK>5HB.3t"cqojVftU7j+(0BhH?nkQN_bA+Gg#an%\MZ[=g&u^YJd7TBS/VbG+,4cc(a5RJ:8:=nSq^7i?klj7f3_rRUC:G!opP]2mXFuV34!Xsg2'PM>8o0MT/7*nX_U!'4L\$`(];KJ%hRYf[q?8,R_5n0P#uu>><LO)*INWa%gH6CN((u*2>S+$9/*\*6!)*J#;#q6BmQ#UElNDthn6??V&H7q$R8OA>a&B(/5H39>+#ogA%3qD'-Tto*\4XJJ!7XUqn#!R%qqsjAOXZ;Z]!>aAq7mf=[0a0dHH/j:fq`gHFX1LJFU*5X30X5hV"au)[]cL5Z;IJu:>7K:!i+rNt%FLNf1.@gZ868damNM)0"-];&1Ufc?amh7%!1]e<Cb4?<M=Llj0moR`_3\7C=aY(P'X9Cn\^f4=WBiU(XXG/NgVpHG'ntb:,[6XEA%P0!Kt-J\76Ej1GZ5t/EQs!d>@<pn\MAA'A;402$iQ1Xt;]m))g_'#riAqN]f,B)!7Y=t.JaS>-cj,<,"^XcSC"/dKRIuHC*rR*=G%,5PlI#SG]eak?'/duD;c;ID2>00796V_,ANDIc7g[0"0@LaDjd/h]6Bc\S*M?s!m1Hs1iWKkbJ@"3m_\qhh?MZbbmRV[JVV*B]\k%)YH_rWK2d?<u&!&cIatN?1=od9SAOIfo/b^P9bQM/o+U(ZIc#2%nZ@IC&X,*HZO6h<H(?m1e?DF+o[P#RZ+.i&##S'/Rt>C0iE-)%2oplsa6@fUinp5B+Zi]C"LU9mF@kXqMQ>8Y]%4rc$"XmE$J-Xp2hS0?#';[JRBp(AH<n0;L3\4bN@O*nIThP90\VoZr;^FhWQ;)Q%d1Ke@iKAYKE\eeT&)RQ?.iFRi>H@2sdWLQA^LD48k?)-aDa"R0NF!T<5+`.?6+-"jNo+SrK%@=@@*?WcV9],cQ#Th+76#GcRL!j%%!U"I?HsIMZUT/FUc7gld$u0GsXJ3RedI8T/6<O)EAqdo]D\*\\k#7L62?!#8hlUU=lYZ$QM:$#NI2S3T2g#(>"2-6;Jk7iLj$(qu%nB1Iqq[-,QDtfHZW&OYa*DY,aPeZ(pl458L>H"1tbbre=@%-^C2;\qTE55q)5oKMr7bYQ1FL^\'%!+V4kK,hKH5iLpH]&[NTESkf%=uXZka_NHqIphc-pohqA*bkgtZ:CPF;'"=h%jN/'jFqp^e$)DBEchmaDRaSJL<q(16*K^D\kQdar>(Y3!Dn3P&^DO;$0Yh$V^`o'%6]?hbb6Wg(NSV(masGCO!MQLAkI%5_FtRa2)3AUu$/-%$YrOYh%(88&n3lqaA>Rd0LD/._@Ig&u^d$G`h*ocmF\IV`d,oH,f>M<p%MH_aA`N!&qJ/%LGdjpbhUjZ_KJGLRIqtYM,1$>',Q70\Ol82&loujlQk,-[sO6qs(PtL+I_&MC.N6:3W5'Dhi&lnXci7[K[<6]mL%mN;o:<:*t<R:7IgEZePQ66/"D*m972hP"j@6UI3Ed#te-d9n5f%WN1:6<`\-@7t@<;Y01m%=Zd3"n_$k/O9g5p.sco7*Gg_\0q<?%mQArp);Rf$TRmi5W;*;e,b6btmE*k5rf<?\R&jTqWj:cBDOLLX;idK"i]bHuqRd8^Mm#[XCG'>!"OTaBX%Fr*Mdr4gRXM[hZ.>/Q%e9;e8?T<("6Em/oShVFE@\]XH)!gR>Xk&?KfQt0LDSeD8I;PEj>l!J\YFHn8#K#_Cp,]Ona@&rH8li;-.St;dXOt)-MB\g7FL%_6%<(W=76IiN70:f#j.DJ+ukeK>uin[94XkYi)-fbJtVQV8mh;MBe1BX2LHtkOm\1`"1V';+eQ#pH$j3F*-S-qdo#H2f,r.<D^V'[2j%$Wbt'bWIPsU=T[ENtd#8Z?=J=Srp2tZlsB62tfS(jh=h3EN5EMLESB;P+#)\W3)iqXSJei+E*YTPdQYeP^'$+<%NFj2tuq]3242j%n&\9e-l$6VF"RiGfh0_Np(nIJd6=M[UTB<ONn6:6a]&DclKp_[l@ni7-(Lpt"C"&h/=<"/ig52o6BD0A_7K<LJ+,A@SEAiA0Cs20%.u-DUV7*"Y1LH87:JXtQeC0qeip2r%#3]ni[3t6u1'-b>cC"3TT_P+dY?[L3HEMXg7R!D"Dre0f,ug1ZkqtN!6rQlTaA!7AO\D(?%bd^LBG+g,f.=XU[[I8*`H'JA2H/`C[NNa7QNRM.#m_l/E/P/Y)heH2$"mS/*a+_VJXf6)VXCnXg*\(V?FIP$f"a;jR=#X'B?geHb%]%9VUjHnV@X#6=/<c@0r"$6J;?rah@n#ZD)PL>#EbPZTiEJ/"($!/^a`A+p^I\i?cE@V]uH9*Sek&[2(JjR-IiMT3+G:NB#K*B[o%)K6LZ&E2m<?.]g_7@BR1Wu?:8U\gtRa3kFCjt`$2>CeN>7BR"sg+>bs//W@g>oBMtAsgml7*+i]6!N;lCGgmJ?l2;?C@p[>U0^0!%k^<m9a^m6n[L1Rpn)I6fFchgBhknpVq$H](2JV'ALq6Wi:s5%hT>;S[\)DA\1pY:="S/QQXP_EJqXfhOXb*P&gFY(fp\Z.kr>GjO%O_)YqIVQ;M,`Q]Qf1P^gYFg5BaZoIX$Om)RhWn[>B(GXV\AKii4TsAq@*/](hn_EGCc2[*_71n""TL$9+_e$gT=[m'DB'EFF!_`]%+gU<G$a/9/TG*TbWJkAR1m$K_.u+/j)Y'&I-q$1%1Y<4RLt3UB#6lj@$0#=Eg.COL.JVn;;OcX#f?\cX8)`#i,-'d;AUo\9SJ_(Q%eb$36V>UWIMG$B/&(lh?WEBmn<Al=@4dRF"7&OQQW_1Y/iYnC?CP0.@U$Rl]qM&4,Q1tCmNB-e<b\#eD[/pJoYhBcHJj0930,f/H%./k&6@5P?:*G)!OAtLKF@e'JjQN'$bnQ3bi''S!6=(;!e>5&ND)>0(FoF7TPjKUNIQ?Ec?"trW_`u&:_s)Z\F?a;NE0:2QbdEFR9%e4C^""M`^26A_hT(<;#@$e<'d&:T]9rooJ6jh*hXdP'4!@t`A>8gJZpl2+4h*OH9Oq0)`HMq26<Jmj%31ih^'1(bN![%(30/Cerb%4)4Io\%MLpEpcD>rltbfo#k>8CMoK^>]k:!A)!%PR0G%7i'dhENCA&fE#>_(qlMHd-X]+@=70>@eaJHtDYhQ,:sYE1]n4aH$Mkh!%80OJffH2T*HMj>f,i1Qs`V3)o2W+_:k48Y9VcNr;^-?.g.P>@,8aA!7q-;d?iK#qn4h$IF!SDjp\U<`8EQGLcRl%!G<R.2i>ioAR%Nc#;KVA?aI.]k">,J_[7XD>q;>9St5WpdUha.MYEIf/AU%/J:HEjGO0A)2?I8_/b[BCm"`[?*[emAO>K#CgfCd)='!M$m#!csV'+%02=!`-Z/-+[=>3$NIX@o\]W5q<hhRK@(M\HP8Dg^#eKnTO23<9WKikm4?)<*$8:j9hs!KU+o3s;G=BVa((LNJTUKPIVrL*8!fBJs%S3chIV:c<"nuU[+L%DWeE^QstGL2h!m0mi!qN@__+[ReTrapDsrt`W5F,bU;2qW*?QM+KdROpdm>qL-h.j0,WRKRpW@>I8TGuD.<%H]h+4gZk"GHXsM/(=Jd)N&4iDYCM829m]"3FiF+t\ufT9dRIi7V?WJ)IWuuh0.7tGM[%Gp,\Fgl0n-f'5-F@&:Qmn9TQ\c$>.NDt%c51;g*\4f9eI:WteQ-WoqYZELA'f"Y*]='Z1&og!hP'.En0\,A[j$B.eJr8.#D>GG#N4s?@F?HMe(mAD`!P(%AS[_f0dHT!C""mX%+?B,_.=sAK'r+>h1mdK>ELf%qH$;XUH*1<SH/2LTj\(k+q;"Li=-\^naNTpoVc$,RH#&,&>+H_D)dgrL9#pe<L^??raR+gEW(ou"%>@an2[cqs&25e(,9?k*AYt@Pf#ut^@im?3C::fIf1cVk_]e^h5P%c!sYD$I%g_m3cC:\]%_](nf9\ZDs.=*"j&dp@<0%UP`US2Qn%p<V)t[ATEZ#T].D/N9moN3Q<m9cJV?L=6CI!6Xhj*h%%YZ?1m,MT++&4@ktJ:@n\4<l:TO)G(%C&4t/SC+0mMd5R(Y%")'=_3U&n%qCis49fY^\cSQBtGAq'[/<c2CEF<:u-'$nQ22F@_J<q.)-mRLa%,%tGI=%lO7?eq0fNNHBhDMM%5hK,7Vr!Ug<Z>EZ/*>e.guYTY%hRmc'(?@gg/$4+QfXg&GFu\ju/<<MaQ7F!KSPslJQd?A_Z7\\?6[Re829-Zo/b`d*'L9lo2sg3JUb>]EjYdD;4tpjGEBp12U_CuJ%e5.6e[oA7j9"p>?Ua@H]Gtb*&'++:fSEkI0KSb+'L\3qO:'E[\(1_IbY#f\Sqb4^DjYA`=9Y?K'5snjkBZhMoaI/f9k:hqBVT8$!%&Q&,SV`u#nJGuS]ifRSBXcD:&?:%$M\a&.>+456uCD'Scm]>!:"1cI`=u>A(HgZJna9>'07CANs(pMOj3TMsC_SDI>CCC#.;R6f9%@gf<3a2L[`5Q;7XA>!#%QffX01@CJF4N3`a(Q0eZmKf(:7j=T)]=AGaW[9QJ.OYIbcBk@0(`l.FoVop;b7.e,dO1.d;_+5G8[XiG%G+]`7@L]m0MC/gmk'WA]i^fu(HP4j%f10g>86GB2X7Ni2>)[g2_$jE;g:4\C9a?r,+eSsDYA-_TZl'Z&=FoK\b;+6%rg@bJ\W)$\%!OKK@X^c\qoF)M)/fC];Z[AQA,]3*U$`^i<oWr@!;Dk3=!/3f6<X=;M?UZ=rMiABf](X5I^DG%Km>fY\8u>9_KM`^bMT!UIG6hl9%'>7)G#'ep\4grfd<gp.,<gJ3(QYKE#.(N/qhH'If;(ba#cXg[8dM4cD=Er%bCM&dC=8<Oa$t#hY9]1*C4OR84,YNj:GMcr.5g7qc%^QDZG3EgX9J.Fnk9#pAE%)d&>7Q4S5@CW0)D(ZhnoHX?IRBUtc-FMK*b/sTKj7n<DQ-a*Zio>Jf8ZUC5#QTGh&mF\jT:c46I.H[t%G[H0/<pDJX-8$.$G#Pg9QJu62UF2%'G?d<o'YT^Nfhm#E@YQ*.H$4EcM+aBq9..D&J7NZLZ8:MUe9o(;MB/s3^*9o\"mbl,W.l$E%ADKba5Tk5p.8NJkMfGI0r=<ZU]:uT4)I*1J'C#Urhd24]AddO'&(Fu_&2cjXYa^&)Muc7:MV89c,Q+V)jK9'TD@f!4flJLLht!ei%ThlhTmufuQH!UY+!r[32Gt(9&"5,5;Z\C8.9@7UC;sJY^(kkiLEf/&\r:VnVB1WJ=6nKtbp`u6$8",.JV$LqCN"73HO#QFq;kPq&%)cgEu>:_U;s4%pDp?oGTgL*h*jueZj*$]a)'86aoPdV&\Pfkmg7h=]_:3HT1:b'9KAHJ]1iF4II#@U:8StZ!<2BuIm=3[+AU$Da&%\>HP!Zaqm#c"+YQ@"(F58iI'7IETV:I?o)@Chb,=U@iR(WMX)01;Wh/1R2O[0Gu5a:#I'r*b7$WKSV(AF84_S2F3L>lq.sb1Qbj+%iIA,EC=E-"iPCjIZ$ek/(3G,b5>?HE/Jtm/.@i/^U)0XO[fB-9\jIkrkq1<b?ToXFq\H/_X7[u4G7a%M\AG.g!j,b&pF:!s"HnBG%QL:`X-:t>2J/n)6(r@R?YitA96lFF'aNu&D1#gWqmR680TWFpG%Pl_QF^P>hVGj6-,*jO/NKUMc)K;AK9f9f!2Fs_;"BQ66[<,+P%N*HTJ65X;1q7^nsl8P=sdKsQ*;:grBU3>'!Uf_(S?&)XE'F_RgVSs7\=Fm"'6\$T!9Z*]D,Wg6@?+"IKqFZeM^;ed,6u-&E'@R#5%27<3F^Q-#D!#DS+fXfVn*cjckjPm<6hMAIK16nH<h&q:Enju3i+N8n4p$7g7+]qRX6.,NdE)9*u=Q8)!T17tfZ=r&?%B7!/a`U>,%.S6WtU6Mm?62EEM$K0!B0JpOndQg(,*Gl8XZj)U9CTB9*[#EkEPjleoY<1tbp*!uq12E316d.m`SD*oH;[urOjU5=L6dopWKH@9,%4Y3ph7;;\-n0&!;/Vq-Y$&+B+!Lm+^REXBG8`3]EaQ:M8<$)$@W\#Q*<m4'Ib)qi'DFP8G-ENV]ql1#%p`siP(U5;.N!=s0#h6"X%KKobt%UdXbZjATAMd&t``lDl^,d9S*$E*%JW\X$OBol:WQ-A\J"s0.QKY:n_pH.q8W\B+`507K<2]HH>P7cJFN$Q;P_IJkdqiUB%%/0NuWFEYO#LrINm,B+"3W>i$#"j@SuV#Ftd>s7-2e2\)9[lTI?R,`<\74HaU1^n)5q28hV^RHf^C@tYAYIa#r42qP%9&rL%3LDAD%Tak\2C(RshlA-1R&R3CijHf5&'bOBLrm!9bG)i1EJ8Yanq5+>B[.aW>JD#dt%h%ubnen<V0H;_ViaaW3bQsUZKXE($on`lQ%bN.!%:37RBRQoMb^1*nA)<5LC*K9$\=1\@DAHM.O$(T@Q_mR5K2X'fqVcHHBLAt*-d=CIIhsf%l[Lf`84`NL"XW8$REKkfWZZs3bU.B^T%a-f8]GO+]Mo4Gb/9_q\Mo3J6XSP"$/4;'Z>f=iDl\W4A86?b<KZ;ElPZ#\7Np+!GJKlNA(C@Q?^5,o:n5=\Mt!.cS:Yh$,:5(&]g%e;,Z>VY<Xu7aFp3l6_p`R`"?_R;t['"`CpkHSj\6lT%EU8^/.2<\OjG_6g$/KP=:,P-L"pmdIgndZj'12aCFrgrP@3MQ%%lFdWRa%2nXO.B`ToeL+&61:/#u&0:Zda2+Ht/2N;u8;7fP'[[JljF4"]HMmb"#3+e'[)H*CG>@\qYN1_W'hVQ\>;>!@aAe4S1d,\/=OA+$d%A?09=C@-=\)ZH0f1-HB[P7ssrP"Z'maTOPX/m<n-Q[?W7r//m]9bMBp+t).4Q]V`YKoO](X)=H9dI_?4iY6^@50+ng#YCYJG$Yc#%Q[kZeeka+P=LdsC#H`t2,KWECO;Gq?9rgr"E?4-JnkB\>,=Wq\ATGdmSr"H:$1IlDQ[e;i^:(ng0-eG0RA,;aUW#:Y`OJFSWVZip%e[cRf(.c_G3!Acf:_h@J>2*'&]s7XLC;#6lZ(&2n.5;EmlH,i?.Bm?IINQ`faL?Q6cc9IoHcg%g<n8UP,F[$'f7^FrB?mI8fX]B2%+J<#JMn@dT2;pl29^)l5\f8tAT:AO+K:HSba0F].JFm/*4^],/ZR:_>[c,['Jg+NHbue,a/.Qe%OJ0U8#KJr1"N6F'[BMfes5e#W%cmXajI:f8\9D0(#O0\6_ZEKCK$.N9_kN"0EVp`\$f=g9*2ThA#Gf>h)T8k.)P)OFCd;)Dl3^I^*`="@+^J**?Jj_9@pEZqlJ^,<m%(S"nY9<=q)nQ7LhP:;]B#J*/`9PrIq[E,3RmE6B3*XlhoD"?n/o>$S"Q5gdGVlF-7>>PfP`TK]5-L6o"Cn<JX'(*_#X?ccBl*\cV%&5Z4TK169.A@=0MW'b-L;\gV$VN%g^aEDL5#"%'q!']sJUL8n73BY*4e72EfX<cE]'pM@i4'aQ@m30,>Yj1EqP.0Yr4!pa`5nA&U%VDbo(R2.Ih1s45:oN+S=jG?Qd3b"i6>JI(.gIUNu]>7R-hP2o0MA65)UmV9o3[eMA:62YI`e-A92E\4erl%;VfkX,Ja$CL,)>6^)%Mhf=V:)NeKIm*1!*Iu5s?fQEi0+6A_&?8Ef[Y7S=932T`ZRj\d3"6Pj=G<7f8PrChlShe?5GY@-;tR4?c8hW;-VQt4<M6r7!0+tF%ZVJNB`<a-_991j<`4k3`5E8JmNU0)Q0BuE8A]h^(.+XR]8\Wm4a\b<F''FNnTn\L6\aSCKeG`Q/^;?UXALKJI(sR7*l4/f"01M[=%;q=MMAGkC`N"JHCrqN4UMQ]tAZ5sJ00rYn8^?&]p)iIuKhDj:peKJsS1lbH".^Bmt.*i!ma[+=!`u.1!=;SZ>&;k>h@$&LiK*]pV%q'_Gj(NOEW$3!\)T(#0pm>Xd6V1/,V]KRrV5G>)0O([BUJ:#;tk(<W`V%Qu\T<APp<'6@Y,5^I%go=$M6Cm6pr>"Na.GMU;/7D`\%?G:BUQ)65bKC17OVg+B%a(-&hR6%2>\*rGr7p?%ug&IBl-,6QA<M[ig-V[2?C-!CTcCjB:)^),Zl-tWGaVbE4U5/U%N!\U+Ji[hA%2MlK_b9V6VglL:h0:gf!ac]m\`E$P9/0cR>>Ol:--1YBXMN'EK&UtN0,%#]+/BQt/F\m3<R92=CI3r7c1F\?I;P?fdpL/8M?4sY.%h=!]tS-[sm]lR!uWOK6L1=*G90iVuTDk=(g7MVOpQ[eZdCBFFncc-?i8>Q:lju<3D3$8n\9bUn"gR*L\iDcLl>;g7]bD+Upj2cPJ%fPDFr6>hUBg#T3LLSHS3$36g;=2^'f0q09l,AQlir4mmuGN&[=ZI$FiE7M'iRcW'kV+;+0lrbE92+X$W+_?jsg?qG\;BX-*B06(O%']$D)Jo`jI@QFj^F4*K:cJM2DR<M"9*oV64bX"WY<GYPu3Y3<Gf0V_M)fbIFj+(`[^<\?%1spl/kpDj6*2KQ3THNWT>La%ZDWD16%+!##e1]_N:/8/_6<0Nde0qIU!]DR!o<;,f.gs^-?P/NZKHd\=Bj@QIeB^#1BQ9OHUSLWo93g+)9RR%:]9cKmu!=QCARemha<[[jF%dDNE5OJ,<diqS_.'.'TCBW%pCb7uC>od^sF11<6%Xj:ugG9T:`d7A'Re0<4&\Qbo>)bR_"7%tT/;;.;BdM^?#3-1tjEqcM-(a_i6%.I;&s8abW0d'St!RGfmb`eFMa'[Gk8X*nBRFj*E.,:'!<UAgfj*2/@O1kLj?XRDr]QQkL'"\fDM)d-f;.n#!MngeE*\Ea\KY5(N"%1V(_?pp[$W!PbFH`P*L`11FAl.M\Yj;f"eg:.ODVi[f*K\E+RV+@1&K9/slp$6XZb3!M.l9ckabj"d/2TuSnM.*&5PN\2+b36k.X%gN<ZnkYdCu3QC.Xc<b^m[?5;@@^;N8X^++qji?@\IWtg.mMEkYZK^rHr!7,Q@ZT"co+rk"$NSeZFW[`5+u"kga%5F'iaH;R>$5nh%JI/Ec9Sa^=nYqg.?R_g]8nP<<n4h.3KTT"'`+RraY<L4WX#hQ'/h-&-o$i#P'.,br/Dd"kk\mY[AR(X&7>6.7L2HS=<f8_AZ?Q2H%anJiLYbVn#dkaH:c7lXg!fJKCO$oD[0KO-=hmflm>=dQ=>N`K1\D&Z!6k?VTbQrt%DBgZrMuWj6h<e.aFG"F/"^nY&M2hD-dAPQ<%:#h\^r*]@ILVP4%0CeR%.)l/LL3X9i:2l7;n/F!(2R:WP1YVk25_2Vela5n5Yh*m>g00\*DV+8?iR5\uIjKM`aro[RNoTbV;t-1b%X9Wd&F`8<O.P*@PhM9j#(gMcTAhEe=2bGA@/5[jk?PNkiX`?<80@T#"6n'>hF2Nna%T87eTo_#p?P?XE>B$;pNG9-\TmnbaQgQMc%r]PQ]1#dN!fOH.uCR\20g,Q*<,oe2YnCh5aB2:&:da9ZMUe)oBX\Mu*W.dtl%'NMqN/]Z`eT,q3VNKL$\B(I%pHMGTr=I/>JBJXA%;oW9>SnS1)g3V*0$]_TE:2%G.+aa$SmQ&X3cE=4_3>K?$s"eTMis9I6V!rDUkOGjJL*"p&^e5rpT:BkKm!E\'h7#1=<'$D>XZ-m3%R4QD1<3akac;_)LBX<c%SQ(50VTO@h6=u!nSL!U_1RG*:S@OXRoXaQ"<tR?P..^>"?R&"]?]B\=#BjORTh+d\A\*bqdXdRo!,pP"%KqIPGjl+c0#>f@9LGuisRPRfXM9e[_Y>K7gm!2Cp)U+/r5hlA0o&P'P&kE4jG/s,::)qj3Ht"@)Q74FD6k!>n'%'UVXBla>3se<8%\u4O`#/'mZJHT=7V";Z<9rSVp5#RZR/>E&HOpd`Q%b>4N4ZJSjP&[M$?UuH3@"GOI]g"8T$$X[(`gAuZ9$O?2&8fpi&^j!fY083r%s-;JG@;h;n:)OQU**k=n5PL^Io0S_<:`;_KV`uQj*u2M3_[GXjN5tLkLbW;H(`tNc-OG!baD_"O,bm7\9_&g/k_j7SV!+=2&rQ`&%]ReM:9`Qn2fCU*]j3<T%dB&,XCmPl=+50-s+tOi1%\73Q.8L'1Ysm-m^)^PTc:`f/?_c5sGf2HjB?Z($:oD1*^cXsM;.%*B>3K+\%AeVQkjuHuQ^/NSb'knX#K<<M'VMH3n8g`cE./H3"KW09)Dq>A\&]EE,Hd#aA,N,0)=(XL"UWN6l,q/*&$B7:s9190q<_gd,BrrXQ%Cg[DL9lcIh1^QGP7RrXgKW6pVjoj<,[O<5A>SI$Sk(J"XQ==`2lFFeC2%:*n1q_:`b:js4_01^QH;_o21>tsb&+^g_7Wp@paE#6]%Q4(;3()dJH0g76h<49q8Xo\Bl(6apjR.-&cNAq]:;+\W)hF"6/6(0@#kU&Ds%*+RtA7ojJ(4V;+TsI0'N=>WG`Ye8l9amocgW5%b%7e)EPVH$;Lm7JIfen0NBKMtbSP\eT#?Ca7m.6Lbs;cA^Zp_Ah4@d]cYGj_5&7fV^]4op0X7h'Rh^-f(C%]jK9fgL3-@&Z)$7;*D+%l0GmpUdVsqDq7A:[T$#=A:P.$Blm`oI+FM'#rO@!,s+()(2]/(^Ye6BJiY95#=c0/rmTaq,>N1d)QU(JKD.;)>c7eZaK,E(1!YOd%#(c6g-m\O.r765Sj.6=FfL_KIdHN+1SWo(VR5=ckVYP2aO0g7uH^fM),(H8=lKTJ<44H1&0N;<0@hX5QmVe,aN!FZ63g>I8WAdci%ctb2h9hUtgd\-128^Ob/b6=!L]XR7pQ;?"L:EiVA_0!Xb7_56H%XtTd/CCae1DVVJ2ot^=0n)>KI.gtd`Zn-dVq@1h*R&2F86-:t%N%QQXf%G&sfRl`8fo9bJ!#XU$#G?Aj)=/sS0Z=S>!-<-7NuNBRQnsV['N65JIR;U;<tmT`<;0mXFd`Zp=`U98jPl=uEY:1?Xtlr:%Mc+jhpqPncc>d\d30Sc-4iZ3Gk,JVL3a$21+?@P8KFa8)I$T[!90%f&UX1WL<a"=GhKM!%&;jEC!JG!NKAJ#aI.fA;iK@t_:2i5]%!1);.Z4GZI^d-''aRCmIFPa7rTHN`4?:%=T?KHin6.p,(`u%YYoB)]mV4XQ$'T&%C2Z-GV7qS:>rFDLbP6jJne,f[MDQ\\EW%`<d%"]EnKPhTd[W[P)&hkq:ThFVIE,jiE&Nr[n"?h\j_2',g[^,TD8>`2R<B?DaD24Z,/YtT83@g]?<CIOnC-)f!f!a:c-dcr1jT#sjn%3Ao(L%*lZUNf.,+NK!J>F^/=IO?i(W*><50QjaPur(9e$8h>Gq^cdplTUHP.n!NKs\R\O9fQBjYo^[rA!WZWP2idJSW#SSn:V.CU%o8<8+i!4?-R5:^(G-^B.oI#<NJA:sZ21f+-7b"GM59MSokdPYO%7b./ko<%lbo[qW%1Z;Q\-bl6PsRWj_0^B,c=V/UQ\jkTZ-ZSs%aTO.'r]Q6sgAIn0)^uB2^QphL3*3PZ&*(nT-f'LpHU7HGas6@cUtF<u!Pl6DhW)LBkOeiJ2P#,a_+ONPXTM1to=0JDco39Zc/4'6%%Z-bpia70?pDbqjg@.b5*/k2J>pf/?b#IH_IA%ih>X(E,^W8ar'm3?*S_$;/O#IfcC7%f^V2m,UEXMc9[7F?e(5nauAnUKoj^VU4%"^f^LCoW#1RFmBPJ1g]46JAFq<sXH[[0%ljFLQl:PY(GA7Skj'-j7'Jo+Y+q\]S0Vs-JhkaQ.J:%Roum"Zbf[3t9RSl&;?+lKku0%@NB]=bJ#ZDj-uR<6MWd.,Su_p-S*a$Q_M30[OT+X>dD?3_h]feP?.d]/p,tZ=B&0'70,&[nrh-QHN0<<:(+)7.WiaB;O2<Rg#"eI%lc!].Od=*@Y8W:Cja\j"Q.?h3O&'of66TRK7m+<OcD#n;OE<cbW6IM5T_\dORTL\Sm1C6oY7^=F][pkG;c'UPmpr:=BqWI4+2POE%35j.:944nMBtTC/VrhgFY^VSq5pgWI8AZ44rp5_3BSZ_P`O(hZ7fVM(@4nB&a4hNmiN[!S?:`\L_h[sXQq@P+lWCc`aV#pd+Rn%Y%__.DK/t^3ANLN'#WP/th5@k/+N5-cBB<g7^*#u)Ab%TAcJt_!D=?>JP]nb1CE$;BsM8VMLmpYTTQO1A^-Fc_4J@Qn?Kpbd7HbZIB%@g(];M+(Hu>N@tEP4tBtY^lao]5MY]E&PinY\fSB!ftgY"6)bjYT5W^-RCKUH^L27$[qVeY4t(3)n'6BKn;CLNsQ.c]^5cRC)aX#%-k%-jrH^iC>]ObfLFJK:PHjO]F;u2:6A+6j$,k?aDYMD2GIBLSW>LW`;V44mbT$mPQ++$o(I+?poAFONY#!gA/psg#SMC6VOKjM7%X@!9(HAioH*DHgdYUZ33jW39FHoN!rh$$<gC+lKGSgK*:#_u5>3Qib\%%Qm-GDqJLSU^3D/@:(%W(&cLL`-!>"MGHUYIWq3UKZ?b%@W_LM_/Bg>A.7g$LrJsLP4<DLoOXa0YTjj>C#:F^Witc.<CTS>_>g'sQV^tR"]3iE@!>JG",ocq%2R8>iA*H9Ocbc?UBq`^Yo6")%ET7,raF]p=/n#'jinR\YB>XN]&_"mH-W1th"9IT5;d(kgS</DM:bPY-;AB3ZW,aSY4Q3mUA_N`&Ae;ss7O-q=Ym`]kAJdj1iL-!"%@9Y`uVf%:6D[>\pP*d`QAN8UA#aQ3Xg^OY1%_Ek>0K9-&VoHc&1tuXL?3Bq[MV*,FT=&#Weu;UXbD#:t%g+^4`=m0eC&r\F[$3<?%W>2B]9J2"#B'k2,FMlFflod.DInHr_B3H*p>]Dr$k8m&ae>EN>-0)N^hJ2d`R1UC,\%-CQN1AOA&GXY6<Sq[/'q<kO=82^ijd/#O%1a"KSSa?uIS1DoGW-<H@P]Y%#89VJ,>MiLc:$\HV%g-ktJ)E*lpQ72'AsN4q8UE04MI^&`(lir[7+eO1*_*B7@&r$FP7<jfj1-N-%/hY-FflCu.\F=5M]^CA("Q@>?qoPIQ1$$@QXkQ;hPClNAZP>UsH%,iE"Z]TI6[s_oN#4d7BcrU;gtt:i^oB2erq)$WkBK.Gj<"(c%lFCDA?-)eD/&R1/"5dD-WFRT/G;U1=mJU;e?BbeQDm!Z=Jh,hE8g"R:ZnK.!46Wa$o_5jY<fHj^@s["9KAchpDQhCo$&hUA66C;>%INR2=MPM`AoJ'VO^^,_j=J>H-A?TDZ/!1M$-oK>QdZ!K/e!&[\O12/l[(i=4qh_At&7cKco3d5>%+N!12FbI>21tAT7XE+tgSGs*%54Y)rC$E<bM5t9)h^X%)N(c18C=XKAoCVhcIj^]>^[\NTZc>T?<ijWtW*Oh@l#2bD[dchDN5u"O<;h8uOMFh3$<BHiZL4\:*b.!4%#a=#$Kim!Jht\nbc!cc2%=1=[OV-c&*%"+0[!VE`dsSIFNZdt**1BfJMAS*'g+DF2&'od<q1XiloLTDZnBf-0/T,*_l?b#B)6N!g%S\[_Dp[3YGWMmQ*m!D`%\#OdhI?^_-c20IbND3P"eagAnEWqmiKJhL3(H#r/.6]-.H$hOWoaCNu'Y7PD`D=U[.3krYL9iYN=PZFA%Id4G\PmZN`%5>ZU<E+fc>QLRCV[1*aoPt$7[U&-<(^d(`H+2OtA-"PsEs^REqSo"ajSY!Mk\9k0@;l[G\D?-?VVaatc`E2M[OQ95%UH/@2Z/s]nBPEcP'r0TlAMId7JKC_Qb=Mp.1/ujFdrdg*jJB37\LO8P#!fU&`3KO("Ncltrt4?hj_rW=U[hk4.cEHuNN)(1UW%)^%_6:E$_2[2*D38e3))5!Z.8cRX:D]RUc[`WBF-4G4oMC_c2po%o]Lg^*YNqo0hchh8@WbA*6i4o@.DD_aEMs\Vo]_d.>`1%<'U-Q]%FFN]UIHH7#Bp$Ep<8\\_-^-"#4Mp^Q?M$.\7T9LQ[GRgL^4ci;D49HqE$-Ud5FS<N2gZ/D4W6GI=g,ZcD.h2M#&,sb!N/UGC=XlK%m[2?f,`M$\cbn/ic:dJ4@$K"9eX`5`Q^<9R!.#YjY%\[:*ut$V'8NGJeX*f%^Wh27R(V"P<4`PMcE8sa;8ZYU.!cV?KZ=;ZlU6SM%2QP\=:)fse,BoKeVbDuO-@?mk)reIuosm3s:[k$]Bs!n^V[f#k3UQXp(G[i2Nn26Z-YOYJs5q:qd#Iq:O5R9.`S]RrrSA[pVb)E7%?B^sQZ<:1q1^]-%B2j'^e'I"R5Zh]>2LB.m/2/Zr[o7HK.@0)DJ>BUV(+O%Km2XrKTVl`fk&DHdM#.j(_d0OqR^7c1:TA-XPbC%u%OT.\)b8Ej@J$ik]o0u_TDeR.H_=$FD#*?#VBii1b+&SnG<.l2Mm\Eh6%P2\n$3:eZ=)M<#;YmL!LiZJX#sjc+HssN]4kk:m2R;Va%Q2(XT=mC"Bs#T:"Y4U,*2n,ocifgg_M[b'^OFiBWs11-\V))8?U&$)JoYg_$/K0:;_GKe9^_s0pjfq2WR)`ZBNc!\>@O"U(&2=_M%PYNkVofW_aKJ8D8c5u`($&'l)'m1@%U38RocRjlEVX8aAQVr4rnf1LALpfsEm$EMP<+2(e7SKkCF\ahO%#F01#>Ge+1sfDUrrPC\%4m:Oj!@q;<ULRRC->Qs$7,4WL"aMAWq.Bt_T=;.1Sj]Xo45>^>9p@I5ii8@.Rib2*fo5+d%Coa3!$JH8:P<gs2dE?6U.@+<9tP$J%8,T&=Zmke+)f3N:9I*(#%jRacdVmmrMY$TZ\,4/2)+'2kqHMEm_ijRP[bqgG<-MnG79g9rg<Y4e>^_,.oLPb[:,``\Vq[_hhf>-t%319K2KV(iE=?WYNWGC&?&R(*^/_ps@/b]/J@,:(C@ft4B_*fpl^enqh'\4[P,=_n3O2A"LcuMk=?VtGd>8PpA;RX`+(8Fs5JEo#9%B0WR0)];WoCM?27oh@$@L/HI9ZbFo5l:-1'LTUt$-?e8[J:^P(Ca*/t"+2XhQY)N:]/SmZ-t[/.3]f$*b)e\b%iL?_(Upe1F5Pco%jJpC!&3g9np3E:[#dCS/$Y7`R?unq<VOpS"B'mB);ODa5aXNF=?j@n%7C8X'S#:O&(r"_fEZ*"/C3&0FG/D[Ka$2/XhorNCE!G=W%'S=WLYY1d#Ojr8@/YLTQh?eQP(c(*;%#BjXei,^:RF4n^1?SDB$8sOk*STYrVhXFCc0iULJFAfZ(l;mu82Ihd]Zc.XS!QK0=j^D*%BF7ceN$^uFrm6^Ugn]YGMj-cP=!1B3I]jE(^.l6cZ0Vb9?rKcm9]3/m"1Hir53H'Qg3VD`5tZEJ&?L9P-`?B01*9'$JhfSfgrp9\%IF?,/f43DfoajK&"9nOVDZ4CeW#?7VBK-^0-g*MSXHaoq[-%K`+Y2Ll4jf,:,!q[b;@5SNX>Nt-4s8-SRc.cYFRI,L5!F,0Ze(ql%4/]udcN"qt:Fs=iW]KdJ0".=>_;PFqUK2Rm754;H^;2c&`(raDQ?fmkc]+TMhPOni9Fp7UhY#^j2N]Sh1/UD5UC4:Fcqs@P[%tq>%jY&NCYACl=&u_aY8W2En(eoQAG&$oAg]/qgn4J#2h.2DC.d,7$3UJ1-Xa9),-tA^pH/Ws8W6'@Rhi_-lNDf,-E],CdmZ@!kM9LUg%(>Xfo>/e^aZA00'A/\T(W+CI0'Oj+MVqOXbjlG^OZ?@ZA!25'UUn)bkD]Is>(+k6A)*2ibb]06-#F0V%eTPu`lR8;<B;)C\W2."0%o?l%sX8;6_SImjuf>l.`b?ONLGu=Y(l:#]B)#P32iW6d2;^[CF.I#G<g.grl*c]=jm#gR-\gUc$I=Yo@+@ET415&=;8[aS)n>U:r%dMsOE,EoanC$S_.>c'>([\.Vg.c#!d_<9c5bg^2([E70RLVjO:+qWPZ$&5jpj2ED[,)Za<)<_T_Zku$QLi@SqqZZGFK+<)u6]'"a%Wb7HFUD;HK()hk_b%9AS8C\!uA7,%9-p`Dce*kn#IZ[19EutOVj0GNN=Bcrrh`1%1<DK[^8849jc:QAdR<OsVOt)XBXJegYR4;)F%l>KX+gbqqR4ju2`!_La?[bG/,ge%W\UeS#LPo\BKGC&92:;8:^'saWZ6WeeS4#5KsV,>&)2m/UNN94/cbkK8T=%ij0\]U(3RM_=p%s.^I&1l'.6Q$3R+cB#<kDn6<RL"-&b't>M.[YmH=Agm@.0?IS&Mo7&j3Q=*':dla@)pZrY`Ge.Q7%>;oJRDTWG-<XerSbn2jcU%j%n8Z`MmHI%02]m40;"e!q7Li'mpB[NW-:=]!ZE7E<!eI8>TXm=L'@_+aRF7bCR@GNAqsITEp!S+=W_fM>qd<Nt*cniA"2j%Y1fT=q%Z<$Ya-)j)p*XMo3rHS5;Ru_XP!Blq4Y,U>-GM:1n!Vbch*[d`J\S\LDJD'gQa7,VbFeo<n9s/MmNR)W``q>L#KG4(q>pqJ5Kj[MG%E"p1eZu3G0i<6V9DE4;[/__&F4l:=PDp=a4=ILIhF:d.oe0rqP55Ur9@]#sXTLShSS0p=B'0re>$6;s7S=05KeiE",qP;-6TQkQ_%>]>ftd',^_\1UQ+P4SRZ\<I!L?l(&$/+Z@QOU_U-XpP><;(mjV1Fbo!E%/Dj2R`0'H@^%:]/NS"]:+sA+D'KM'V!Tqjq`Gh#aI5s%XmihtBCKuFYhN)@+?ushMFKFf"d7uJmrg2QldN(Mr&;</h!IdLRYR(km';;TI,4QV?+t9:g!X+m/L3%8AtBRC2E@eabQJ#uGO6nG%!'4Cg@<'6s%XTtCHZO_NN#JB<o3U3TghM1[>]-ll\T[$$AnO3'90=igYur^g:Nl2:0Y&.4_Ld;g3Wm*&mYH&S8l9N=QAD]%1DsX)%217u;I,rjZqkTKKo8TNn8h#Sn2FD&$Z^*'i$=R*QYbD@nn"dO.%`[?#,<DK%fl$-C$/b[7(^r>,lG?P*f4dLq>$n/2o/K15F]W)_%V<.-D=8d(qb7q8)lgEfq1cHf:I9AJ=4.Comkq7Y6TQ>rR<*lEm&M*r%4"YJk)No9H+3^\Vc]O[Q*ml>W,2FElXdmhMWH?H;BDc%A%i9%=/1?&kkAqILXoLe%UoBMOo-\,>4c1,kq\aikfCQ"Af^)\,&l!%!)Wj#]D0?XP4.MSqRBW;Xa82o<Z9u[O`VCG]n53]c9r<ira%9Vac+%@9>ZG$)=pBsW&ocE1^Z&O__m>>([1fO^%'f-X_6@n9&=7@g3/?'T<Na5)`t6^_4IV;WdYh-P/:`TP34e]OG\,.:6`ZAk>U%3@A;LGC-2E*hUR"JWC_99?YW#:>cZ;2PqVfX/j$\/oH5:%`oGjfn-Ra[g"d/_--Z`8ZaJ1pO.LVI`<\P;I$P#:,VqP]\U`02!;*$%hU9`rhqLAdUO1N3DF3dYm^?L7En1/4kfUS,N<Se?cT^'4/!YGt;MPQ(6*i$5pYS4.q.'ah"JmDT/@;K:3ZU[^o\1a0-+6MkU<c)M%Ys%BV[:rp1jQ^P2mpDjI<CXmG:bPbLV$gO(@C_MgPQ%oXfl2$XKOhpO/g4)jCCmC,8?A]kj0L`?ac.Gu9o]Q,)!ec`e?^E1qJqQ*%P$mBbYEj>>_.\1/Wdh^$a[O"\0/]RH!3(t)4Z-']=tA<D'Q!6f9r!H%3n(B8qWC=dU6T2$o]k4h+:Ar^EGEs[XVHP@.A;UE#\,jQ%Vq]uIj$G])>7h,10BqW5U5WZ;=32tA7T<$K+Y1OAX'<TqC,2k=6^*I&Pk/F3/N&S`&EJ4)T-h=^Ngh8#O&+R_2?H!tX):n'g&io'%APqHH!Oqe<r9Z<$TI:LhZ.2X$Dq?@'QV(3bP^sZ@(?6+dC.%5'm&$R.OH8Dm.86'*)AL@YBNaB@B>1gejho_u^N(9oH7g`r/p.-E%"@Z0-\ZL<\I&5lJrhV!(7$=(S?;hop,qOQ""bfdc-HUs.ImVc$Tq3%5aW@_+:9M>.9e(dm[C3P`+R2$%/q*-p^bn9W9s##UTbOjJ%n[-Hsk76K=WYoKIBh;c#C!G,=mg\j/R7*?p^5]knC228@fqBi1BGDQ(QYY47NPOQ+l2N!jP0s5L1?,>,b8uX3F.u%D\8i/"j"Hp:%kX7oA"N!bKSc%'piK%Z0Rh2IC`*GSkBe_:M[*S,N9IEs:cG0+"`VnfX?>lfL^=<-eD&'%YUXStK[3-A*.&nTm`Tm6Uc-WVUh%kW.%*f*]1^OL!b4SNDL"p-L:&MqtITW$YaEFOH>Hh3KEBH#\Z2rR&[W`]'5;akchZ3ADap0eo6S!?kA10A;+(>T2MQ[C[`6'fQ,NW^8@%,$]6$jH9-S-6ShG$Il$F9D\3m037>V8BM'6c2H*V_]p`tB60*Tcaf@Fcl=4u4q)HJUkN@]P%P?\f3Ro8?Q6ke&^a/"l,fN@K\;eI%g0bfaMEkpB3NYe.(pm`$JP66`>YP\j85-Q)d@FEp9554OhHFodbPgpYE2m@MFeS(pRY@^7,]iUV/_\-KhYLOoE(Qs[BM<Ul*sBWO%rD#/D37D"VGTIR1JRDHHB^K>%LSD>[p-6>5ZLjWoG(c%R.n6;QA0ar^UYRR@n(n;-Ve9<nJg^CUGa;XF3i-C,>Tn2/!"G/<gn]Z%%fYm<G.GpV,KhJKqWMA!O)qK1<cjOV$gm73sAne5^*?`oun8C(MgQim?.mH%bVH"lQCo!ndmN4_<8WsL(e!Fd:WuhLi1sifpJZ>Wd%]&\NM03=!g#3-k#_qKM\jLdsLj&ho2G0h:YOEo@H9XR^.Hu*FK;g%SbAgYoELGIhd=J<:&oc=s.1nW/J0iJ]N=ctU=T2@)"s0A^-%bL0-$>qXColrP:),*,3IQn^>5Qm_i5EDuOBUICC?\1^V([Vk3YdX<4\1FFBhPC=?7O#gOkW)nUKm!suI`jh#oa,#(Y,;95QG`JtN%i>>:FMuh<p,a^J\)$q1#1g,!6L]uip\5Y-1'8\D'%HoG;ODnkd0RBK=,_g^:'=<ut,^*K5=UC`t2OK30!3b6@O/JPWRUQWkq/1]I%[<]m085?lL:P5ApGG1O-J((I^fh(/::2MqiQ]Wb8L\L&T#:!a2>I_QFX?[/9C's0`#uWWaPF+V&-j4`Z>:kJaeQQ1#$`t^MJMs`m%(^^WPb'C2VCRKK2de1U-.AIA9e[hrNBC.WPar[_[VH(c3>qE/mU%4c#LSOJ[gfgPr,o:!dToZ#a8>,\P&Z1[sE^Tf9<.4VsRbBfd%CaF^JOfbtuUu_ipD65[K7GJ"Qc;LA/"DH>WCX@"p+OIVCiN0ag]I]RBMhIEa&4@B@&`QR25VF1Ef9`bS:u:B;6>A-9>Ng%t9RM*k%NA_S)l(ZYNVPQjW$q]d2&tDs.:9P!5&()&*omXAfgQq@EZb/JZqGtG`+>-m[$#19-+9Z];D=;>;>mMZ`iE(u(Kg8<)3S3IE5?b?+%AKItPXr3lFli&d[)i>`=DN3D=J`[T01^l#(22#;74*EG^G[*O$\&PU0>cROXp?"@PQh9']DDV?=Pk5Qj.)N4+cu3W#P'Z(`VG;3P%#R'N.CqZ9..gQZm"IVeQC,2Ql3rq:XKd4^sDSrtrrY+6sm>7(='Xg'Cd\&/=ck3r?burcilYA@c[5gP=,@W.[UR-DhB<egX`U%0l%0/:K.51d+$emTG!dUelABZKb6H4M>97M<(AqWb(*XSW?.aBlqu:,/0($D%0U*Rj&]932o6Ne!)88BGD"6VKqPWItl,nTZ9NQ-juP%KM%_+VMq0dD&i0m'&hGhIrN#IART16`i,E=2@,C1qIo0=:h<mIJJ20A4V@qG2DQ9u$F11[O."n_&(_D)J(3]0r2Nj_O;`&Z1ls*8%RHd6c21j%&B@_V'M!R2ik]1D3nsDss6a<t=8pEskNgIkHGE'>KA!9&uCU?!X"7OU-TI.3/:?\e1Ca/*rdqc#pO'!;Z^6$QX!J0:4%KY.k(`Nl?B8bIQXjs\^B(9Rf63M(RFEq*ft=+H69V,1;((%sL@-d)(\l:oGa!O%5ooj[L<YW3maN=51K@<l4Z3E&cu?,C"r)Zmm@%>sEK=U&B9^D15_b`J0:$Z/g@S,%@QCVtZDD&cs;'F7pbsP9gftX=IC'VbOV=:EQl*qT-oZNjS@A-cUk7jt\b"'C[5'D>f3rruHk?%1P(ANUs#Thd&P<:^X@6@/Omup*_;J3!/E+nr(I9&]W(a<F?$'/cTS%F^3bKg%%\'kdFdFBl:qhI;ACXS0k+>44!&Z9`?XWN`_iVY%BU<&Ko:a4s6je.b&^T9.PPqjI0sF>>GqrNsXg&O$g:OWt%;k-Y9)QRWpPsh]74q_dU=pL-2O=9H/<[OKkp3&R9;FR@AXa98qJjHN%BCSI?/I:>^QP$ue@p[^kU.uE+>nH03#c,WLM&Q1OH2oegX>m@*A_M)M<G,(&"KLEa>%Bh;Aj8bp5Z=!1Rk5_)^3t&tF7PSRdL3=Z%ieE`YP&UP84`,fGb=Mf6,rBOHDp[IH45Is]Wp,<:)GNA*(/5C>,fciZdZ';m#UMiEoC;?_hb/%Q%r,oScXu?;Ia'E&\.?YI/*/+.%ZlKciVkMRP-HhSjh+>JM>=e1Q2$arQY-]^98ceZ_/QN'kFF9p5>C@E9id=b2%nqtYIK:El]E(E0U<?Y3r-5ZFs-=L!HU3u4DsMD*%n,]":&RG&eH8-H'DKY6@"d-&R%V`Md@'R+bhR:<'Xh)+M$#E#N*TNN_j^igV.`4`=@5_;!<5.\qFS0.h(nXg!n/P3"_k/'bj\CT#%/QAsE`,4?KC%a4*okqQ$$GYjMTt7>Q6d;:3S`K$_m!fBhXA#UD7s=As>"`G$r.1h2n60l_d^_,ZjV*Se0aL0hFEdj]s-d:&BS3+e%kNC5$,\7?t%]@Ur@MlUeo#]oO:!i(ZIg"+r3EL-Pc6nd1Uk3l1.=<\RK"pp&9bj<Dnhm'f@pmrY#Np:J.'?d^'5^b\.!crG!)M<"%ALU"Y`1A7"H:hP:ELL-c-APk5\nFs,*kVJQ7"gFp[:s)i*i1CiFF9qlP2ol2VNiUHTD26J3V)qm>#c$eh$Ash8k:^l)?Q],Ng+9b%%f\t<4A1XOiEu2`.+ZuG1F_2?/h(DpOrhT.iU3^ccdq"6S`C97:i9Ol$DdDa7\Ymn"8aG4b9$JdNNHPR\20cr4UB``@Fle&M\PSj%W+T(,T2Kf^p8Qq*e7sr]]##<M\]0pa/Hf&!lQn2uUG9j&o)jo,N0Y0)I2]:se)S<-0&pUpebf-2/up=-Zt>_PDcM\UVf7(G]$n"&%9H_q:^HDm*h8XKX4<6#F=C`?RJ<S0uN3oT$Him-Zp(dFC)63b?'R6QABTP"NA9rPbSdBLHIW8)]&[.aB=sNDZ:@H<S(QYek`5biL%k*:GRh%2EB]FW-"OS"ZLZgm^Mg0heXnQ+c4,KA=UF55G/'+,m@3Udk@NUs5U=dh3\Z5[3*m%Z=-n=9=b8/Y+WaX7rH,KX'?d4Y;K%l\4p'R%F$b1.NtN>.KErmQqcV$RTWgm:m6e1fr#&Q:,I84V(MpJEP!QZnd-k\9Q:Sl3k3tjieo<,HOIa'>qrCF3=f=QrZOqP+49T%#Q\f=cF(Ej+KR#`"mlBHS/>8IU"aVmhciV9&OtmXo-48X#%gO^&,>tFnZFgCj5Oq:fZBUrBF\)FPa:f4Z:9GY?*k-HOBT!mr9I8*%o>0+-Kd28X9G),L6pN"]1mP#^.RDl1`aOPU:-N_Z-`]'XH?.SJB,5APUu`d^<nCla&pD)W0%YbXNe;_,eT#qJEKQeh(BZoGE_oW<%?^%A.2mVAFod30*Et`]lHO0^dAR[iFZk>s!2:AV`7@GB^10M2K2b2$i$(5!&DDtVuU/r=Y@SB'g\R`.,P,9`m!r-AGKAr[$n]?WS%Sko,bXIS^f=q70nijgh3ZsUoH=uC(ZKR7-=XL2q0f^;O9+fJZQNo$X7:uYDHGaN"]o#Z`h)PQF>I6Ci0h6#Kjk]&%E$0OA^+_MtS%j&L!MB-N;f2("KA*j'X\:Zi<]`LJ;.&A?1\C3\IRb<#=AObNN]b"A:0SCth[jQ]ZAYC;.6iaFK6Y:q\6c@/m0pWZVB1nulGbOUND%gOo_+ma^&h*"HkEa+*SS\'*2/D(DoO5Q^)i\j(qS+!,+8(I37um4i[JNU(F4(PuOe*FKMD7^6ep,T"t+2"R3[WSGf/dO9$AclT6d%OY$VLlk9oE5'KelG.pgro@@QCBOu1LQ3LVMm^*Tb(-mu/o`Ob;<@%g^]4=tba'n<n:.P[Eda-`TDK(8NQris94h/mZ[CpAlB5])n%"G&5`]%o%Gq@<q?CeKhF41FOj,R0b\edMCB2:B0Z,_I$^`L^Xnm#878c&>K>VQli/qlo(CofWVRS`5CRO]?jb:I_3bRnm%>)T.DJ%Nt8S6<^VIWg6CPB;tUKSJqT?Cb$2,b/2,@.%B@_>-8&l@Es/>W>QV+E-m2$O28]I5:!Z[t?==2Eo1$%36Sts9GJ0j[1?V6L-)T'o%dOWnke-g_31Q@Y&*lb#Df3nQ_jC<4JcKU-2`30Z9-Pn\)HkWdD*aU^04#B4Eq(cMJ7a3=qm%&iUqokTTWB+&dp;Nb15Xm7;@`g@p%P/;2f'Cm(?4!S,&J[4TBkA7N13mn\:'K![eSd,Ero-qaI4P"2Mhk!qHZ+*8\2?u^-OHhCHPB<+ZGdU>ie7PR'9RSs#$n*X7`s7/:%YiYYH(pI,`qtRh"Lh0Q*!u#^#2JMJ70h/o)a8Qq%7jFmV*suu'2]pZ>'f7DM'>s"C2_@NTXX@aJZ]^gDUOBX^R9$la&P+?EO-d!2%\uTaemIsTqG[[?4$IbIC[8Z5$heiC%iKgTmSAt.uF'-PD^c9bMLu%ka`fk:BHc+!!\!OYP*S^Sa,apH1fA*BQKYMKk!a=^@Gk\1T%nGjB(aq..FPj8\)(d=-_#m6I<;XS%U%-U3S78,tK0T!K^Vj`sJ_*all>a`'V7t$DeIX0Fcnn[=T^[ma"21F`P8KQV*Oi[\QN:[=o%3HUA-/h8gb]e\0(CCk8jU;+gIjuX`gH#\!`G@Ej5N7oL2Q$XkmW@4(c\^;CHk/jT79pDoSN6S\(StB2Ta-)boE<&3@RXiMbXiA#A%d3<=,T")TSkJpXQ^Nam7.6qZ'UMN8S22g-CDM^bt1BMZEBR3BF%U\Ou"L5=WV&1JtgGkf'&?S(T6M*j]^Xle'`lP`P]*UeE:<pP<%>N[i<P>NYQ3s[9)*(Ba@:R^DP#t@Km[BHnL3kXT3`lG4P1:`b)/'eQ7o:e3OOib/:,MfeSKiHb\%GVGe?YAA`</=V32geI)#k_56%+_CZX:a-T/^%3LeRZY7jY?QPhaZ,'i$s484:7Ho]>c>sKAC6n')S_$s\:9\Z6>JhE\!SSnb2c;+!eGo74I)Y3V#>acJgkV$630u7%6;llMPjQK/W]\hX]*(ri*HE*O^@,3.1<$i[DET0,"rVX<WTQ;[8K9W@WjdUK)E2r?59B]Eg1HZp_*-']Cu7=OaaL8S<)>OlUYTr%%ST<4sjOqbXc9ktf@TgBW,G/P8=Ya`4;r"k?=%o_fV4@WJ]UD(JoQt*8Y#E4D?D3J$>md5$!+887I-f=CIWrdFQ>P:pDFt#,qDJm(%GVGQS#DZhNgj1/aj%>C'Ci:uRmopI[q>?hY%U`3O"rVY&_'(RlCWlIIqoVa5F$FBp/tY=9=_4lL+L1+(3s8Yo(M("l>>l75\?</n%jbps&!H_L(2mQ&=pcC#pSlaHXfl:L-[Ng<c67caa1aaAN8HIQr&/_"LUX8uNp6_PsLK*-i>b*I74SohpSne\X6$$7Ion#Jr'KHU-%&M%)f:<P4nqLH,K">VAnQC:*^5'4fM9SGD4l'$?qduq#o.Cm&X)&H$3.-gXLDc84GRQ01g3V@c<"I(9IJm=K/TnK5@/#emFL("sb%iDjZ\FM1%[l^()#MbFBjO1a3B>d-O].ZDhaJ>@fPU+7NgF]i<6^Q9Og(\F6AI`=Hi3aX_N$A6DcXI0g2\QMe'IrQK1,Gb)j#BDT!%ljA+e=_nU?3E7+VMLM1%\0R?qkhC"scAfnQ^EL^fI6FN^IPZ=M=W=+r<FROVN83QsLDPLC8WSh0GT_IT;6R*JGsNVQjMtoFE0fp[%/D5ek#AcXW;2)/Wl7I"&\&**G&YSl6T(7i(7L/BikIp_E1=F$r>WD>6-u'!WQT>]jR-$,K(<.8E[Xsp*<?^iF!Kl7&]X[Be^bifb%$o-Qs`i!'O#.0>YF94qH?]=RX95*fR<_!Xf+Xe+i`s?cmV3moR<"*+TF4PMYG=m>dOU7CIn>cSeVh[=#ik!\pno#(nPE]n531[Nk%jpuMA0h5np:]!UkH5ZT;,#+qMY&Go'(IW4fiJ?Vb3j@@e6lR.V]"`c"9LB">AOTFlg[>Al5]%>P879DF\8GgBBO2pldU'"'Z,7(8%EC][g0WJf[ZM9S91N!g$B$Igh7_`=(0!,BJA-t1g:P2`AAcr`s`#X*TRC^8FdT(JBZsXB-`[?[1OV(uh&Q8b_.MF&2EJFLW9Oe>-%A3YBFhI3+;j8IqiNXEX?(bpT(<.U$0UW9<d%`^a,34NTT)1j9cbM1*,bV8-h_&iEca54DEl!b?4ERaVSdmF.aG,AdfjRq@(];0dE%\*:+3;-+mW$>k=r3nHf7Hl.G//muJ7It0!e(odali(EKM<%#c(V:+5JdqMB$p*M2XJ<.Z<gZm:q9Vu1Inc1&.J<)9V!,a.TR?iZ(%Sh0&d1HiC2^5+u`&i2[^@:eRe\JE(CKgb2)0fXD47Hk%eY:0IX877lEB]J:UlUaBe&:7nC+S505pr6Qff`ptS=s[>4-lqe8[OVO`%HMYjJRTd*mMF$/F'k,1'IAY,I=GW2Ea$e7_2o"<h^6Sae7K<^$D01,"8IHnaf;70D8hAV0+\&;9i$JXG;4GT3K/sHoCT!%T,"O&5%2@UUA_9]^5S'lmHY7BK'Vq1EpKaR#q/6"`JeVb*=b"e4a:d_,Rh#)Wcq$^,fEgj_hUpqVUb*Q6c)>]@`[_]n%gpu(r=%KcIl4Zfl%4pMJ/llZZY+L>olRpnsYSs[;bg>pX8_G:KFg[Nu3Ioeo*A:]H8:orC&H]:)UBec[>8e\B9Pf$3jX*W93V`jpgSpI:XRnP4`gmqdg%3m,=4ba[#BV:(TNdZZADRFF:0>g`n`Hqr7&0@BDE85cPHc?,KrpjF=/V>:2K@&?MX;ce8iJDJ>a9k#T5G8+$lW-EFRFBYBf5=IE[%Y@;Dt#EFt!:pZ(u/M/Lb($eG,ALVQ,:IgZa&PUW?6LpQ4(,K.(0kK"7Y$2bFKn/jFD6d5G)'ar-[LW^6DV\_MDE,$ZUj,4UbbPV7%\9YQuf%Z22ks*-rgc&juchVR/+;rku[3L?`T\kp9/B*Ej<E5:eHHds?J;0P5guZMO>d,.ZUBF$Qqp7DYVhi(bID*OS5'CBj7!dl\%\:*9fIRVF?mdILs326YO>WF=B*gj[?,AEYPKqB\96otN#3KhTGDKrDSaIpp^_jBR;K4_#?TT+.;LIsP0mm0n+n^&TOm.K@NAP2-s%r#@Nl!od9sJ>AIBRn9J5;9U[o!L[%S'$Y6:VG-UDie9Sas-T*MUPRaSLI27?jf*$$.diK;?<FTf!L`i_?<Gm@$u&R9Zl#Zd/eFuq%1+3ZZK"-!uO'jGORVA2!:)9n=\(l-=_;qd:lalIO@-$.4P?KisM>"l$L6-<.k`^1^3_F]jQDNXCad%2ub8mFfl#ieJN_hPtac*[,%ZWFri>B)$_QLG"_?`+;cIoRKpU^u.)ksoU[qbmfJgl7S((\K?JJf8g49$0(LH@^7Cdk>CE;)Z?QlD-E^[glf?]9$.HqCX#`E(19q%K="*i>)6"SMr4e_:9F&_k]J\@KcFOMf<R*XNi;:`'h4USq-9%rV315Voh(hLISXbPm?1$1%aAab1A$NllLmNm6P*1jI+@IqS5+nY%n&f[E<ifn'C"QCC3uJ2LLW38N#^du;MtS6!-Fus;r563Y)*`l=+jJ)%kn0![`VoSP*]KDtU)`W--<G:8c=l;L-]6=u([S2V7U@fl%FDldp9Jlk@::`D\)@cqBh*C>"Q2uZ?>XM[X;=/=jdqT+C)H2>tk5Hr,U9qi'bITKP`m_a.&63KXU`#Q@:rid+0)+H:>#E_:3Kn%g%2mB^u3'JlnX]rhK-<HpP$4dfioellM+7GIk]dmsO^mq$ahCYJN*LdmSL82*_=.VKfo<o0p7GVkiQ4UJ#RJ'eekeNY)^`l]b6#*!t%.9(H85/045Ag8fD+_T[e"]eMGl9Q)$qXTbNpOb%j`fZ''<gH;haYu\6c^dTPWW[#k90O0)=Iq1)gbu@c)V'FeH\Tj#*p;<"jIsKr%(O/Qd:%X+0.qK9$*8h]+`k%_Q3MR03rih4dfT2^$Dst"U:\':lD:MqsTkfPETs_u<A:ddiDi<!:(g9^$%oZIj94O)s4`iXK:(c)>%AOLFQ=E8:IA69@LnV6*k9ThmUrktq(l?`Rm8j>'@c6^m@;<HG=D6h_EUI$-V-B+g0,rR!Np:MOl.O]pb,<k4'JQWi<9rap+<U?g#%:o.L*L"Rk95Z9e+04App!teh#TMPT@lkGp;$.HF_MgRR%U,Jl]c`frCekCM_'q*=6hF2M/.bR?d\r5#;riqQX4GkD6rH\3\hsVl[%I0_ZBPAB'p-)//agFo9#rc"9?&65;H-%*k?^DQ$\g/.6Pg[I+[A\=(NIf%#9e_g@R\Mo1bc'rD&P^@EqhD?-cIQeioB3XLU[@QkC%aEZU#dEb"Zq]Vg]4+8`X?a'8ghq#r*Pc0iXcE3V-$[]N:+&8(d%Z59G=Q[=Eb9,Csp,/^(C7]]E!Z#5`qfWf=E:3[N"n8kaiYHq]%H,kEEh<uFLDVEZ0>@,L$WR!Bk;I@_?n(Z+.^bKTu/T.J9AQit6-a.^^qoGDmfCloSc2dm^76c7],ZKJhd`:kU=@a2P35.7gkF5.s%FLNbLC+)B=n#E^8Kc?)jBC6.V.-I&M"`(apa-AT!>onq\mu\X`"17C?p\TXF,%P$+^!I_p42t;R_Lc6g/8!8^;,+s807nh*=$K+l%67GCK5[+#<J&J<k\(F.pI]!.7;i$?T?Qpq!0JeS'rd;I&7n<UdQPD\oh)AJ-Mn2qfZ=_KgMJ8'O:VE:mX:*m]R#]G+<StQV+8b_o%+32F<1FKjaJ<4,SGs`ajKGXhK!_QiI@<-)K_3qgN,N(-4m?:u.Y=X;k?X35M4u-(@7X6DEOH2N\BFsr60[5L[WV>`'19ZO&oS9XJ%UpD&io00>$P6(5<.``XgI5r_5dsrfpIbaJabK\mpRO2,Z,JE7XZ5s#b$(gDC35#'UC(35f%4rI#P5jLNP2j3>@9S,75@!m<b\m/j%^_u.$3GAs2ocb`)b%qFEVAPifU[HB/$1)Ni''K4/2>?j#X8;-G+5fBU&H$Djh%_h3Np\ZF4sFV@I_&#e`7*%.cqU&3h:-f#9%mcq%_=ch]]o$#2>;NuCeK1l^?i._MLQ`!Q/0eqoV>NJ7YJJDei)_9/[V5rA?*rGe*(1/(3@S"5aNqCFg8<EpK^c?S;L`_hmS>2bctge@%jtVWW:1Nsf"ZEYg,_g&5abDDFnUt19H'@%R#tH]Z1=R5,mNd3/B._6Ym`mpNBfrP'*!f#."%ROWfm@Qg&9JckV0ZT4cKHgS0b(Q,%a[2!RZj]a*\olkXE)L+2S5eo3m(p\cQe-g;J%W;B-t'P=b_/g$*)"rM9E>j_>ZFZ1BHPt;\4Lp+*iJ:'R4?L*G4S^qJX:=[ItO'O%j]<5U)u2H,UXJE`O>A5)B?lUEbT9*"cTuY]a*.$\>N*)NgC>R*<M`tjVtbGld/.c_ldq4@`Y;b,%nYLg\uL496Og%;$>Oh>R[:QQ%XJ35ZiK_S7$VE0qFOR&;9HL.bZe'SNo4t^+H4:./DeJg36_@XjDWY:d&UP](el9to5J)S`8f)7@asX9Ng7/EGa]nKr4dGe[ds+\o%j&M<VJ=S_Vf@)NVY879S8nF6VV_$mfK>Qp`&K^CFY1X"+-O,&,<`/m&mdCPgM=8j*)@RGGF_\0Bk@\AXBO.Odb0W&3re:1/jdSUJ%FD6X$C>?IH?@$hA1jPdc;W0pU;5:%)e39i/A5)FI"mDqF6)Js(,oUurdMX-^">K3krI+hTpQM-@mZ-\;BBiIlQ[\pB%NRL%[_*6Z%*;jN!A2b-o,-<WL>,8o_Ej]qb9+JTeKLVh*.PC8i+I@A#mT-c,/V:m"/F)ek,K>OZ;r;brNc+ZpLg@G<lc`3o-Y1mR,s.G+e3d[$%:Q[u&RKS3<W[H&bIk;]sFK[t$cn@tp#CpT@24D6E)pgPj-AK*%!1n8lk1)WYL4`)gfNu6mW2VYk!AW#J#kjP1h#%Mm>[BQfNWI<p%#nK'RSQo)6SS#1UqQ,]*9p0C/$]Lkeoabts>-cg+oaatWY_pc2.dbt1qjP'k7p*N3R&X#h@.bR95Whe<CFs9#lnEqLo<NV1/?L7S%#t%r>aa"kE+\EXSOt^6M0f4GDU8drF;nn_N&RlW!m&<V609Ao+;HB.+Y[;$M%(>FN*F;@[RDV?!-O+"Q;>>Rj8"P)k@9GGD"PYUs%TU3--q$UnRAb5DHObUsgas9HLZa_H.ohGg&Em:F!aMF3mf4IXBJ/KN1ha26@DeC\M28"5JfX5"EEnq<?ar%)_kf]G`>m$AOXr+7b%3[p)Zi?FKj;KW([EA5[WbM<paC4-q_BYjNQ(:AhHo[s:AL-_`Jh^f44RL(UHlM,c(d[cJ^alP&?I;XC9_!Q*)Snj2>M*'+tbtd_^%^];523mFHI#A!O-c+!A-nQi.V%7^mIcJ6!1YC%I^*$\AU=78aQ)Uo^LJV=<k[G'q3^9o+30S:sU+e'/;EK'PH3Vb2m#T"p^$F\hO%c:UD_2M1jS[;h28\"i%[VQokQ[B-XHjV!g:K>BZnZ&Ws0)L?l2?FL0rB$^dBL2._Ef:r!FiegQ*Lc8*?D42$krcn`V@h?j)12=H0%<?Qb2B\mT#$X>[n/V6XDh-*R&\10o`XP"jnV:Sb2ihU^-EB_88mlYI#X-kFB-($g(U>RgW]E.Kq,[Xh^p<_+JYp>;WmGg;$6nB`M%[Cu"FeK,NqN6#5Ham!Yo>*pA^N!]GML_uFn(!"UfLS<DC=A9'+e^&$ZJ6jl(hN$bMdqu`\kT3QPWTKYtQO?$.WkV.VRLtGJY5C_(%<NuS>8Me'FBub=l:$\DaA'bOPAddV/=ri@Z8?!%a++e-\^*7?qP"7.7WNm%Mlc%=KrB008>4gh)_UCMb3_]]b%%;T-atYK'd;DS@%\M:"/FHe5!'Nb/6FtpV]U^mWF"LnY9U>?\t3IYfp'"TM>-Q@fpgfNLi"[44^@H<C?7\EuW[^AqWV)Ga^hJH2Un]i6L1I,C61:RT4%Q>ntQZ"1%tV?,3f>JL?Lh1q2la,<0_P(hami1e!m<<UjSp[=6s@\^24^`]%hK>tsLLf?L.I;ZU*kDroYA7S#XAB)%K*j-c@_(=$d%mbe1S^I@@DGN_4GD$ee7k4M](c69X77(rYgF3X=YS`NsufS;hUTK-UJ];7%^fqG:\$lSO)+>K0!SHB\%-s1.AW4.^Fbssdr9]WdL%1L>rM>f]oJ8t[lJ[@^Z@1,6qce:0kZa41r5H'`s2Vf"i?AY0.cC)3/Zg)D41L>^A$@8u^&;H^Mn!YiVB2kCld@+C^2g+;AARLVZ7%jh>4S.XO619UuZa(_^S@7BMVi-UW9dY>?f,=\5T2*9O[5N.P_j[BX#ojjfrmm*ujbHV;'APT$N<h(b]ch9Hk^"LLm@Q=.6`F@#9J%euhnT!hJM"f5@?D%[#dM;]d9\s,6:-b:f[j?iPmWs7B[tVtn++f73bV^]+33rPu[&rqu#Qronq.qnN'hJ,T,Vs.B>C5Q:W1^\l.0%J,J?9^]3W7rnDr%rBL>PJ%u!RgV<[`5Q9\-s6\_Dn_8Qk+92'7aRVCR*r\t8oO%X]s7+S<#Dm@]UA~>%AI9_PrivateDataEnd